{"version":3,"file":"static/js/41.0f4f0ce6.chunk.js","mappings":"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","sources":["utils/qualificationFormatter.js","components/common/SecureErrorMessage.js","services/assistanceService.js","services/previsionnelService.js","hooks/usePerformanceMonitor.js","hooks/useGlobalCache.js","components/dashboard/sections/Stats.js","components/dashboard/sections/StatsReseaux.js","components/dashboard/sections/StatsCultes.js","components/dashboard/sections/StatsPrevisionnel.js","components/dashboard/sections/StatsAssistance.js","components/dashboard/sections/ChaineImpact.js","components/dashboard/sections/Networks.js","components/dashboard/sections/NetworksRecap.js","components/dashboard/sections/Carousel.js","config/apiConfig.js","components/dashboard/sections/Membres.js","components/dashboard/sections/UsersRetired.js","constants/cities.js","components/dashboard/sections/Churches.js","components/dashboard/sections/Departments.js","components/dashboard/sections/StatsMembres.js","constants/departementToRegion.js","components/dashboard/sections/MissionImplantation.js","utils/dateFormatter.js","components/dashboard/sections/Testimonies.js","components/dashboard/DashboardContent.js","constants/menuItems.js","components/dashboard/DashboardMenu.js","pages/Dashboard.js","services/chaineImpactService.js"],"sourcesContent":["/**\n * Formate une qualification pour l'affichage\n * @param {string} qualification - La qualification à formater\n * @returns {string} - La qualification formatée\n */\nexport const formatQualification = (qualification) => {\n  if (!qualification) return '';\n  \n  // Supprimer le préfixe \"QUALIFICATION_\" s'il existe\n  if (qualification.startsWith('QUALIFICATION_')) {\n    return qualification.replace('QUALIFICATION_', '');\n  }\n  \n  return qualification;\n};\n\n/**\n * Formate une qualification pour l'affichage avec fallback\n * @param {string} qualification - La qualification à formater\n * @param {string} fallback - Valeur par défaut si pas de qualification\n * @returns {string} - La qualification formatée ou le fallback\n */\nexport const formatQualificationWithFallback = (qualification, fallback = 'Non définie') => {\n  if (!qualification) return fallback;\n  \n  const formatted = formatQualification(qualification);\n  return formatted || fallback;\n};\n","import React from 'react';\nimport { Alert, AlertTitle, Box, Typography } from '@mui/material';\nimport i18nService from '../../services/i18nService';\n\n/**\n * Composant d'affichage d'erreur sécurisé\n * Assure qu'aucune information technique n'est exposée à l'utilisateur\n */\nconst SecureErrorMessage = ({ \n  error, \n  title = i18nService.t('common.actions.error'), \n  variant = 'error',\n  showTitle = true,\n  showIcon = true,\n  sx = {},\n  onClose,\n  action\n}) => {\n  // Si pas d'erreur, ne rien afficher\n  if (!error) return null;\n\n  // Déterminer le type d'erreur et le message approprié\n  const getErrorDisplay = () => {\n    // Si c'est un objet d'erreur traité par notre gestionnaire\n    if (error.type && error.message) {\n      return {\n        type: error.type,\n        message: error.message,\n        severity: getSeverity(error.type)\n      };\n    }\n\n    // Si c'est une erreur API avec message utilisateur\n    if (error.userMessage) {\n      return {\n        type: 'UNKNOWN',\n        message: error.userMessage,\n        severity: 'error'\n      };\n    }\n\n    // Si c'est une erreur avec message simple\n    if (error.message && typeof error.message === 'string') {\n      return {\n        type: 'UNKNOWN',\n        message: error.message,\n        severity: 'error'\n      };\n    }\n\n    // Erreur par défaut sécurisée\n    return {\n      type: 'UNKNOWN',\n      message: i18nService.t('common.unexpectedError'),\n      severity: 'error'\n    };\n  };\n\n  const getSeverity = (errorType) => {\n    switch (errorType) {\n      case 'VALIDATION':\n        return 'warning';\n      case 'AUTHENTICATION':\n      case 'AUTHORIZATION':\n        return 'info';\n      case 'NETWORK':\n        return 'warning';\n      case 'SERVER':\n        return 'error';\n      default:\n        return 'error';\n    }\n  };\n\n  const errorDisplay = getErrorDisplay();\n\n  return (\n    <Box sx={{ mb: 2, ...sx }}>\n      <Alert\n        severity={errorDisplay.severity}\n        variant={variant}\n        onClose={onClose}\n        action={action}\n        sx={{\n          '& .MuiAlert-message': {\n            width: '100%'\n          }\n        }}\n      >\n        {showTitle && (\n          <AlertTitle sx={{ fontWeight: 'bold' }}>\n            {title}\n          </AlertTitle>\n        )}\n        \n        <Typography variant=\"body2\" component=\"div\">\n          {errorDisplay.message}\n        </Typography>\n\n        {/* Informations de débogage pour les développeurs uniquement */}\n        {process.env.NODE_ENV === 'development' && error.status && (\n          <Typography \n            variant=\"caption\" \n            sx={{ \n              display: 'block', \n              mt: 1, \n              opacity: 0.7,\n              fontFamily: 'monospace'\n            }}\n          >\n            Code: {error.status} | Type: {errorDisplay.type}\n          </Typography>\n        )}\n      </Alert>\n    </Box>\n  );\n};\n\nexport default SecureErrorMessage;\n","import authAxios from './authService';\n\nclass AssistanceService {\n  // Créer une nouvelle assistance\n  async create(assistanceData) {\n    try {\n      const response = await authAxios.post('/assistance', assistanceData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Obtenir les statistiques d'assistance\n  async getStats(filters = {}) {\n    try {\n      const params = new URLSearchParams();\n      Object.keys(filters).forEach(key => {\n        if (filters[key]) {\n          params.append(key, filters[key]);\n        }\n      });\n\n      const response = await authAxios.get(`/assistance/stats?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Obtenir une assistance par ID\n  async getById(id) {\n    try {\n      const response = await authAxios.get(`/assistance/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Mettre à jour une assistance\n  async update(id, assistanceData) {\n    try {\n      const response = await authAxios.put(`/assistance/${id}`, assistanceData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Supprimer une assistance\n  async delete(id) {\n    try {\n      const response = await authAxios.delete(`/assistance/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default new AssistanceService();\n","import authAxios from './authService';\n\nclass PrevisionnelService {\n  // Créer un nouveau prévisionnel\n  async create(previsionnelData) {\n    try {\n      const response = await authAxios.post('/previsionnels', previsionnelData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Récupérer les prévisionnels d'un réseau\n  async getByNetwork(networkId, filters = {}) {\n    try {\n      const params = new URLSearchParams();\n      \n      if (filters.page) params.append('page', filters.page);\n      if (filters.limit) params.append('limit', filters.limit);\n      if (filters.type_culte) params.append('type_culte', filters.type_culte);\n      if (filters.date_from) params.append('date_from', filters.date_from);\n      if (filters.date_to) params.append('date_to', filters.date_to);\n\n      const response = await authAxios.get(`/previsionnels/network/${networkId}?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Récupérer un prévisionnel par ID\n  async getById(id) {\n    try {\n      const response = await authAxios.get(`/previsionnels/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Mettre à jour un prévisionnel\n  async update(id, previsionnelData) {\n    try {\n      const response = await authAxios.put(`/previsionnels/${id}`, previsionnelData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Supprimer un prévisionnel\n  async delete(id) {\n    try {\n      const response = await authAxios.delete(`/previsionnels/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Récupérer les statistiques de prévisionnels\n  async getStats(filters = {}) {\n    try {\n      const params = new URLSearchParams();\n      \n      if (filters.church_id) params.append('church_id', filters.church_id);\n      if (filters.network_id) params.append('network_id', filters.network_id);\n      if (filters.type_culte) params.append('type_culte', filters.type_culte);\n      if (filters.date_from) params.append('date_from', filters.date_from);\n      if (filters.date_to) params.append('date_to', filters.date_to);\n\n      const url = `/previsionnels/stats?${params.toString()}`;\n      \n      const response = await authAxios.get(url);\n      return response.data;\n    } catch (error) {\n      //console.error('❌ PrevisionnelService - Erreur dans getStats:', error);\n      /* console.error('❌ PrevisionnelService - Détails de l\\'erreur:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status,\n        config: error.config\n      }); */\n      throw error;\n    }\n  }\n}\n\nconst previsionnelService = new PrevisionnelService();\nexport default previsionnelService;\n","import { useEffect, useCallback, useRef } from 'react';\n\n// Métriques de performance\nconst performanceMetrics = {\n  pageLoads: 0,\n  apiCalls: 0,\n  cacheHits: 0,\n  cacheMisses: 0,\n  renderTimes: [],\n  memoryUsage: []\n};\n\nexport const usePerformanceMonitor = (componentName) => {\n  const renderStartTime = useRef(performance.now());\n  const apiCallCount = useRef(0);\n\n  // Mesurer le temps de rendu\n  useEffect(() => {\n    const renderTime = performance.now() - renderStartTime.current;\n    performanceMetrics.renderTimes.push({\n      component: componentName,\n      time: renderTime,\n      timestamp: Date.now()\n    });\n\n    // Garder seulement les 100 derniers rendus\n    if (performanceMetrics.renderTimes.length > 100) {\n      performanceMetrics.renderTimes.shift();\n    }\n\n    performanceMetrics.pageLoads++;\n  });\n\n  // Monitorer les appels API\n  const trackApiCall = useCallback((endpoint, duration, success) => {\n    apiCallCount.current++;\n    performanceMetrics.apiCalls++;\n    \n    // Envoyer les métriques au backend si configuré\n    if (process.env.REACT_APP_PERFORMANCE_TRACKING === 'true') {\n      // Envoyer les métriques au backend\n      fetch('/api/performance/metrics', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          component: componentName,\n          endpoint,\n          duration,\n          success,\n          timestamp: Date.now()\n        })\n      }).catch(() => {\n        // Ignorer les erreurs de tracking\n      });\n    }\n  }, [componentName]);\n\n  // Monitorer l'utilisation mémoire\n  useEffect(() => {\n    if ('memory' in performance) {\n      const memoryInfo = performance.memory;\n      performanceMetrics.memoryUsage.push({\n        component: componentName,\n        used: memoryInfo.usedJSHeapSize,\n        total: memoryInfo.totalJSHeapSize,\n        limit: memoryInfo.jsHeapSizeLimit,\n        timestamp: Date.now()\n      });\n\n      // Garder seulement les 50 dernières mesures\n      if (performanceMetrics.memoryUsage.length > 50) {\n        performanceMetrics.memoryUsage.shift();\n      }\n    }\n  }, [componentName]);\n\n  // Obtenir les statistiques de performance\n  const getPerformanceStats = useCallback(() => {\n    const avgRenderTime = performanceMetrics.renderTimes.length > 0\n      ? performanceMetrics.renderTimes.reduce((sum, item) => sum + item.time, 0) / performanceMetrics.renderTimes.length\n      : 0;\n\n    const avgMemoryUsage = performanceMetrics.memoryUsage.length > 0\n      ? performanceMetrics.memoryUsage.reduce((sum, item) => sum + item.used, 0) / performanceMetrics.memoryUsage.length\n      : 0;\n\n    return {\n      component: componentName,\n      pageLoads: performanceMetrics.pageLoads,\n      apiCalls: performanceMetrics.apiCalls,\n      cacheHits: performanceMetrics.cacheHits,\n      cacheMisses: performanceMetrics.cacheMisses,\n      avgRenderTime: avgRenderTime.toFixed(2),\n      avgMemoryUsage: (avgMemoryUsage / 1024 / 1024).toFixed(2) + ' MB',\n      timestamp: Date.now()\n    };\n  }, [componentName]);\n\n  // Marquer un hit de cache\n  const trackCacheHit = useCallback(() => {\n    performanceMetrics.cacheHits++;\n  }, []);\n\n  // Marquer un miss de cache\n  const trackCacheMiss = useCallback(() => {\n    performanceMetrics.cacheMisses++;\n  }, []);\n\n  return {\n    trackApiCall,\n    trackCacheHit,\n    trackCacheMiss,\n    getPerformanceStats,\n    apiCallCount: apiCallCount.current\n  };\n};\n\n// Fonction utilitaire pour obtenir toutes les métriques\nexport const getAllPerformanceMetrics = () => {\n  return {\n    ...performanceMetrics,\n    cacheHitRate: performanceMetrics.cacheHits / (performanceMetrics.cacheHits + performanceMetrics.cacheMisses) * 100 || 0,\n    avgRenderTime: performanceMetrics.renderTimes.length > 0\n      ? performanceMetrics.renderTimes.reduce((sum, item) => sum + item.time, 0) / performanceMetrics.renderTimes.length\n      : 0\n  };\n};\n\n// Fonction utilitaire pour réinitialiser les métriques\nexport const resetPerformanceMetrics = () => {\n  performanceMetrics.pageLoads = 0;\n  performanceMetrics.apiCalls = 0;\n  performanceMetrics.cacheHits = 0;\n  performanceMetrics.cacheMisses = 0;\n  performanceMetrics.renderTimes = [];\n  performanceMetrics.memoryUsage = [];\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { handleApiError } from '../utils/errorHandler';\nimport { usePerformanceMonitor } from './usePerformanceMonitor';\n\n// Cache global pour éviter les rechargements\nconst globalCache = new Map();\nconst cacheTimestamps = new Map();\nconst CACHE_DURATION = 2 * 60 * 1000; // 2 minutes pour plus de fraîcheur\n\nexport const useGlobalCache = (key, fetchFunction, dependencies = []) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Monitoring des performances\n  const performanceMonitor = usePerformanceMonitor(`useGlobalCache-${key}`);\n\n  const isCacheValid = useCallback(() => {\n    const timestamp = cacheTimestamps.get(key);\n    if (!timestamp) return false;\n    return Date.now() - timestamp < CACHE_DURATION;\n  }, [key]);\n\n  const getCachedData = useCallback(() => {\n    const cachedData = globalCache.get(key);\n    if (cachedData) {\n      performanceMonitor.trackCacheHit();\n    } else {\n      performanceMonitor.trackCacheMiss();\n    }\n    return cachedData;\n  }, [key, performanceMonitor]);\n\n  const setCachedData = useCallback((newData) => {\n    globalCache.set(key, newData);\n    cacheTimestamps.set(key, Date.now());\n  }, [key]);\n\n  const fetchData = useCallback(async (forceRefresh = false) => {\n    // Vérifier le cache si pas de force refresh\n    if (!forceRefresh && isCacheValid()) {\n      const cachedData = getCachedData();\n      if (cachedData) {\n        setData(cachedData);\n        return cachedData;\n      }\n    }\n\n    setLoading(true);\n    setError(null);\n    const startTime = performance.now();\n\n    try {\n      const result = await fetchFunction();\n      const duration = performance.now() - startTime;\n      \n      // Tracker les performances de l'API\n      performanceMonitor.trackApiCall(key, duration, true);\n      \n      setCachedData(result);\n      setData(result);\n      return result;\n    } catch (err) {\n      const duration = performance.now() - startTime;\n      performanceMonitor.trackApiCall(key, duration, false);\n      setError(err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchFunction, isCacheValid, getCachedData, setCachedData, key, performanceMonitor]);\n\n  useEffect(() => {\n    fetchData();\n  }, dependencies);\n\n  const refresh = useCallback(() => {\n    return fetchData(true);\n  }, [fetchData]);\n\n  const clearCache = useCallback(() => {\n    globalCache.delete(key);\n    cacheTimestamps.delete(key);\n  }, [key]);\n\n  return {\n    data,\n    loading,\n    error,\n    refresh,\n    clearCache\n  };\n};\n\n// Fonction utilitaire pour vider tout le cache\nexport const clearAllCache = () => {\n  globalCache.clear();\n  cacheTimestamps.clear();\n};\n\n// Fonction utilitaire pour obtenir les statistiques du cache\nexport const getCacheStats = () => {\n  return {\n    size: globalCache.size,\n    keys: Array.from(globalCache.keys()),\n    timestamps: Object.fromEntries(cacheTimestamps)\n  };\n};","import React, { useEffect } from 'react';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport { Typography, Box, Grid, Paper, CircularProgress, IconButton } from '@mui/material';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { useGlobalCache } from '../../../hooks/useGlobalCache';\nimport { apiService } from '../../../services/apiService';\nimport i18nService from '../../../services/i18nService';\n\nconst COLORS = [\n    '#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231',\n    '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe',\n    '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000',\n    '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080',\n    '#ffffff', '#000000', '#a28ef5', '#ffb6b9', '#00c49f',\n    '#0088fe', '#ffc658', '#ff8042', '#7b68ee', '#f0e130'\n];\n\nconst Stats = ({ selectedChurch, refreshKey }) => {\n    // Initialiser i18nService\n    useEffect(() => {\n        i18nService.init();\n    }, []);\n    \n    // Debug: afficher la valeur de selectedChurch\n    // Debug de l'église sélectionnée - Supprimé pour la production\n\n    // Utilisation du cache global pour éviter les rechargements\n    const { data: stats, loading: statsLoading, error: statsError, refresh } = useGlobalCache(\n        `globalStats-${selectedChurch?.id || 'none'}`,\n        async () => {\n            // Ne pas faire d'appel API si selectedChurch n'est pas valide\n            if (!selectedChurch) {\n                return {};\n            }\n            const params = { churchId: selectedChurch.id };\n            try {\n                const res = await apiService.stats.getOverview(params);\n                return res.data?.data || res.data || {};\n            } catch (error) {\n                throw error;\n            }\n        },\n        [refreshKey] // Dépendances pour forcer le rafraîchissement\n    );\n\n    const { data: networkStats, loading: networkStatsLoading, error: networkStatsError, refresh: refreshNetworkStats } = useGlobalCache(\n        `networkStats-${selectedChurch?.id || 'none'}`,\n        async () => {\n            // Ne pas faire d'appel API si selectedChurch n'est pas valide\n            if (!selectedChurch) {\n                return [];\n            }\n            const params = { churchId: selectedChurch.id };\n            const res = await apiService.networks.getStats(params);\n            const rawData = res.data?.data || res.data || [];\n            \n            // Vérification de sécurité : s'assurer que rawData est un tableau\n            if (!Array.isArray(rawData)) {\n                return [];\n            }\n            \n            // Transformer les données pour le graphique PieChart\n            const transformedData = rawData.map(network => ({\n                name: network.nom,\n                value: network.memberCount || 0\n            }));\n            \n            return transformedData;\n        },\n        [refreshKey] // Dépendances pour forcer le rafraîchissement\n    );\n\n    const { data: networkEvolution, loading: networkEvolutionLoading, error: networkEvolutionError, refresh: refreshNetworkEvolution } = useGlobalCache(\n        `networkEvolution-${selectedChurch?.id || 'none'}`,\n        async () => {\n            // Ne pas faire d'appel API si selectedChurch n'est pas valide\n            if (!selectedChurch) {\n                return [];\n            }\n            const params = { churchId: selectedChurch.id };\n            const res = await apiService.stats.getNetworksEvolution(params);\n            const rawData = res.data?.data || res.data || [];\n            \n            // Vérification de sécurité : s'assurer que rawData est un tableau\n            if (!Array.isArray(rawData)) {\n                return [];\n            }\n            \n            return rawData;\n        },\n        [refreshKey] // Dépendances pour forcer le rafraîchissement\n    );\n\n    const { data: serviceAttendance, loading: serviceAttendanceLoading, error: serviceAttendanceError, refresh: refreshServiceAttendance } = useGlobalCache(\n        `serviceAttendance-${selectedChurch?.id || 'none'}`,\n        async () => {\n            // Ne pas faire d'appel API si selectedChurch n'est pas valide\n            if (!selectedChurch) {\n                return [];\n            }\n            const params = { churchId: selectedChurch.id };\n            const res = await apiService.services.getAll(params);\n            const rawData = res.data?.data || res.data || [];\n            \n            // Vérification de sécurité : s'assurer que rawData est un tableau\n            if (!Array.isArray(rawData)) {\n                return [];\n            }\n            \n            return rawData;\n        },\n        [refreshKey] // Dépendances pour forcer le rafraîchissement\n    );\n\n    const { data: networkYearCompare, loading: networkYearCompareLoading, error: networkYearCompareError, refresh: refreshNetworkYearCompare } = useGlobalCache(\n        `networkYearCompare-${selectedChurch?.id || 'none'}`,\n        async () => {\n            // Ne pas faire d'appel API si selectedChurch n'est pas valide\n            if (!selectedChurch) {\n                return [];\n            }\n            const currentYear = new Date().getFullYear();\n            const lastYear = currentYear - 1;\n            const params = { years: `${lastYear},${currentYear}`, churchId: selectedChurch.id };\n            const res = await apiService.stats.getNetworksComparison(params);\n            const rawData = res.data?.data || res.data || [];\n            \n            // Vérification de sécurité : s'assurer que rawData est un tableau\n            if (!Array.isArray(rawData)) {\n                return [];\n            }\n            \n            return rawData;\n        },\n        [refreshKey] // Dépendances pour forcer le rafraîchissement\n    );\n\n    // Rafraîchissement automatique quand selectedChurch change\n    useEffect(() => {\n        if (selectedChurch) {\n            // Rafraîchir les données avec des délais échelonnés pour éviter les appels simultanés\n            const timer1 = setTimeout(() => refresh(), 100);\n            const timer2 = setTimeout(() => refreshNetworkStats(), 300);\n            const timer3 = setTimeout(() => refreshNetworkEvolution(), 500);\n            const timer4 = setTimeout(() => refreshServiceAttendance(), 700);\n            const timer5 = setTimeout(() => refreshNetworkYearCompare(), 900);\n            \n            return () => {\n                clearTimeout(timer1);\n                clearTimeout(timer2);\n                clearTimeout(timer3);\n                clearTimeout(timer4);\n                clearTimeout(timer5);\n            };\n        }\n    }, [selectedChurch]); // Dépendance unique : selectedChurch\n\n    // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n    if (!selectedChurch) {\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                    {i18nService.t('stats.selectChurch')}\n                </Typography>\n            </Box>\n        );\n    }\n\n    // Variables pour les calculs\n    const currentYear = new Date().getFullYear();\n    const lastYear = currentYear - 1;\n\n    // État de chargement global\n    const isLoading = statsLoading || networkStatsLoading || networkEvolutionLoading || serviceAttendanceLoading || networkYearCompareLoading;\n    const hasError = statsError || networkStatsError || networkEvolutionError || serviceAttendanceError || networkYearCompareError;\n\n    // Fonction pour afficher les erreurs de manière sécurisée\n    const renderError = (error) => {\n        if (!error) return null;\n        \n        // Si c'est un objet d'erreur Axios, extraire le message\n        let errorMessage = i18nService.t('common.errorOccurred');\n        if (typeof error === 'string') {\n            errorMessage = error;\n        } else if (error?.message) {\n            errorMessage = error.message;\n        } else if (error?.response?.data?.message) {\n            errorMessage = error.response.data.message;\n        }\n        \n        // Masquer les erreurs techniques pour l'utilisateur final\n        if (errorMessage.includes('Request failed with status code 500')) {\n            errorMessage = i18nService.t('errors.server500');\n        } else if (errorMessage.includes('Request failed with status code 429')) {\n            errorMessage = i18nService.t('errors.tooManyRequests');\n        }\n        \n        return (\n            <Typography color=\"error\" sx={{ mt: 2, textAlign: 'center' }}>\n                {errorMessage}\n            </Typography>\n        );\n    };\n\n    return (\n        <Box sx={{ \n          width: '100%',\n          overflow: 'hidden', // Empêcher le scroll vertical\n          overflowX: 'auto' // Permettre le scroll horizontal uniquement si nécessaire\n        }}>\n            {/* Bloc stats globales */}\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 6, alignItems: 'center' }}>\n                <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>\n                    {i18nService.t('stats.overview')}\n                </Typography>\n                <IconButton onClick={refresh} disabled={isLoading} aria-label={i18nService.t('common.actions.refresh')}>\n                    <RefreshIcon />\n                </IconButton>\n            </Box>\n            {isLoading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}><CircularProgress /></Box>\n            ) : hasError ? (\n                renderError(hasError)\n            ) : (\n                <>\n                    <Grid data-aos=\"fade-up\" container spacing={2} sx={{ mb: 3 }}>\n                        {[\n                            { value: stats?.total_all || 0, label: i18nService.t('stats.members') },\n                            { value: stats?.total_reseaux || 0, label: i18nService.t('stats.networks') },\n                            { value: stats?.total_gr || 0, label: i18nService.t('stats.groups') },\n                            { value: stats?.total_resp_reseaux || 0, label: i18nService.t('stats.networkLeaders') },\n                            { value: stats?.total_resp_gr || 0, label: i18nService.t('stats.groupLeaders') },\n                            { value: stats?.total_leaders || 0, label: i18nService.t('stats.leaders') },\n                            { value: stats?.total_leaders_all || 0, label: i18nService.t('stats.allLeaders') },\n                            { value: stats?.total_reguliers || 0, label: i18nService.t('stats.regulars') },\n                            { value: stats?.total_integration || 0, label: i18nService.t('stats.integration') },\n                            { value: stats?.total_irreguliers || 0, label: i18nService.t('stats.irregulars') },\n                            { value: stats?.total_gouvernance || 0, label: i18nService.t('stats.governance') },\n                            { value: stats?.total_ecodim || 0, label: i18nService.t('stats.ecodim') },\n                            { value: stats?.total_resp_ecodim || 0, label: i18nService.t('stats.ecodimLeaders') },\n                            { value: stats?.total_personnes_isolees || 0, label: i18nService.t('stats.isolatedPersons') }\n                        ].map((item, idx) => (\n                            <Grid xs={6} sm={4} md={3} lg={2} key={idx}>\n                                <Paper sx={{ p: 2, textAlign: 'center', minHeight: 80 }}>\n                                    <Typography color=\"text.secondary\">{item.label}</Typography>\n                                    <Typography variant=\"h5\">{item.value}</Typography>\n                                </Paper>\n                            </Grid>\n                        ))}\n                    </Grid>\n\n                    <Grid data-aos=\"fade-up\" container spacing={1} sx={{ display: 'block' }} >\n                    {/* PieChart - Répartition membres par réseau + Interprétation à droite */}\n                    <Grid xs={12} md={6} >\n                        <Paper sx={{ p: 3, width: '100%', backgroundColor: '#f9f9f9', overflowX: 'auto', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>{i18nService.t('stats.membersByNetwork')}</Typography>\n                            \n                            {/* Vérification des données */}\n                            {!networkStats || networkStats.length === 0 ? (\n                                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400 }}>\n                                    <Typography variant=\"h6\" color=\"text.secondary\">\n                                        {networkStatsLoading ? i18nService.t('common.actions.loading') : i18nService.t('stats.noDataForChurch')}\n                                    </Typography>\n                                </Box>\n                            ) : (\n                                <>\n                                    <Box >\n                                        <Box sx={{ flex: 1, minHeight: 0, alignItems: 'center', justifyContent: 'center' }}>\n                                            <ResponsiveContainer width=\"100%\" height={600}>\n                                                <PieChart>\n                                                    <Pie\n                                                        data={networkStats}\n                                                        dataKey=\"value\"\n                                                        nameKey=\"name\"\n                                                        cx=\"50%\"\n                                                        cy=\"50%\"\n                                                        outerRadius={250}\n                                                        label={(\n                                                            ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n                                                                const RADIAN = Math.PI / 180;\n                                                                const radius = innerRadius + (outerRadius - innerRadius) * 1.15;\n                                                                const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                                                                const y = cy + radius * Math.sin(-midAngle * RADIAN);\n                                                                const value = networkStats?.[index]?.value || 0;\n                                                                const total = (networkStats || []).reduce((sum, n) => sum + (n.value || 0), 0);\n                                                                const percentValue = total > 0 ? ((value / total) * 100).toFixed(1) : 0;\n                                                                return (\n                                                                    <text\n                                                                        x={x}\n                                                                        y={y}\n                                                                        fill={COLORS[index % COLORS.length]}\n                                                                        textAnchor={x > cx ? 'start' : 'end'}\n                                                                        dominantBaseline=\"central\"\n                                                                        fontSize={16}\n                                                                        fontWeight={600}\n                                                                    >\n                                                                        {`${networkStats[index]?.name}: ${value} (${percentValue}%)`}\n                                                                    </text>\n                                                                );\n                                                            }\n                                                        )}\n                                                    >\n                                                        {(networkStats || []).map((entry, index) => (\n                                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                                                        ))}\n                                                    </Pie>\n                                                    <RechartsTooltip />\n                                                </PieChart>\n                                            </ResponsiveContainer>\n                                        </Box>\n                                    </Box>\n                                    \n                                    <Box sx={{ bgcolor: '#f9f9f9', borderRadius: 2, border: '1px solid #e0e0e0', p: 4 }}>\n                                        {(() => {\n                                            const date = new Date();\n                                            const mois = date.toLocaleString('fr-FR', { month: 'long' });\n                                            const annee = date.getFullYear();\n                                            const jour = date.getDate();\n                                            const total = (networkStats || []).reduce((sum, n) => sum + (n.value || 0), 0);\n                                            const sorted = [...(networkStats || [])].sort((a, b) => (b.value || 0) - (a.value || 0));\n                                            const plusGrand = sorted[0];\n                                            const second = sorted[1];\n                                            const debutMois = new Date(date.getFullYear(), date.getMonth(), 1);\n                                            const reseauxNouveaux = (networkStats || []).filter(n => {\n                                                if (!n.createdAt) return false;\n                                                const d = new Date(n.createdAt);\n                                                return d >= debutMois;\n                                            });\n                                            return (\n                                                <Typography sx={{ fontSize: 18, color: '#444', fontStyle: 'italic', textAlign: 'center' }}>\n                                                    {i18nService.t('stats.interpretation.datePrefix')}\n                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{`${jour} ${mois} ${annee}`}</Box>\n                                                    {i18nService.t('stats.interpretation.totalMembers')}\n                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{total}</Box>\n                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{i18nService.t('stats.interpretation.persons')}</Box>\n                                                    {plusGrand && (\n                                                        <>\n                                                            {i18nService.t('stats.interpretation.largestNetwork')}\n                                                            <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{` « ${plusGrand.name} »`}</Box>\n                                                            {i18nService.t('stats.interpretation.with')}\n                                                            <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{plusGrand.value}</Box>\n                                                            <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{i18nService.t('stats.interpretation.members')}</Box>\n                                                            {second && (\n                                                                <>\n                                                                    {i18nService.t('stats.interpretation.followedBy')}\n                                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{` « ${second.name} »`}</Box>\n                                                                    {i18nService.t('stats.interpretation.parentheses')}\n                                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{second.value}</Box>\n                                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{i18nService.t('stats.interpretation.members')}</Box>\n                                                                    {i18nService.t('stats.interpretation.closeParentheses')}\n                                                                </>\n                                                            )}\n                                                            {reseauxNouveaux && reseauxNouveaux.length > 0 && (\n                                                                <>\n                                                                    {i18nService.t('stats.interpretation.inMonth')}\n                                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{`${mois} ${annee}`}</Box>\n                                                                    {i18nService.t('stats.interpretation.networks')}\n                                                                    <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{(reseauxNouveaux || []).map(r => `« ${r.name} »`).join(', ')}</Box>\n                                                                    {i18nService.t('stats.interpretation.wereCreated')}\n                                                                </>\n                                                            )}\n                                                        </>\n                                                    )}\n                                                </Typography>\n                                            );\n                                        })()}\n                                    </Box>\n                                </>\n                            )}\n                        </Paper>\n                    </Grid>\n\n                    {/* LineChart - Evolution membres réseaux */}\n                    <Grid data-aos=\"fade-up\" xs={12} md={8} sx={{ minWidth: 400, mt: 3 }} >\n                        <Paper sx={{ p: 3, height: 520, minWidth: 0, overflowX: 'auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', backgroundColor: '#f9f9f9' }}>\n                            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>{i18nService.t('stats.monthlyEvolution')}</Typography>\n                            <Box sx={{ flex: 1, minHeight: 0, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                {(Array.isArray(networkEvolution) && networkEvolution.length > 0 && Object.keys(networkEvolution[0]).length > 1) ? (\n                                    <ResponsiveContainer width=\"100%\" height={440}>\n                                        <LineChart data={networkEvolution} margin={{ top: 20, right: 20, left: 0, bottom: 0 }}>\n                                            <CartesianGrid strokeDasharray=\"3 3\" />\n                                            <XAxis dataKey=\"month\" />\n                                            <YAxis allowDecimals={false} />\n                                            <RechartsTooltip />\n                                            <Legend />\n                                            {Object.keys(networkEvolution[0]).filter(k => k !== 'month').map((key, idx) => (\n                                                <Line key={key} type=\"monotone\" dataKey={key} stroke={COLORS[idx % COLORS.length]} strokeWidth={2} dot={false} />\n                                            ))}\n                                        </LineChart>\n                                    </ResponsiveContainer>\n                                ) : (\n                                    <Typography sx={{ color: '#888', fontSize: 20, textAlign: 'center', width: '100%' }}>\n                                        {i18nService.t('stats.noMonthlyData')}\n                                    </Typography>\n                                )}\n                            </Box>\n                        </Paper>\n\n                    </Grid>\n                    {/* BarChart - Comparaison réseaux sur les 3 derniers mois */}\n                    <Grid data-aos=\"fade-up\" xs={12} md={8} sx={{ minWidth: 400, mt: 3 }}>\n                        <Paper sx={{ p: 3, minHeight: 320, backgroundColor: '#f9f9f9' }}>\n                            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>\n                                {i18nService.t('stats.networkComparison')}\n                            </Typography>\n                            <ResponsiveContainer width=\"100%\" height={400}>\n                                <BarChart data={(() => {\n                                    // networkEvolution = [{ month: '2025-02', R1: 10, R2: 15, ... }, ...]\n                                    if (!networkEvolution || networkEvolution.length === 0) return [];\n                                    // Prendre les 3 derniers mois\n                                    const last3 = networkEvolution.slice(-3);\n                                    // Obtenir la liste des réseaux (en-têtes, hors \"month\")\n                                    const networks = Object.keys(last3[0] || {}).filter(k => k !== 'month');\n                                    // Pour chaque réseau, construire un objet { network: 'Réseau', mois1: x, mois2: y, mois3: z }\n                                    return (networks || []).map(network => {\n                                        const obj = { network };\n                                        (last3 || []).forEach((row, idx) => {\n                                            // Format mois court FR\n                                            const mois = new Date(row.month + '-01').toLocaleString('fr-FR', { month: 'short', year: '2-digit' });\n                                            obj[mois] = row[network] || 0;\n                                        });\n                                        return obj;\n                                    });\n                                })()}>\n                                    <RechartsTooltip />\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"network\" />\n                                    <YAxis allowDecimals={false} />\n                                    <Legend />\n                                    {/* Générer dynamiquement les Bar pour chaque mois */}\n                                    {(() => {\n                                        if (!networkEvolution || networkEvolution.length === 0) return null;\n                                        const last3 = networkEvolution.slice(-3);\n                                        return (last3 || []).map((row, idx) => {\n                                            const mois = new Date(row.month + '-01').toLocaleString('fr-FR', { month: 'short', year: '2-digit' });\n                                            const colors = [\"#8884d8\", \"#82ca9d\", \"#ffc658\"];\n                                            return (\n                                                <Bar\n                                                    key={mois}\n                                                    dataKey={mois}\n                                                    fill={colors[idx % colors.length]}\n                                                    name={mois.charAt(0).toUpperCase() + mois.slice(1)}\n                                                    activeBar={false}\n                                                />\n                                            );\n                                        });\n                                    })()}\n                                </BarChart>\n                            </ResponsiveContainer>\n                        </Paper>\n                    </Grid>\n                    {/* BarChart - Fréquentation cultes */}\n                    <Grid data-aos=\"fade-up\" xs={12} md={12} sx={{ minWidth: 400, mt: 3 }}>\n                        <Paper sx={{ p: 3, height: 520, minWidth: 0, overflowX: 'auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', backgroundColor: '#f9f9f9' }}>\n                            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>\n                                {i18nService.t('stats.serviceAttendance')}\n                            </Typography>\n                            <Box sx={{ flex: 1, minHeight: 0, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                <ResponsiveContainer width=\"100%\" height={440}>\n                                    <LineChart data={(() => {\n                                        // Préparer les 8 derniers dimanches distincts présents dans serviceAttendance (sur le jour uniquement)\n                                        const allDays = (serviceAttendance || []).map(s => new Date(s.date).toISOString().slice(0, 10));\n                                        const uniqueDays = [...new Set(allDays)];\n                                        const sundaysStr = uniqueDays.sort().slice(-8);\n                                        const grouped = (sundaysStr || []).map(dateStr => {\n                                            const entry = { date: new Date(dateStr).toLocaleDateString('fr-FR') };\n                                            [i18nService.t('stats.service1'), i18nService.t('stats.service2'), i18nService.t('stats.service3')].forEach((culteLabel, idx) => {\n                                                const culte = (serviceAttendance || []).find(s =>\n                                                    new Date(s.date).toISOString().slice(0, 10) === dateStr &&\n                                                    s.culte === culteLabel\n                                                );\n                                                entry[`culte${idx + 1}`] = culte ?\n                                                    (culte.total_adultes || 0) +\n                                                    (culte.total_enfants || 0) +\n                                                    (culte.total_chantres || 0) +\n                                                    (culte.total_protocoles || 0) +\n                                                    (culte.total_multimedia || 0) +\n                                                    (culte.total_respo_ecodim || 0) +\n                                                    (culte.total_animateurs_ecodim || 0) +\n                                                    (culte.total_enfants_ecodim || 0)\n                                                    : 0;\n                                            });\n                                            return entry;\n                                        });\n                                        return grouped;\n                                    })()} margin={{ top: 20, right: 20, left: 0, bottom: 0 }}>\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                        <XAxis dataKey=\"date\" />\n                                        <YAxis allowDecimals={false} interval={0} tickCount={10} />\n                                        <RechartsTooltip />\n                                        <Legend />\n                                        <Line type=\"monotone\" dataKey=\"culte1\" stroke=\"#1976d2\" name={i18nService.t('stats.service1')} strokeWidth={2} dot={true} />\n                                        <Line type=\"monotone\" dataKey=\"culte2\" stroke=\"#FFBB28\" name={i18nService.t('stats.service2')} strokeWidth={2} dot={true} />\n                                        <Line type=\"monotone\" dataKey=\"culte3\" stroke=\"#43a047\" name={i18nService.t('stats.service3')} strokeWidth={2} dot={true} />\n                                    </LineChart>\n                                </ResponsiveContainer>\n                            </Box>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                </>\n            )}\n        </Box>\n    );\n};\n\nexport default Stats;","import React, { useEffect } from 'react';\nimport { Typography, Box, Grid, Paper, CircularProgress, IconButton } from '@mui/material';\nimport { ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend, BarChart, Bar } from 'recharts';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { useGlobalCache } from '../../../hooks/useGlobalCache';\nimport { apiService } from '../../../services/apiService';\nimport i18nService from '../../../services/i18nService';\n\nconst COLORS = [\n    '#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#B455C6', '#FF6666', '#82ca9d', '#8884d8', '#ffc658', '#a4de6c', '#d0ed57'\n];\n\n// Fonction utilitaire pour calculer la croissance des réseaux\nconst computeGrowthData = (networkEvolution) => {\n    if (!networkEvolution || networkEvolution.length === 0) return [];\n    \n    \n    return networkEvolution.map(network => {\n        \n        if (!network.evolution || network.evolution.length < 2) {\n            return { name: network.nom, croissance: i18nService.t('statsReseaux.new') };\n        }\n        \n        const current = network.evolution[network.evolution.length - 1];\n        const previous = network.evolution[network.evolution.length - 2];\n        \n        if (previous.memberCount === 0) {\n            return { name: network.nom, croissance: i18nService.t('statsReseaux.new') };\n        }\n        \n        const growth = ((current.memberCount - previous.memberCount) / previous.memberCount) * 100;\n        return { name: network.nom, croissance: Math.round(growth) };\n    });\n};\n\nconst StatsReseaux = ({ selectedChurch, refreshKey }) => {\n  // Initialiser i18nService\n  useEffect(() => {\n    i18nService.init();\n  }, []);\n  \n  \n  // Utilisation du cache global pour éviter les rechargements\n  const { data: networkStats, loading: networkStatsLoading, error: networkStatsError, refresh } = useGlobalCache(\n    `networkStats-${selectedChurch?.id || 'none'}`,\n    async () => {\n      // Ne pas faire d'appel API si selectedChurch n'est pas valide\n      if (!selectedChurch) {\n        return [];\n      }\n      const params = { churchId: selectedChurch.id };\n      const res = await apiService.networks.getStats(params);\n      const rawData = res.data?.data || res.data || [];\n      \n      // Vérification de sécurité : s'assurer que rawData est un tableau\n              if (!Array.isArray(rawData)) {\n          return [];\n        }\n      \n      // Transformer les données pour le graphique PieChart\n      const transformedData = rawData\n        .filter(network => network && network.nom && (network.memberCount || 0) > 0)\n        .map(network => ({\n          name: network.nom || 'Réseau sans nom',\n          value: network.memberCount || 0\n        }));\n      \n      \n      return transformedData;\n    },\n    [refreshKey] // Dépendances pour forcer le rafraîchissement\n  );\n\n  const { data: networkEvolution, loading: networkEvolutionLoading, error: networkEvolutionError, refresh: refreshEvolution } = useGlobalCache(\n    `networkEvolution-${selectedChurch?.id || 'none'}`,\n    async () => {\n      // Ne pas faire d'appel API si selectedChurch n'est pas valide\n      if (!selectedChurch) {\n        return [];\n      }\n      const params = { churchId: selectedChurch.id };\n      const res = await apiService.stats.getNetworksEvolution(params);\n      const rawData = res.data?.data || res.data || [];\n      \n      // Vérification de sécurité : s'assurer que rawData est un tableau\n              if (!Array.isArray(rawData)) {\n          return [];\n        }\n      \n      return rawData;\n    },\n    [refreshKey] // Dépendances pour forcer le rafraîchissement\n  );\n\n  const { data: networkYearCompare, loading: networkYearCompareLoading, error: networkYearCompareError, refresh: refreshYearCompare } = useGlobalCache(\n    `networkYearCompare-${selectedChurch?.id || 'none'}`,\n    async () => {\n      // Ne pas faire d'appel API si selectedChurch n'est pas valide\n      if (!selectedChurch) {\n        return [];\n      }\n      const currentYear = new Date().getFullYear();\n      const lastYear = currentYear - 1;\n      const params = { years: `${lastYear},${currentYear}`, churchId: selectedChurch.id };\n      const res = await apiService.stats.getNetworksComparison(params);\n      const rawData = res.data?.data || res.data || [];\n      \n      // Vérification de sécurité : s'assurer que rawData est un tableau\n              if (!Array.isArray(rawData)) {\n          return [];\n        }\n      \n      return rawData;\n    },\n    [refreshKey] // Dépendances pour forcer le rafraîchissement\n  );\n\n  const { data: stackedData, loading: stackedDataLoading, error: stackedDataError, refresh: refreshStacked } = useGlobalCache(\n    `networkQualificationStats-${selectedChurch?.id || 'none'}`,\n    async () => {\n      // Ne pas faire d'appel API si selectedChurch n'est pas valide\n      if (!selectedChurch) {\n        return [];\n      }\n      try {\n        const params = { churchId: selectedChurch.id };\n        const res = await apiService.networks.getQualificationStats(params);\n        const rawData = res.data?.data || res.data || [];\n        \n        // Vérification de sécurité : s'assurer que rawData est un tableau\n        if (!Array.isArray(rawData)) {\n          return [];\n        }\n        \n        // Transformer les données pour correspondre au format attendu par le composant\n        const transformedData = rawData\n          .filter(network => network && network.networkName && network.totalMembers > 0) // Filtrer les réseaux valides\n          .map(network => {\n            const baseData = {\n              name: network.networkName\n              // Note: value et networkId ne sont plus inclus pour éviter qu'ils apparaissent comme des barres\n            };\n            \n            // Ajouter chaque qualification comme propriété séparée (seulement si > 0)\n            if (network.qualifications && typeof network.qualifications === 'object') {\n              Object.entries(network.qualifications).forEach(([qual, count]) => {\n                if (qual && count !== undefined && count !== null && count > 0 && qual !== i18nService.t('statsReseaux.notSpecified')) {\n                  baseData[qual] = count;\n                }\n              });\n            }\n            \n            return baseData;\n          })\n          .filter(network => {\n            // Ne garder que les réseaux qui ont au moins une qualification valide\n            const hasQualifications = Object.keys(network).some(key => key !== 'name');\n            return hasQualifications;\n          });\n        \n        return transformedData;\n      } catch (err) {\n        return [];\n      }\n    }\n  );\n\n  // Rafraîchissement automatique quand selectedChurch change\n  useEffect(() => {\n    if (selectedChurch) {\n      // Rafraîchir toutes les données avec un délai pour éviter les appels simultanés\n      const timer = setTimeout(() => {\n        refresh();\n        refreshEvolution();\n        refreshYearCompare();\n        refreshStacked();\n      }, 100);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [selectedChurch]); // Dépendance unique : selectedChurch\n\n  // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n  if (!selectedChurch) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          Veuillez sélectionner une église pour voir les statistiques\n        </Typography>\n      </Box>\n    );\n  }\n\n  // État de chargement global\n  const isLoading = networkStatsLoading || networkEvolutionLoading || networkYearCompareLoading || stackedDataLoading;\n  \n  // Extraire les messages d'erreur en chaînes pour éviter les erreurs React\n  const getErrorMessage = (error) => {\n    if (!error) return null;\n    if (typeof error === 'string') return error;\n    if (error?.message) return error.message;\n    if (error?.response?.data?.message) return error.response.data.message;\n    return i18nService.t('common.errorOccurred');\n  };\n  \n  const hasError = getErrorMessage(networkStatsError) || \n                   getErrorMessage(networkEvolutionError) || \n                   getErrorMessage(networkYearCompareError) || \n                   getErrorMessage(stackedDataError);\n\n\n  // Fonction pour afficher les erreurs de manière sécurisée\n  const renderError = (error) => {\n    if (!error) return null;\n    \n    // Si c'est un objet d'erreur Axios, extraire le message\n    let errorMessage = i18nService.t('common.errorOccurred');\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else if (error?.message) {\n      errorMessage = error.message;\n    } else if (error?.response?.data?.message) {\n      errorMessage = error.response.data.message;\n    }\n    \n    return (\n      <Typography color=\"error\" sx={{ mt: 2, textAlign: 'center' }}>\n        {errorMessage}\n      </Typography>\n    );\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3, alignItems: 'center' }}>\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>{i18nService.t('statsReseaux.title')}</Typography>\n        <IconButton onClick={refresh} disabled={isLoading} aria-label={i18nService.t('common.actions.refresh')}>\n          <RefreshIcon />\n        </IconButton>\n      </Box>\n      {isLoading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}><CircularProgress /></Box>\n      ) : hasError ? (\n        renderError(hasError)\n      ) : (\n        <Grid >\n          {/* PieChart - Effectif par réseau */}\n          <Grid data-aos=\"fade-up\" item xs={12} sx={{ mt: 0 }}>\n            <Paper sx={{ p: 3, backgroundColor: '#f9f9f9', overflowX: 'auto' }}>\n              <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>{i18nService.t('statsReseaux.membersByNetwork')}</Typography>\n              \n              {/* Vérification des données */}\n              {!networkStats || networkStats.length === 0 ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400 }}>\n                  <Typography variant=\"h6\" color=\"text.secondary\">\n                    {networkStatsLoading ? i18nService.t('common.loading') : i18nService.t('statsReseaux.noDataForChurch')}\n                  </Typography>\n                </Box>\n              ) : (\n                <ResponsiveContainer width=\"100%\" height={600}>\n                  <PieChart>\n                    <Pie\n                      data={networkStats}\n                      dataKey=\"value\"\n                      nameKey=\"name\"\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      outerRadius={250}\n                      label={({ name, value }) => {\n                        if (!name || value === undefined || value === null) return '';\n                        const total = (networkStats || []).reduce((sum, n) => sum + (n.value || 0), 0);\n                        const percent = total ? ((value / total) * 100).toFixed(1) : 0;\n                        return `${name}: ${value} (${percent}%)`;\n                      }}\n                    >\n                      {(networkStats || []).map((entry, idx) => (\n                        <Cell key={`cell-${idx}`} fill={COLORS[idx % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <RechartsTooltip />\n                  </PieChart>\n                </ResponsiveContainer>\n              )}\n              <Box sx={{ bgcolor: '#f9f9f9', borderRadius: 2, border: '1px solid #e0e0e0', p: 4 }}>\n                {(() => {\n                  const date = new Date();\n                  const mois = date.toLocaleString('fr-FR', { month: 'long' });\n                  const annee = date.getFullYear();\n                  const jour = date.getDate();\n                  const total = (networkStats || []).reduce((sum, n) => sum + (n.value || 0), 0);\n                  const sorted = [...(networkStats || [])].filter(n => n && n.value !== undefined && n.value !== null).sort((a, b) => (b.value || 0) - (a.value || 0));\n                  const plusGrand = sorted[0];\n                  const second = sorted[1];\n                  const debutMois = new Date(date.getFullYear(), date.getMonth(), 1);\n                  const reseauxNouveaux = (networkStats || []).filter(n => {\n                    if (!n.createdAt) return false;\n                    const d = new Date(n.createdAt);\n                    return d >= debutMois;\n                  });\n                  return (\n                    <Typography sx={{ fontSize: 18, color: '#444', fontStyle: 'italic', textAlign: 'center' }}>\n                      {i18nService.t('statsReseaux.interpretation.datePrefix')}\n                      <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{`${jour} ${mois} ${annee}`}</Box>\n                      {i18nService.t('statsReseaux.interpretation.totalMembers')}\n                      <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{total}</Box>\n                      <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{\" personnes.\"}</Box>\n                      {plusGrand && plusGrand.name && plusGrand.value && (\n                        <>\n                          {\" Le plus grand réseau est \"}\n                          <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{` « ${plusGrand.name} »`}</Box>\n                          {\" avec \"}\n                          <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{plusGrand.value}</Box>\n                          <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{\" membres\"}</Box>\n                          {second && second.name && second.value && (\n                            <>\n                              {\", suivi du réseau \"}\n                              <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{` « ${second.name} »`}</Box>\n                              {\" (\"}\n                              <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{second.value}</Box>\n                              <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{\" membres\"}</Box>\n                              {\")\"}\n                            </>\n                          )}\n                          {\".\"}\n                        </>\n                      )}\n                      {reseauxNouveaux.length > 0 && reseauxNouveaux.every(r => r && r.name) && (\n                        <>\n                          {\" \"}\n                          {reseauxNouveaux.length === 1 ? (\n                            <>\n                              {i18nService.t('statsReseaux.inMonth')}\n                              <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{`${mois} ${annee}`}</Box>\n                              {\", le réseau \"}\n                              <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{` « ${reseauxNouveaux[0].name} »`}</Box>\n                              {\" a vu le jour.\"}\n                            </>\n                          ) : (\n                            <>\n                              {i18nService.t('statsReseaux.inMonth')}\n                              <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{`${mois} ${annee}`}</Box>\n                              {\", les réseaux \"}\n                              <Box component=\"span\" fontWeight=\"bold\" color=\"primary.main\">{(reseauxNouveaux || []).filter(r => r && r.name).map(r => `« ${r.name} »`).join(', ')}</Box>\n                              {\" ont vu le jour.\"}\n                            </>\n                          )}\n                        </>\n                      )}\n                    </Typography>\n                  );\n                })()}\n              </Box>\n            </Paper>\n          </Grid>\n          {/* LineChart - Evolution membres réseaux */}\n          <Grid data-aos=\"fade-up\" item xs={12} sx={{ mt: 4 }}>\n            <Paper sx={{ p: 3, height: 520, minWidth: 0, overflowX: 'auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', backgroundColor: '#f9f9f9' }}>\n              <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>{i18nService.t('statsReseaux.monthlyEvolution')}</Typography>\n              <Box sx={{ flex: 1, minHeight: 0, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <ResponsiveContainer width=\"100%\" height={440}>\n                  <LineChart data={networkEvolution} margin={{ top: 20, right: 20, left: 0, bottom: 0 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis allowDecimals={false} />\n                    <RechartsTooltip />\n                    <Legend />\n                    {(networkEvolution || []).length > 0 && Object.keys((networkEvolution || [])[0] || {}).filter(k => k !== 'month').map((key, idx) => (\n                      <Line key={key} type=\"monotone\" dataKey={key} stroke={COLORS[idx % COLORS.length]} strokeWidth={2} dot={false} />\n                    ))}\n                  </LineChart>\n                </ResponsiveContainer>\n              </Box>\n            </Paper>\n          </Grid>\n          {/* BarChart - Comparaison de l'évolution des réseaux (3 derniers mois) */}\n          <Grid data-aos=\"fade-up\" item xs={12} sx={{ mt: 4 }}>\n            <Paper sx={{ p: 3, minHeight: 320, backgroundColor: '#f9f9f9', overflowX: 'auto' }}>\n              <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>\n                {i18nService.t('statsReseaux.networkComparison')}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <BarChart data={(() => {\n                  if (!networkEvolution || networkEvolution.length === 0) return [];\n                  const last3 = networkEvolution.slice(-3);\n                  const networks = Object.keys(last3[0] || {}).filter(k => k !== 'month');\n                  return (networks || []).map(network => {\n                    const obj = { network };\n                    (last3 || []).forEach((row, idx) => {\n                      const mois = new Date(row.month + '-01').toLocaleString('fr-FR', { month: 'short', year: '2-digit' });\n                      obj[mois] = row[network] || 0;\n                    });\n                    return obj;\n                  });\n                })()} margin={{ top: 20, right: 20, left: 0, bottom: 0 }}>\n                  <RechartsTooltip />\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"network\" />\n                  <YAxis allowDecimals={false} />\n                  <Legend />\n                  {/* Générer dynamiquement les Bar pour chaque mois */}\n                  {(() => {\n                    if (!networkEvolution || networkEvolution.length === 0) return null;\n                    const last3 = networkEvolution.slice(-3);\n                    return (last3 || []).map((row, idx) => {\n                      const mois = new Date(row.month + '-01').toLocaleString('fr-FR', { month: 'short', year: '2-digit' });\n                      const colors = [\"#8884d8\", \"#82ca9d\", \"#ffc658\"];\n                      return (\n                        <Bar\n                          key={mois}\n                          dataKey={mois}\n                          fill={colors[idx % colors.length]}\n                          name={mois.charAt(0).toUpperCase() + mois.slice(1)}\n                          activeBar={false}\n                        />\n                      );\n                    });\n                  })()}\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n          </Grid>\n\n          {/* Stacked Bar Chart - Composition interne des réseaux */}\n          {stackedData && stackedData.length > 0 && (\n            <Grid data-aos=\"fade-up\" item xs={12} sx={{ mt: 4 }}>\n              <Paper sx={{ p: 3, minHeight: 320, backgroundColor: '#f9f9f9', overflowX: 'auto' }}>\n                <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>\n                  {i18nService.t('statsReseaux.internalComposition')}\n                </Typography>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                  <BarChart data={stackedData} margin={{ top: 20, right: 20, left: 0, bottom: 0 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis allowDecimals={false} />\n                    <RechartsTooltip />\n                    <Legend />\n                    {/* Générer dynamiquement les Bar pour chaque catégorie */}\n                    {(() => {\n                      // Récupère toutes les catégories présentes dans tous les réseaux\n                      const allCategories = Array.from(\n                        new Set((stackedData || []).flatMap(obj => Object.keys(obj || {}).filter(k => k !== 'name')))\n                      );\n                      return (allCategories || []).map((cat, idx) => (\n                        <Bar key={cat} dataKey={cat} stackId=\"a\" fill={COLORS[idx % COLORS.length]} name={cat} />\n                      ));\n                    })()}\n\n                  </BarChart>\n                </ResponsiveContainer>\n              </Paper>\n            </Grid>\n          )}\n          {/* Bar/Line Chart - Taux de croissance (%) */}\n          {networkEvolution && networkEvolution.length > 1 && (\n            <Grid data-aos=\"fade-up\" item xs={12} sx={{ mt: 4 }}>\n              <Paper sx={{ p: 3, minHeight: 320, backgroundColor: '#f9f9f9', overflowX: 'auto' }}>\n                <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>\n                  {i18nService.t('statsReseaux.growthRate')}\n                </Typography>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                  <BarChart data={computeGrowthData(networkEvolution)} margin={{ top: 20, right: 20, left: 0, bottom: 0 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis allowDecimals={false} tickFormatter={v => v + '%'} />\n                    <RechartsTooltip formatter={(value) => value !== null ? value + '%' : 'N/A'} />\n                    <Legend />\n                    <Bar dataKey=\"croissance\" fill=\"#82ca9d\" name={i18nService.t('statsReseaux.growth')} />\n                  </BarChart>\n                </ResponsiveContainer>\n                {/* Interpretation Box for Growth Rate */}\n                {(() => {\n                  const growthData = computeGrowthData(networkEvolution);\n                  if (!growthData.length) return null;\n                  \n                  const growing = (growthData || []).filter(n => typeof n.croissance === 'number' && n.croissance > 0);\n                  const declining = (growthData || []).filter(n => typeof n.croissance === 'number' && n.croissance < 0);\n                  const stagnant = (growthData || []).filter(n => n.croissance === 0);\n                  const newOnes = (growthData || []).filter(n => n.croissance === i18nService.t('statsReseaux.new'));\n                  \n                  // Filtrer les données valides (avec des noms)\n                  const validGrowing = growing.filter(n => n.name || n.nom);\n                  const validDeclining = declining.filter(n => n.name || n.nom);\n                  const validStagnant = stagnant.filter(n => n.name || n.nom);\n                  const validNewOnes = newOnes.filter(n => n.name || n.nom);\n                  \n                  \n                  // Ne pas afficher la boîte si aucune donnée valide\n                  if (validGrowing.length === 0 && validDeclining.length === 0 && validStagnant.length === 0 && validNewOnes.length === 0) {\n                    return null;\n                  }\n                  \n                  return (\n                    <Box sx={{ bgcolor: '#f9f9f9', borderRadius: 2, border: '1px solid #e0e0e0', p: 4, mt: 3 }}>\n                      <Typography sx={{ fontSize: 18, color: '#444', fontStyle: 'italic', textAlign: 'center' }}>\n                        {validGrowing.length > 0 && (\n                          <>\n                            <Box component=\"span\" fontWeight=\"bold\" color=\"success.main\">\n                              Réseaux en croissance : {validGrowing.map(n => `« ${n.name || n.nom} » (+${n.croissance}%)`).join(', ')}\n                            </Box>.<br />\n                          </>\n                        )}\n                        {validDeclining.length > 0 && (\n                          <>\n                            <Box component=\"span\" fontWeight=\"bold\" color=\"error.main\">\n                              Réseaux en baisse : {validDeclining.map(n => `« ${n.name || n.nom} » (${n.croissance}%)`).join(', ')}\n                            </Box>.<br />\n                          </>\n                        )}\n                        {validStagnant.length > 0 && (\n                          <>\n                            <Box component=\"span\" fontWeight=\"bold\" color=\"warning.main\">\n                              Réseaux stables : {validStagnant.map(n => `« ${n.name || n.nom} »`).join(', ')}\n                            </Box>.<br />\n                          </>\n                        )}\n                        {validNewOnes.length > 0 && (\n                          <>\n                            <Box component=\"span\" fontWeight=\"bold\" color=\"info.main\">\n                              Nouveaux réseaux : {validNewOnes.map(n => `« ${n.name || n.nom} »`).join(', ')}\n                            </Box>.<br />\n                          </>\n                        )}\n                      </Typography>\n                    </Box>\n                  );\n                })()}\n              </Paper>\n            </Grid>\n          )}\n        </Grid>\n      )}\n    </Box>\n  );\n};\n\nexport default StatsReseaux;\n","import React, { useEffect } from 'react';\nimport { Typography, Box, Paper, CircularProgress, IconButton } from '@mui/material';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend } from 'recharts';\nimport { apiService } from '../../../services/apiService';\nimport { useGlobalCache } from '../../../hooks/useGlobalCache';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { TRANCHE_AGE_OPTIONS } from '../../../constants/enums';\nimport i18nService from '../../../services/i18nService';\n\nconst COLORS = [\"#8884d8\", \"#82ca9d\", \"#ffc658\"];\n\nconst StatsCultes = ({ selectedChurch }) => {\n    // Debug: afficher la valeur de selectedChurch\n    // Debug de l'église sélectionnée - Supprimé pour la production\n\n    // Utilisation du cache global pour éviter les rechargements\n    const { data: serviceAttendance, loading: cacheLoading, error: cacheError, refresh: fetchServices } = useGlobalCache(\n        `services-${selectedChurch || 'none'}`,\n        async () => {\n            // Ne pas faire d'appel API si selectedChurch n'est pas valide\n            if (!selectedChurch) {\n                return [];\n            }\n            const now = new Date();\n            const startMonth = new Date(now.getFullYear(), now.getMonth() - 2, 1);\n            const endMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n            const start = startMonth.toISOString().slice(0, 10);\n            const end = endMonth.toISOString().slice(0, 10);\n            \n            const params = { start, end, churchId: selectedChurch.id };\n            \n            const res = await apiService.services.getAll(params);\n            return res.data?.data || res.data || [];\n        },\n        { ttl: 5 * 60 * 1000, staleWhileRevalidate: true }\n    );\n\n    // Rafraîchissement automatique quand selectedChurch change\n    useEffect(() => {\n        if (selectedChurch) {\n            // Rafraîchir les données avec un délai pour éviter les appels simultanés\n            const timer = setTimeout(() => {\n                fetchServices();\n            }, 100);\n            \n            return () => clearTimeout(timer);\n        }\n    }, [selectedChurch]); // Dépendance unique : selectedChurch\n\n    // Préparation des données pour LineChart (8 derniers dimanches)\n    const chartData = React.useMemo(() => {\n        if (!serviceAttendance || serviceAttendance.length === 0) return [];\n        // Obtenir les 8 derniers dimanches distincts présents dans serviceAttendance\n        const allDays = serviceAttendance.map(s => new Date(s.date).toISOString().slice(0, 10));\n        const uniqueDays = [...new Set(allDays)];\n        const sundaysStr = uniqueDays.sort().slice(-8);\n        // Pour chaque date, agréger les présences selon le champ 'culte' (Culte 1, 2, 3)\n        return sundaysStr.map(dateStr => {\n            const entry = { date: new Date(dateStr).toLocaleDateString('fr-FR') };\n            ['Culte 1', 'Culte 2', 'Culte 3'].forEach((culteLabel, idx) => {\n                const culte = serviceAttendance.find(s =>\n                    new Date(s.date).toISOString().slice(0, 10) === dateStr &&\n                    s.culte === culteLabel\n                );\n                entry[`culte${idx + 1}`] = culte ?\n                    (culte.total_adultes || 0)\n                    + (culte.total_enfants || 0)\n                    + (culte.total_chantres || 0)\n                    + (culte.total_protocoles || 0)\n                    + (culte.total_multimedia || 0)\n                    + (culte.total_respo_ecodim || 0)\n                    + (culte.total_animateurs_ecodim || 0)\n                    + (culte.total_enfants_ecodim || 0)\n                    : 0;\n            });\n            return entry;\n        });\n    }, [serviceAttendance]);\n\n    // === NOUVEAU : données pour chaque culte (audience sans/avec serviteurs) ===\n    const serviteursKeys = [\n        'total_chantres',\n        'total_protocoles',\n        'total_multimedia',\n        'total_respo_ecodim',\n        'total_animateurs_ecodim',\n    ];\n    \n    const makeAudienceData = React.useCallback((culteLabel) => {\n        if (!serviceAttendance || serviceAttendance.length === 0) return [];\n        const allDays = serviceAttendance.map(s => new Date(s.date).toISOString().slice(0, 10));\n        const uniqueDays = [...new Set(allDays)];\n        const sundaysStr = uniqueDays.sort().slice(-8);\n        return sundaysStr.map(dateStr => {\n            const entry = { date: new Date(dateStr).toLocaleDateString('fr-FR') };\n            const culte = serviceAttendance.find(s =>\n                new Date(s.date).toISOString().slice(0, 10) === dateStr &&\n                s.culte === culteLabel\n            );\n            // Effectif total (avec serviteurs)\n            const audienceAvecServiteurs = culte\n                ? (culte.total_adultes || 0)\n                    + (culte.total_enfants || 0)\n                    + (culte.total_chantres || 0)\n                    + (culte.total_protocoles || 0)\n                    + (culte.total_multimedia || 0)\n                    + (culte.total_respo_ecodim || 0)\n                    + (culte.total_animateurs_ecodim || 0)\n                    + (culte.total_enfants_ecodim || 0)\n                : 0;\n            // Effectif sans les serviteurs\n            const totalServiteurs = culte\n                ? serviteursKeys.reduce((sum, key) => sum + (culte[key] || 0), 0)\n                : 0;\n            const audienceSansServiteurs = audienceAvecServiteurs - totalServiteurs;\n            entry.audienceSansServiteurs = audienceSansServiteurs;\n            entry.audienceAvecServiteurs = audienceAvecServiteurs;\n            return entry;\n        });\n    }, [serviceAttendance, serviteursKeys]);\n\n    const chartDataCulte1 = React.useMemo(() => makeAudienceData('Culte 1'), [makeAudienceData]);\n    const chartDataCulte2 = React.useMemo(() => makeAudienceData('Culte 2'), [makeAudienceData]);\n    const chartDataCulte3 = React.useMemo(() => makeAudienceData('Culte 3'), [makeAudienceData]);\n\n    // Fonction pour afficher les erreurs de manière sécurisée\n    const renderError = (error) => {\n        if (typeof error === 'string') {\n            return error;\n        } else if (error?.message) {\n            return error.message;\n        } else if (error?.response?.data?.message) {\n            return error.response.data.message;\n        } else {\n            return 'Une erreur est survenue lors du chargement des données';\n        }\n    };\n\n    // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n    if (!selectedChurch) {\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                    Veuillez sélectionner une église pour voir les statistiques\n                </Typography>\n            </Box>\n        );\n    }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3, alignItems: 'center' }}>\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>Statistiques Cultes</Typography>\n        <IconButton onClick={fetchServices} disabled={cacheLoading} aria-label={i18nService.t('common.actions.refresh')}>\n          <RefreshIcon />\n        </IconButton>\n      </Box>\n      {cacheLoading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}><CircularProgress /></Box>\n      ) : cacheError ? (\n        <Typography color=\"error\">\n          {renderError(cacheError)}\n        </Typography>\n      ) : (\n        <Paper data-aos=\"fade-up\" sx={{ p: 3, height: 520, minWidth: 0, overflowX: 'auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', backgroundColor: '#f9f9f9' }}>\n          <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>\n            Fréquentation des cultes par culte (8 derniers dimanches)\n          </Typography>\n          <Box sx={{ flex: 1, minHeight: 0, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <ResponsiveContainer width=\"100%\" height={440}>\n              <LineChart data={chartData} margin={{ top: 20, right: 20, left: 0, bottom: 0 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis allowDecimals={false} />\n                <RechartsTooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"culte1\" stroke={COLORS[0]} strokeWidth={2} dot={true} name=\"Culte 1\" />\n                <Line type=\"monotone\" dataKey=\"culte2\" stroke={COLORS[1]} strokeWidth={2} dot={true} name=\"Culte 2\" />\n                <Line type=\"monotone\" dataKey=\"culte3\" stroke={COLORS[2]} strokeWidth={2} dot={true} name=\"Culte 3\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </Box>\n        </Paper>\n      )}\n      {/* Diagramme Culte 1 */}\n      <Paper sx={{ p: 3, mt: 4, backgroundColor: '#f9f9f9' }}>\n        <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>Audience - Culte 1</Typography>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={chartDataCulte1}>\n            <XAxis dataKey=\"date\" />\n            <YAxis allowDecimals={false} />\n            <RechartsTooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"audienceSansServiteurs\" stroke=\"#1976d2\" strokeWidth={2} dot={true} name=\"Audience, à l'exception des serviteurs\" />\n            <Line type=\"monotone\" dataKey=\"audienceAvecServiteurs\" stroke=\"#43a047\" strokeWidth={2} dot={true} name=\"Audience, avec les serviteurs\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </Paper>\n      {/* Diagramme Culte 2 */}\n      <Paper sx={{ p: 3, mt: 4, backgroundColor: '#f9f9f9' }}>\n        <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>Audience - Culte 2</Typography>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={chartDataCulte2}>\n            <XAxis dataKey=\"date\" />\n            <YAxis allowDecimals={false} />\n            <RechartsTooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"audienceSansServiteurs\" stroke=\"#1976d2\" strokeWidth={2} dot={true} name=\"Audience, à l'exception des serviteurs\" />\n            <Line type=\"monotone\" dataKey=\"audienceAvecServiteurs\" stroke=\"#43a047\" strokeWidth={2} dot={true} name=\"Audience, avec les serviteurs\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </Paper>\n      {/* Diagramme Culte 3 */}\n      <Paper sx={{ p: 3, mt: 4, backgroundColor: '#f9f9f9' }}>\n        <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>Audience - Culte 3</Typography>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={chartDataCulte3}>\n            <XAxis dataKey=\"date\" />\n            <YAxis allowDecimals={false} />\n            <RechartsTooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"audienceSansServiteurs\" stroke=\"#1976d2\" strokeWidth={2} dot={true} name=\"Audience, à l'exception des serviteurs\" />\n            <Line type=\"monotone\" dataKey=\"audienceAvecServiteurs\" stroke=\"#43a047\" strokeWidth={2} dot={true} name=\"Audience, avec les serviteurs\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default StatsCultes;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Alert,\n  CircularProgress,\n  Card,\n  CardContent,\n  CardActions,\n  Chip\n} from '@mui/material';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { TYPES_CULTE_OPTIONS } from '../../../constants/enums';\nimport i18nService from '../../../services/i18nService';\nimport previsionnelService from '../../../services/previsionnelService';\nimport apiService from '../../../services/apiService';\n\nconst StatsPrevisionnel = ({ selectedChurch, user }) => {\n  // Fonction pour obtenir la semaine précédente au format \"YYYY-Www\" (ISO 8601)\n  const getPreviousWeek = () => {\n    const now = new Date();\n    \n    // Utiliser la logique ISO 8601 pour calculer la semaine\n    const year = now.getFullYear();\n    const startOfYear = new Date(year, 0, 1);\n    const days = Math.floor((now - startOfYear) / (24 * 60 * 60 * 1000));\n    \n    // La semaine 1 est celle qui contient le 4 janvier\n    let weekNumber = Math.ceil((days + startOfYear.getDay() + 1) / 7);\n    \n    // Ajuster pour les années où le 1er janvier est dans la semaine 52/53 de l'année précédente\n    if (weekNumber === 0) {\n      const lastYear = year - 1;\n      const lastYearStart = new Date(lastYear, 0, 1);\n      const lastYearDays = Math.floor((now - lastYearStart) / (24 * 60 * 60 * 1000));\n      weekNumber = Math.ceil((lastYearDays + lastYearStart.getDay() + 1) / 7);\n    }\n    \n    // Soustraire 1 pour obtenir la semaine précédente\n    weekNumber = weekNumber - 1;\n    \n    // Gérer le cas où on est en semaine 1 (retourner la semaine 52/53 de l'année précédente)\n    if (weekNumber <= 0) {\n      const lastYear = year - 1;\n      // Approximativement 52 semaines par an\n      weekNumber = 52;\n      return `${lastYear}-W${weekNumber.toString().padStart(2, '0')}`;\n    }\n    \n    \n    return `${year}-W${weekNumber.toString().padStart(2, '0')}`;\n  };\n\n  const [filters, setFilters] = useState({\n    church_id: selectedChurch?.id || '',\n    network_id: '',\n    type_culte: '',\n    date_from: getPreviousWeek()\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [networks, setNetworks] = useState([]);\n\n\n  // Charger les réseaux disponibles\n  useEffect(() => {\n    const loadNetworks = async () => {\n      try {\n        const response = await apiService.networks.getAll({ churchId: selectedChurch?.id });\n        \n        // Vérifier la structure de la réponse\n        const networksData = response.data?.data || response.data || [];\n        \n        if (Array.isArray(networksData)) {\n          setNetworks(networksData);\n          \n          // Définir automatiquement le premier réseau et le premier type de culte\n          if (networksData.length > 0) {\n            const firstNetwork = networksData[0];\n            const firstTypeCulte = TYPES_CULTE_OPTIONS.find(option => option.value !== 'Tous');\n            \n            setFilters(prev => {\n              const newFilters = {\n                ...prev,\n                network_id: firstNetwork.id,\n                type_culte: firstTypeCulte ? firstTypeCulte.value : ''\n              };\n              \n              return newFilters;\n            });\n          }\n        } else {\n          setNetworks([]);\n        }\n      } catch (error) {\n        setNetworks([]);\n      }\n    };\n\n    if (selectedChurch?.id) {\n      loadNetworks();\n    } else {\n      setNetworks([]);\n    }\n  }, [selectedChurch]);\n\n  // Charger les statistiques automatiquement quand les filtres changent\n  useEffect(() => {\n    if (selectedChurch?.id && filters.network_id && filters.type_culte && filters.date_from) {\n      loadStats();\n    }\n  }, [selectedChurch?.id, filters.network_id, filters.type_culte, filters.date_from, networks.length]);\n\n  const loadStats = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Préparer les filtres pour l'API en gérant le format de semaine\n      const apiFilters = { ...filters };\n      \n      // Si une date de semaine est sélectionnée, la convertir en plage de dates\n      if (filters.date_from && filters.date_from.includes('-W')) {\n        try {\n          const [year, week] = filters.date_from.split('-W');\n          const weekNum = parseInt(week);\n          \n          // Méthode plus robuste pour calculer les dates de semaine\n          // Utiliser ISO week date (semaine 1 = première semaine avec jeudi)\n          const firstDayOfYear = new Date(year, 0, 1);\n          const firstThursdayOfYear = new Date(year, 0, 1);\n          \n          // Trouver le premier jeudi de l'année\n          while (firstThursdayOfYear.getDay() !== 4) { // 4 = jeudi\n            firstThursdayOfYear.setDate(firstThursdayOfYear.getDate() + 1);\n          }\n          \n          // Calculer le lundi de la semaine demandée\n          const mondayOfWeek = new Date(firstThursdayOfYear);\n          mondayOfWeek.setDate(firstThursdayOfYear.getDate() + (weekNum - 1) * 7 - 3); // -3 pour aller au lundi\n          \n          // Calculer le dimanche de la semaine demandée\n          const sundayOfWeek = new Date(mondayOfWeek);\n          sundayOfWeek.setDate(mondayOfWeek.getDate() + 6);\n          \n          // Vérifier que les dates sont valides\n          if (isNaN(mondayOfWeek.getTime()) || isNaN(sundayOfWeek.getTime())) {\n            throw new Error('Dates invalides générées');\n          }\n          \n          // Formater les dates pour l'API\n          apiFilters.date_from = mondayOfWeek.toISOString().split('T')[0];\n          apiFilters.date_to = sundayOfWeek.toISOString().split('T')[0];\n        } catch (error) {\n          // En cas d'erreur, utiliser la date telle quelle\n          delete apiFilters.date_from;\n        }\n      }\n      \n      // Appel à l'API réelle\n      const response = await previsionnelService.getStats(apiFilters);\n      \n      if (response.success) {\n        const apiStats = response.data;\n        \n        // Transformer les données de l'API pour correspondre à notre structure\n        const transformedStats = {\n          total_previsionnel: apiStats.total_previsionnel || 0,\n          total_effectif_reel: apiStats.total_effectif || 0,\n          chartData: apiStats.chart_data || [],\n          details: apiStats.details || []\n        };\n        \n        setStats(transformedStats);\n      } else {\n        setError(response.message || 'Erreur lors du chargement des statistiques');\n        setStats(null);\n      }\n    } catch (error) {\n      setError(error.response?.data?.message || 'Erreur lors du chargement des statistiques');\n      setStats(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFilterChange = (field, value) => {\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [field]: value\n      };\n      return newFilters;\n    });\n  };\n\n\n\n  // Fonction pour formater la date de semaine de manière lisible (ISO 8601)\n  const formatWeekDate = (weekValue) => {\n    if (!weekValue) return '';\n    \n    try {\n      // Le format week est \"YYYY-Www\" où ww est le numéro de semaine\n      const [year, week] = weekValue.split('-W');\n      const weekNum = parseInt(week);\n      \n      // Utiliser la même logique ISO 8601 que getPreviousWeek\n      const startOfYear = new Date(year, 0, 1);\n      const firstThursdayOfYear = new Date(year, 0, 1);\n      \n      // Trouver le premier jeudi de l'année\n      while (firstThursdayOfYear.getDay() !== 4) { // 4 = jeudi\n        firstThursdayOfYear.setDate(firstThursdayOfYear.getDate() + 1);\n      }\n      \n      // Calculer le dimanche de la semaine demandée\n      const mondayOfWeek = new Date(firstThursdayOfYear);\n      mondayOfWeek.setDate(firstThursdayOfYear.getDate() + (weekNum - 1) * 7 - 3); // -3 pour aller au lundi\n      \n      // Calculer le dimanche de la semaine (lundi + 6 jours)\n      const sundayOfWeek = new Date(mondayOfWeek);\n      sundayOfWeek.setDate(mondayOfWeek.getDate() + 6);\n      \n      // Formater en français\n      const options = { \n        weekday: 'long', \n        day: 'numeric', \n        month: 'long', \n        year: 'numeric' \n      };\n      \n      return `Semaine ${weekNum} (${sundayOfWeek.toLocaleDateString('fr-FR', options)})`;\n    } catch (error) {\n      return weekValue;\n    }\n  };\n\n  // Préparer les données pour le graphique\n  const chartData = stats?.chartData || [];\n  const totalPrevisionnel = stats?.total_previsionnel || 0;\n  const totalEffectifReel = stats?.total_effectif_reel || 0;\n  const difference = totalPrevisionnel - totalEffectifReel;\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        {i18nService.t('previsionnel.dashboard.title')}\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        {i18nService.t('previsionnel.dashboard.subtitle')}\n      </Typography>\n\n      {/* Filtres */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          {i18nService.t('previsionnel.dashboard.filters.title')}\n        </Typography>\n        \n        <Grid container spacing={3} alignItems=\"flex-start\">\n          {/* Réseau */}\n          <Grid item xs={12} sm={6} md={4}>\n            <FormControl fullWidth>\n              <InputLabel>{i18nService.t('previsionnel.dashboard.filters.network')}</InputLabel>\n              <Select\n              sx={{ minWidth: '100px' }}\n                value={filters.network_id}\n                onChange={(e) => handleFilterChange('network_id', e.target.value)}\n                label={i18nService.t('previsionnel.dashboard.filters.network')}\n              >\n                {networks.map((network) => (\n                  <MenuItem key={network.id} value={network.id}>\n                    {network.nom}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          {/* Type de culte */}\n          <Grid item xs={12} sm={6} md={4}>\n            <FormControl fullWidth>\n              <InputLabel>{i18nService.t('previsionnel.dashboard.filters.type')}</InputLabel>\n              <Select\n              sx={{ minWidth: '100px' }}\n                value={filters.type_culte}\n                onChange={(e) => handleFilterChange('type_culte', e.target.value)}\n                label={i18nService.t('previsionnel.dashboard.filters.type')}\n              >\n                <MenuItem value=\"\">Tous</MenuItem>\n                {TYPES_CULTE_OPTIONS.filter(option => option.value !== 'Tous').map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          {/* Date unique */}\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              type=\"week\"\n              label=\"Semaine\"\n              sx={{ minWidth: '100px' }}\n              value={filters.date_from || ''}\n              onChange={(e) => handleFilterChange('date_from', e.target.value)}\n              InputLabelProps={{ shrink: true }}\n              helperText={filters.date_from ? formatWeekDate(filters.date_from) : \"Format: Semaine/Mois/Année\"}\n            />\n          </Grid>\n\n\n        </Grid>\n      </Paper>\n\n      {/* Affichage des erreurs */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Statistiques globales */}\n      {stats && (\n        <Grid container spacing={3} sx={{ mb: 3 }}>\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Total Prévisionnel\n                </Typography>\n                <Typography variant=\"h4\">\n                  {totalPrevisionnel}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          \n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Effectif Réseau\n                </Typography>\n                <Typography variant=\"h4\">\n                  {totalEffectifReel}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          \n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Différence\n                </Typography>\n                <Typography variant=\"h4\" color={difference >= 0 ? 'success.main' : 'error.main'}>\n                  {difference >= 0 ? '+' : ''}{difference}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {/* Graphique comparatif */}\n      {chartData.length > 0 ? (\n        <Paper sx={{ p: 3, mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {i18nService.t('previsionnel.dashboard.chart.title')}\n          </Typography>\n          \n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar \n                dataKey=\"effectif_reel\" \n                fill=\"#8884d8\" \n                name={i18nService.t('previsionnel.dashboard.chart.effectifReel')}\n              />\n              <Bar \n                dataKey=\"previsionnel\" \n                fill=\"#82ca9d\" \n                name={i18nService.t('previsionnel.dashboard.chart.previsionnel')}\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </Paper>\n      ) : (\n        !loading && !error && (\n          <Paper sx={{ p: 3, mb: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"text.secondary\">\n              {i18nService.t('previsionnel.dashboard.chart.noData')}\n            </Typography>\n          </Paper>\n        )\n      )}\n\n      {/* Tableau détaillé */}\n      {stats?.details && stats.details.length > 0 && (\n        <Paper sx={{ p: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {i18nService.t('previsionnel.dashboard.table.title')}\n          </Typography>\n          \n          <Box sx={{ overflowX: 'auto' }}>\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n              <thead>\n                <tr style={{ backgroundColor: '#f5f5f5' }}>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('previsionnel.dashboard.table.network')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('previsionnel.dashboard.table.type')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('previsionnel.dashboard.table.date')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('previsionnel.dashboard.table.effectifReel')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('previsionnel.dashboard.table.previsionnel')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('previsionnel.dashboard.table.difference')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {stats.details.map((detail, index) => (\n                  <tr key={index} style={{ borderBottom: '1px solid #eee' }}>\n                    <td style={{ padding: '12px' }}>{detail.network_name}</td>\n                    <td style={{ padding: '12px' }}>{detail.type_culte}</td>\n                    <td style={{ padding: '12px' }}>\n                      {new Date(detail.date).toLocaleDateString('fr-FR')}\n                    </td>\n                    <td style={{ padding: '12px' }}>{detail.effectif_reel}</td>\n                    <td style={{ padding: '12px' }}>{detail.previsionnel}</td>\n                    <td style={{ padding: '12px' }}>\n                      <Chip\n                        label={detail.difference >= 0 ? `+${detail.difference}` : detail.difference}\n                        color={detail.difference >= 0 ? 'success' : 'error'}\n                        size=\"small\"\n                      />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </Box>\n        </Paper>\n      )}\n\n      {/* Indicateur de chargement */}\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n          <CircularProgress />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default StatsPrevisionnel;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Alert,\n  CircularProgress,\n  Card,\n  CardContent,\n  Chip\n} from '@mui/material';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { TYPES_CULTE_OPTIONS } from '../../../constants/enums';\nimport i18nService from '../../../services/i18nService';\nimport assistanceService from '../../../services/assistanceService';\nimport apiService from '../../../services/apiService';\n\nconst StatsAssistance = ({ selectedChurch, user }) => {\n  // Fonction pour obtenir la semaine actuelle au format \"YYYY-Www\" (ISO 8601)\n  // Dans StatsAssistance, on affiche la semaine actuelle mais les données correspondent à la semaine précédente\n  const getCurrentWeek = () => {\n    const now = new Date();\n    \n    // Utiliser la logique ISO 8601 pour calculer la semaine actuelle\n    const year = now.getFullYear();\n    const startOfYear = new Date(year, 0, 1);\n    const days = Math.floor((now - startOfYear) / (24 * 60 * 60 * 1000));\n    \n    // La semaine 1 est celle qui contient le 4 janvier\n    let weekNumber = Math.ceil((days + startOfYear.getDay() + 1) / 7);\n    \n    // Ajuster pour les années où le 1er janvier est dans la semaine 52/53 de l'année précédente\n    if (weekNumber === 0) {\n      const lastYear = year - 1;\n      const lastYearStart = new Date(lastYear, 0, 1);\n      const lastYearDays = Math.floor((now - lastYearStart) / (24 * 60 * 60 * 1000));\n      weekNumber = Math.ceil((lastYearDays + lastYearStart.getDay() + 1) / 7);\n    }\n    \n    \n    return `${year}-W${weekNumber.toString().padStart(2, '0')}`;\n  };\n\n  const [filters, setFilters] = useState({\n    church_id: selectedChurch?.id || '',\n    network_id: '',\n    type_culte: '',\n    date_from: getCurrentWeek()\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [networks, setNetworks] = useState([]);\n\n  // Charger les réseaux disponibles\n  useEffect(() => {\n    const loadNetworks = async () => {\n      try {\n        const response = await apiService.networks.getAll({ churchId: selectedChurch?.id });\n        \n        // Vérifier la structure de la réponse\n        const networksData = response.data?.data || response.data || [];\n        \n        if (Array.isArray(networksData)) {\n          setNetworks(networksData);\n          \n          // Définir automatiquement le premier réseau et le premier type de culte\n          if (networksData.length > 0) {\n            const firstNetwork = networksData[0];\n            const firstTypeCulte = TYPES_CULTE_OPTIONS.find(option => option.value !== 'Tous');\n            \n            setFilters(prev => {\n              const newFilters = {\n                ...prev,\n                network_id: firstNetwork.id,\n                type_culte: firstTypeCulte ? firstTypeCulte.value : ''\n              };\n              \n              return newFilters;\n            });\n          }\n        } else {\n          setNetworks([]);\n        }\n      } catch (error) {\n        setNetworks([]);\n      }\n    };\n\n    if (selectedChurch?.id) {\n      loadNetworks();\n    } else {\n      setNetworks([]);\n    }\n  }, [selectedChurch]);\n\n  // Charger les statistiques automatiquement quand les filtres changent\n  useEffect(() => {\n    if (selectedChurch?.id && filters.network_id && filters.type_culte && filters.date_from) {\n      loadStats();\n    }\n  }, [selectedChurch?.id, filters.network_id, filters.type_culte, filters.date_from, networks.length]);\n\n  const loadStats = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Préparer les filtres pour l'API en gérant le format de semaine\n      const apiFilters = { ...filters };\n      \n      // Si une date de semaine est sélectionnée, la convertir en plage de dates\n      // IMPORTANT: Dans StatsAssistance, la semaine sélectionnée N correspond aux données de la semaine N-1\n      if (filters.date_from && filters.date_from.includes('-W')) {\n        try {\n          const [year, week] = filters.date_from.split('-W');\n          let weekNum = parseInt(week);\n          \n          // Soustraire 1 pour obtenir la semaine précédente (données réelles)\n          weekNum = weekNum - 1;\n          \n          // Gérer le cas où on est en semaine 1 (retourner la semaine 52/53 de l'année précédente)\n          if (weekNum <= 0) {\n            const lastYear = parseInt(year) - 1;\n            weekNum = 52; // Approximativement 52 semaines par an\n          }\n          \n          // Utiliser la semaine N-1 pour calculer les dates\n          const targetYear = weekNum <= 0 ? parseInt(year) - 1 : parseInt(year);\n          const targetWeek = weekNum <= 0 ? 52 : weekNum;\n          \n          // Méthode plus robuste pour calculer les dates de semaine\n          // Utiliser ISO week date (semaine 1 = première semaine avec jeudi)\n          const firstDayOfYear = new Date(targetYear, 0, 1);\n          const firstThursdayOfYear = new Date(targetYear, 0, 1);\n          \n          // Trouver le premier jeudi de l'année\n          while (firstThursdayOfYear.getDay() !== 4) { // 4 = jeudi\n            firstThursdayOfYear.setDate(firstThursdayOfYear.getDate() + 1);\n          }\n          \n          // Calculer le lundi de la semaine demandée (N-1)\n          const mondayOfWeek = new Date(firstThursdayOfYear);\n          mondayOfWeek.setDate(firstThursdayOfYear.getDate() + (targetWeek - 1) * 7 - 3); // -3 pour aller au lundi\n          \n          // Calculer le dimanche de la semaine demandée (N-1)\n          const sundayOfWeek = new Date(mondayOfWeek);\n          sundayOfWeek.setDate(mondayOfWeek.getDate() + 6);\n          \n          // Vérifier que les dates sont valides\n          if (isNaN(mondayOfWeek.getTime()) || isNaN(sundayOfWeek.getTime())) {\n            throw new Error('Dates invalides générées');\n          }\n          \n          // Formater les dates pour l'API\n          apiFilters.date_from = mondayOfWeek.toISOString().split('T')[0];\n          apiFilters.date_to = sundayOfWeek.toISOString().split('T')[0];\n        } catch (error) {\n          // En cas d'erreur, utiliser la date telle quelle\n          delete apiFilters.date_from;\n        }\n      }\n      \n      // Appel à l'API réelle\n      const response = await assistanceService.getStats(apiFilters);\n      \n      if (response.success) {\n        const apiStats = response.data;\n        \n        // Transformer les données de l'API pour correspondre à notre structure\n        const transformedStats = {\n          total_presents: apiStats.total_presents || 0,\n          total_effectif_reel: apiStats.effectif_reel || 0,\n          chartData: apiStats.chart_data || [],\n          details: apiStats.details || []\n        };\n        \n        setStats(transformedStats);\n      } else {\n        setError(response.message || 'Erreur lors du chargement des statistiques');\n        setStats(null);\n      }\n    } catch (error) {\n      setError(error.response?.data?.message || 'Erreur lors du chargement des statistiques');\n      setStats(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFilterChange = (field, value) => {\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [field]: value\n      };\n      return newFilters;\n    });\n  };\n\n  // Fonction pour formater la date de semaine de manière lisible (ISO 8601)\n  // Dans StatsAssistance, la semaine sélectionnée N affiche les données de la semaine N-1\n  const formatWeekDate = (weekValue) => {\n    if (!weekValue) return '';\n    \n    try {\n      // Le format week est \"YYYY-Www\" où ww est le numéro de semaine\n      const [year, week] = weekValue.split('-W');\n      const weekNum = parseInt(week);\n      \n      // Calculer la semaine précédente (données réelles)\n      let dataWeekNum = weekNum - 1;\n      let dataYear = parseInt(year);\n      \n      // Gérer le cas où on est en semaine 1 (données de la semaine 52/53 de l'année précédente)\n      if (dataWeekNum <= 0) {\n        dataYear = parseInt(year) - 1;\n        dataWeekNum = 52;\n      }\n      \n      // Utiliser la même logique ISO 8601 pour la semaine des données\n      const startOfYear = new Date(dataYear, 0, 1);\n      const firstThursdayOfYear = new Date(dataYear, 0, 1);\n      \n      // Trouver le premier jeudi de l'année\n      while (firstThursdayOfYear.getDay() !== 4) { // 4 = jeudi\n        firstThursdayOfYear.setDate(firstThursdayOfYear.getDate() + 1);\n      }\n      \n      // Calculer le dimanche de la semaine des données (N-1)\n      const mondayOfWeek = new Date(firstThursdayOfYear);\n      mondayOfWeek.setDate(firstThursdayOfYear.getDate() + (dataWeekNum - 1) * 7 - 3); // -3 pour aller au lundi\n      \n      // Calculer le dimanche de la semaine (lundi + 6 jours)\n      const sundayOfWeek = new Date(mondayOfWeek);\n      sundayOfWeek.setDate(mondayOfWeek.getDate() + 6);\n      \n      // Formater en français\n      const options = { \n        weekday: 'long', \n        day: 'numeric', \n        month: 'long', \n        year: 'numeric' \n      };\n      \n      return `Semaine ${weekNum} → Données semaine ${dataWeekNum} (${sundayOfWeek.toLocaleDateString('fr-FR', options)})`;\n    } catch (error) {\n      return weekValue;\n    }\n  };\n\n  // Préparer les données pour le graphique\n  const chartData = stats?.chartData || [];\n  const totalPresents = stats?.total_presents || 0;\n  const totalEffectifReel = stats?.total_effectif_reel || 0;\n  const difference = totalPresents - totalEffectifReel;\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        {i18nService.t('assistance.dashboard.title')}\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        {i18nService.t('assistance.dashboard.subtitle')}\n      </Typography>\n      {/* Filtres */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          {i18nService.t('assistance.dashboard.filters.title')}\n        </Typography>\n        \n        <Grid container spacing={3} alignItems=\"flex-start\">\n          {/* Réseau */}\n          <Grid item xs={12} sm={6} md={4}>\n            <FormControl fullWidth>\n              <InputLabel>{i18nService.t('assistance.dashboard.filters.network')}</InputLabel>\n              <Select\n                sx={{ minWidth: '100px' }}\n                value={filters.network_id}\n                onChange={(e) => handleFilterChange('network_id', e.target.value)}\n                label={i18nService.t('assistance.dashboard.filters.network')}\n              >\n                {networks.map((network) => (\n                  <MenuItem key={network.id} value={network.id}>\n                    {network.nom}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          {/* Type de culte */}\n          <Grid item xs={12} sm={6} md={4}>\n            <FormControl fullWidth>\n              <InputLabel>{i18nService.t('assistance.dashboard.filters.type')}</InputLabel>\n              <Select\n                sx={{ minWidth: '100px' }}\n                value={filters.type_culte}\n                onChange={(e) => handleFilterChange('type_culte', e.target.value)}\n                label={i18nService.t('assistance.dashboard.filters.type')}\n              >\n                <MenuItem value=\"\">Tous</MenuItem>\n                {TYPES_CULTE_OPTIONS.filter(option => option.value !== 'Tous').map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          {/* Date unique */}\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              type=\"week\"\n              label={i18nService.t('common.actions.week')}\n              sx={{ minWidth: '100px' }}\n              value={filters.date_from || ''}\n              onChange={(e) => handleFilterChange('date_from', e.target.value)}\n              InputLabelProps={{ shrink: true }}\n              helperText={filters.date_from ? formatWeekDate(filters.date_from) : \"Format: Semaine/Mois/Année\"}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Affichage des erreurs */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Statistiques globales */}\n      {stats && (\n        <Grid container spacing={3} sx={{ mb: 3 }}>\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Total Présents\n                </Typography>\n                <Typography variant=\"h4\">\n                  {totalPresents}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          \n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Effectif Réseau\n                </Typography>\n                <Typography variant=\"h4\">\n                  {totalEffectifReel}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          \n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Différence\n                </Typography>\n                <Typography variant=\"h4\" color={difference >= 0 ? 'success.main' : 'error.main'}>\n                  {difference >= 0 ? '+' : ''}{difference}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {/* Graphique comparatif */}\n      {chartData.length > 0 ? (\n        <Paper sx={{ p: 3, mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {i18nService.t('assistance.dashboard.chart.title')}\n          </Typography>\n          \n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar \n                dataKey=\"effectif_reel\" \n                fill=\"#8884d8\" \n                name={i18nService.t('assistance.dashboard.chart.effectifReel')}\n              />\n\n              <Bar \n                dataKey=\"assistance\" \n                fill=\"#ffc658\" \n                name={i18nService.t('assistance.dashboard.chart.assistance')}\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </Paper>\n      ) : (\n        !loading && !error && (\n          <Paper sx={{ p: 3, mb: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"text.secondary\">\n              {i18nService.t('assistance.dashboard.chart.noData')}\n            </Typography>\n          </Paper>\n        )\n      )}\n\n      {/* Tableau récapitulatif */}\n      {stats?.details && stats.details.length > 0 && (\n        <Paper sx={{ p: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {i18nService.t('assistance.dashboard.table.title')}\n          </Typography>\n          \n          <Box sx={{ overflowX: 'auto' }}>\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n              <thead>\n                <tr style={{ backgroundColor: '#f5f5f5' }}>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('assistance.dashboard.table.network')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('assistance.dashboard.table.type')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('assistance.dashboard.table.date')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('assistance.dashboard.table.effectifReel')}\n                  </th>\n\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('assistance.dashboard.table.assistance')}\n                  </th>\n                  <th style={{ padding: '12px', textAlign: 'left', borderBottom: '1px solid #ddd' }}>\n                    {i18nService.t('assistance.dashboard.table.difference')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {stats.details.map((detail, index) => (\n                  <tr key={index} style={{ borderBottom: '1px solid #eee' }}>\n                    <td style={{ padding: '12px' }}>{detail.network_name}</td>\n                    <td style={{ padding: '12px' }}>{detail.type_culte}</td>\n                    <td style={{ padding: '12px' }}>\n                      {new Date(detail.date).toLocaleDateString('fr-FR')}\n                    </td>\n                    <td style={{ padding: '12px' }}>{detail.effectif_reel}</td>\n                    <td style={{ padding: '12px' }}>{detail.assistance}</td>\n                    <td style={{ padding: '12px' }}>\n                      <Chip\n                        label={detail.assistance - detail.effectif_reel >= 0 ? \n                          `+${detail.assistance - detail.effectif_reel}` : \n                          detail.assistance - detail.effectif_reel}\n                        color={detail.assistance - detail.effectif_reel >= 0 ? 'success' : 'error'}\n                        size=\"small\"\n                      />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </Box>\n        </Paper>\n      )}\n\n      {/* Indicateur de chargement */}\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n          <CircularProgress />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default StatsAssistance;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  IconButton,\n  Avatar,\n  Chip,\n  CircularProgress,\n  Alert,\n  Paper\n} from '@mui/material';\nimport {\n  Refresh as RefreshIcon,\n  ZoomIn as ZoomInIcon,\n  ZoomOut as ZoomOutIcon,\n  CenterFocusStrong as CenterFocusIcon\n} from '@mui/icons-material';\nimport chaineImpactService from '../../../services/chaineImpactService';\nimport i18nService from '../../../services/i18nService';\n\n// Composant récursif pour rendre un nœud et ses enfants\nconst TreeNode = ({ node, expandedNodes, onToggle, level = 0 }) => {\n  const hasChildren = node.children && node.children.length > 0;\n  const isExpanded = expandedNodes.has(node.id);\n  \n  // Obtenir le nom du niveau\n  const getLevelName = (niveau) => {\n    switch (niveau) {\n      case 0:\n        return 'Responsable d\\'église';\n      case 1:\n        return 'Responsable de réseau';\n      case 2:\n        return '12';\n      case 3:\n        return '144';\n      case 4:\n        return '1728';\n      case 5:\n        return '20738';\n      case 6:\n        return '248832';\n      default:\n        return `Niveau ${niveau}`;\n    }\n  };\n\n  // Obtenir la couleur du niveau\n  const getLevelColor = (niveau) => {\n    switch (niveau) {\n      case 0:\n        return 'primary';\n      case 1:\n        return 'secondary';\n      case 2:\n        return 'success';\n      case 3:\n        return 'info';\n      case 4:\n        return 'warning';\n      case 5:\n        return 'error';\n      case 6:\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      {/* Le nœud principal */}\n      <Box\n        onClick={() => hasChildren && onToggle(node.id)}\n        sx={{\n          cursor: hasChildren ? 'pointer' : 'default',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          p: 2,\n          border: '2px solid',\n          borderColor: `${getLevelColor(node.niveau)}.main`,\n          borderRadius: 2,\n          bgcolor: `${getLevelColor(node.niveau)}.50`,\n          minWidth: node.niveau === 0 ? 200 : node.niveau === 1 ? 160 : 130,\n          transition: 'all 0.3s ease',\n          mb: hasChildren && isExpanded ? 2 : 0,\n          '&:hover': hasChildren ? {\n            transform: 'translateY(-2px)',\n            boxShadow: '0 4px 20px rgba(0,0,0,0.15)',\n            borderColor: `${getLevelColor(node.niveau)}.dark`\n          } : {}\n        }}\n      >\n        {/* Indicateur d'expansion */}\n        {hasChildren && (\n          <Box sx={{\n            position: 'absolute',\n            top: -8,\n            right: -8,\n            bgcolor: 'white',\n            border: '2px solid',\n            borderColor: `${getLevelColor(node.niveau)}.main`,\n            borderRadius: '50%',\n            width: 28,\n            height: 28,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            color: `${getLevelColor(node.niveau)}.main`,\n            boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n            zIndex: 10\n          }}>\n            {isExpanded ? '−' : '+'}\n          </Box>\n        )}\n\n        {/* Indicateur de connexion (flèche vers le bas) */}\n        {hasChildren && (\n          <Box sx={{\n            position: 'absolute',\n            bottom: -8,\n            left: '50%',\n            transform: 'translateX(-50%)',\n            width: 0,\n            height: 0,\n            borderLeft: '6px solid transparent',\n            borderRight: '6px solid transparent',\n            borderTop: `8px solid ${getLevelColor(node.niveau)}.main`,\n            filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))'\n          }} />\n        )}\n\n        {/* Avatar */}\n        <Avatar\n          src={node.user.image ? `${process.env.REACT_APP_API_URL || 'http://localhost:5001'}/${node.user.image}` : undefined}\n          sx={{\n            width: node.niveau === 0 ? 80 : node.niveau === 1 ? 60 : 50,\n            height: node.niveau === 0 ? 80 : node.niveau === 1 ? 60 : 50,\n            mb: 1,\n            border: '2px solid',\n            borderColor: `${getLevelColor(node.niveau)}.main`\n          }}\n          onError={(e) => {\n            // Erreur de chargement de l'image dans la chaîne d'impact\n          }}\n        >\n          {node.user.username?.charAt(0)?.toUpperCase()}\n        </Avatar>\n\n        {/* Nom */}\n        <Typography\n          variant={node.niveau === 0 ? 'subtitle1' : 'body2'}\n          sx={{\n            fontWeight: 'bold',\n            textAlign: 'center',\n            mb: 0.5,\n            color: 'text.primary'\n          }}\n        >\n          {node.user.username}\n        </Typography>\n\n        {/* Rôle */}\n        <Typography\n          variant=\"caption\"\n          sx={{\n            color: `${getLevelColor(node.niveau)}.main`,\n            fontWeight: '600',\n            textAlign: 'center'\n          }}\n        >\n          {getLevelName(node.niveau)}\n        </Typography>\n\n        {/* Indicateur de niveau */}\n        <Chip\n          label={`Niveau ${node.niveau}`}\n          color={getLevelColor(node.niveau)}\n          variant=\"filled\"\n          size=\"small\"\n          sx={{ mt: 1, fontSize: '0.7rem' }}\n        />\n\n        {/* Compteur d'enfants */}\n        {hasChildren && (\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mt: 0.5,\n              color: 'text.secondary',\n              fontSize: '0.65rem'\n            }}\n          >\n            {node.children.length} leader{node.children.length > 1 ? 's' : ''}\n          </Typography>\n        )}\n      </Box>\n\n      {/* Lignes de liaison et enfants */}\n      {hasChildren && isExpanded && (\n        <Box sx={{ mt: 3, position: 'relative' }}>\n          {/* Ligne de liaison principale depuis le parent */}\n          <Box sx={{\n            position: 'absolute',\n            top: -30,\n            left: '50%',\n            transform: 'translateX(-50%)',\n            width: 4,\n            height: 30,\n            bgcolor: `${getLevelColor(node.niveau)}.main`,\n            borderRadius: 2,\n            boxShadow: '0 2px 8px rgba(0,0,0,0.2)'\n          }} />\n          \n          {/* Ligne horizontale de connexion entre tous les enfants */}\n          {node.children.length > 1 && (\n            <Box sx={{\n              position: 'absolute',\n              top: -15,\n              left: '50%',\n              transform: 'translateX(-50%)',\n              width: 'calc(100% - 120px)', // Largeur adaptative pour centrage\n              height: 4,\n              bgcolor: `${getLevelColor(node.niveau)}.main`,\n              borderRadius: 2,\n              boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n              zIndex: 5\n            }} />\n          )}\n\n          {/* Lignes de connexion individuelles pour chaque enfant */}\n          {node.children.map((child, index) => (\n            <Box\n              key={`line-${child.id}`}\n              sx={{\n                position: 'absolute',\n                top: -15,\n                left: '50%',\n                transform: 'translateX(-50%)',\n                width: 4,\n                height: 15,\n                bgcolor: `${getLevelColor(node.niveau)}.main`,\n                borderRadius: 2,\n                boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n                zIndex: 5\n              }}\n            />\n          ))}\n          \n          {/* Conteneur des enfants centrés par rapport au parent */}\n          <Box sx={{\n            display: 'flex',\n            justifyContent: 'center', // Centrer les enfants par rapport au parent\n            gap: 4,\n            flexWrap: 'nowrap', // Empêcher le wrap pour permettre le scroll horizontal\n            position: 'relative',\n            pt: 1,\n            minWidth: 'max-content', // Assure que le contenu ne soit pas coupé\n            width: '100%', // Prendre toute la largeur disponible\n            '&::-webkit-scrollbar': {\n              height: '8px'\n            },\n            '&::-webkit-scrollbar-track': {\n              backgroundColor: '#f1f1f1',\n              borderRadius: '4px'\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: '#c1c1c1',\n              borderRadius: '4px',\n              '&:hover': {\n                backgroundColor: '#a8a8a8'\n              }\n            }\n          }}>\n            {node.children.map((child, index) => (\n              <Box key={child.id} sx={{ position: 'relative', flexShrink: 0 }}> {/* flexShrink: 0 empêche la compression */}\n                {/* Point de connexion (cercle) */}\n                <Box sx={{\n                  position: 'absolute',\n                  top: -15,\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  width: 10,\n                  height: 10,\n                  bgcolor: `${getLevelColor(node.niveau)}.main`,\n                  borderRadius: '50%',\n                  border: '3px solid white',\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.3)',\n                  zIndex: 10\n                }} />\n                \n                {/* Récursion pour l'enfant */}\n                <TreeNode\n                  node={child}\n                  expandedNodes={expandedNodes}\n                  onToggle={onToggle}\n                  level={level + 1}\n                />\n              </Box>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nconst ChaineImpact = ({ selectedChurch }) => {\n  const [treeData, setTreeData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  \n  // États pour la navigation de carte\n  const [zoom, setZoom] = useState(1);\n  const [pan, setPan] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [lastPan, setLastPan] = useState({ x: 0, y: 0 });\n  const containerRef = useRef(null);\n\n  // Charger l'arbre de la chaîne d'impact\n  const loadChaineImpact = async () => {\n    if (!selectedChurch?.id) return;\n\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await chaineImpactService.getChaineImpact(selectedChurch.id);\n      \n      if (response.success && response.tree) {\n        setTreeData(response);\n        // Initialiser avec le nœud racine développé (niveau 0)\n        if (response.tree.length > 0) {\n          const rootNode = response.tree.find(node => node.niveau === 0) || response.tree[0];\n          setExpandedNodes(new Set([rootNode.id]));\n        }\n      } else {\n        setTreeData(null);\n      }\n    } catch (err) {\n      setError('Erreur lors du chargement de la chaîne d\\'impact');\n      // Erreur chargement chaîne d'impact\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Mettre à jour/rebâtir la chaîne d'impact\n  const handleUpdateChaineImpact = async () => {\n    if (!selectedChurch?.id) return;\n\n    setError(null);\n    try {\n      await chaineImpactService.updateChaineImpact(selectedChurch.id);\n      await loadChaineImpact(); // Recharger après mise à jour\n    } catch (err) {\n      setError('Erreur lors de la mise à jour de la chaîne d\\'impact');\n      // Erreur mise à jour chaîne d'impact\n    }\n  };\n\n  // Basculer l'expansion d'un nœud\n  const toggleNode = (nodeId) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  // Fonctions de navigation de carte\n  const handleMouseDown = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.button === 0) { // Clic gauche seulement\n      setIsDragging(true);\n      setDragStart({ x: e.clientX, y: e.clientY });\n      setLastPan(pan);\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    e.preventDefault();\n    if (isDragging) {\n      const deltaX = e.clientX - dragStart.x;\n      const deltaY = e.clientY - dragStart.y;\n      setPan({\n        x: lastPan.x + deltaX,\n        y: lastPan.y + deltaY\n      });\n    }\n  };\n\n  const handleMouseUp = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n\n  const handleWheel = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    const newZoom = Math.max(0.1, Math.min(3, zoom * delta));\n    setZoom(newZoom);\n  };\n\n  const handleZoomIn = () => {\n    setZoom(prev => Math.min(3, prev * 1.2));\n  };\n\n  const handleZoomOut = () => {\n    setZoom(prev => Math.max(0.1, prev / 1.2));\n  };\n\n  const handleResetView = () => {\n    setZoom(1);\n    setPan({ x: 0, y: 0 });\n  };\n\n\n  // Charger au montage et quand l'église change\n  useEffect(() => {\n    loadChaineImpact();\n  }, [selectedChurch?.id]);\n\n  if (!selectedChurch?.id) {\n    return (\n      <Box sx={{ p: 3, textAlign: 'center' }}>\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          Veuillez sélectionner une église pour voir sa chaîne d'impact\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 3 }}>\n      {/* En-tête */}\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Chaîne d'Impact - {selectedChurch.nom}\n        </Typography>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          {/* Contrôles de zoom */}\n          <Box sx={{ display: 'flex', alignItems: 'center', mr: 2, p: 1, bgcolor: 'grey.100', borderRadius: 1 }}>\n            <Typography variant=\"caption\" sx={{ mr: 1, color: 'text.secondary' }}>\n              Navigation carte\n            </Typography>\n            <IconButton \n              size=\"small\" \n              onClick={handleZoomOut}\n              aria-label=\"Zoom arrière\"\n            >\n              <ZoomOutIcon />\n            </IconButton>\n            <Typography variant=\"caption\" sx={{ mx: 1, minWidth: '40px', textAlign: 'center' }}>\n              {Math.round(zoom * 100)}%\n            </Typography>\n            <IconButton \n              size=\"small\" \n              onClick={handleZoomIn}\n              aria-label=\"Zoom avant\"\n            >\n              <ZoomInIcon />\n            </IconButton>\n            <IconButton \n              size=\"small\" \n              onClick={handleResetView}\n              aria-label=\"Vue d'ensemble\"\n              sx={{ ml: 1 }}\n            >\n              <CenterFocusIcon />\n            </IconButton>\n          </Box>\n          \n          <IconButton onClick={handleUpdateChaineImpact} disabled={loading} aria-label={i18nService.t('common.actions.refresh')} sx={{ mr: 1 }}>\n            <RefreshIcon />\n          </IconButton>\n        </Box>\n      </Box>\n\n      {/* Stats */}\n      {treeData && (\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Total de {treeData.total_nodes} nœud{treeData.total_nodes > 1 ? 's' : ''} dans la hiérarchie\n          </Typography>\n        </Box>\n      )}\n\n      {/* Gestion des erreurs */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError(null)}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Contenu principal */}\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : !treeData || !treeData.tree || treeData.tree.length === 0 ? (\n        <Box sx={{ textAlign: 'center', p: 4 }}>\n          <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n            Aucune chaîne d'impact trouvée\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {i18nService.t('chaineImpact.updateChainMessage')}\n          </Typography>\n        </Box>\n      ) : (\n        <Paper \n          data-testid=\"chaine-impact-container\"\n          ref={containerRef}\n          sx={{ \n            p: 0,\n            overflow: 'hidden',\n            position: 'relative',\n            height: '600px',\n            cursor: isDragging ? 'grabbing' : 'grab',\n            userSelect: 'none',\n            touchAction: 'none'\n          }}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n          onWheel={handleWheel}\n        >\n          {/* Instructions de navigation */}\n          <Box sx={{ \n            position: 'absolute', \n            top: 10, \n            left: 10, \n            zIndex: 10,\n            bgcolor: 'rgba(255,255,255,0.9)',\n            p: 1,\n            borderRadius: 1,\n            fontSize: '0.75rem',\n            color: 'text.secondary'\n          }}>\n            Glisser pour déplacer • Molette pour zoomer\n          </Box>\n          \n          {/* Conteneur de l'arbre avec transformation de carte */}\n          <Box sx={{\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            position: 'relative'\n          }}>\n            <Box sx={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: `translate(-50%, -50%) translate(${pan.x}px, ${pan.y}px) scale(${zoom})`,\n              transformOrigin: 'center center',\n              transition: isDragging ? 'none' : 'transform 0.1s ease-out',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              minWidth: 'max-content',\n              py: 2\n            }}>\n              {/* Rendre l'arbre récursivement */}\n              {treeData.tree.map((rootNode) => (\n                <TreeNode\n                  key={rootNode.id}\n                  node={rootNode}\n                  expandedNodes={expandedNodes}\n                  onToggle={toggleNode}\n                  level={0}\n                />\n              ))}\n            </Box>\n          </Box>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default ChaineImpact;","import React, { useState, useEffect, useCallback } from 'react';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport { Typography, Box, IconButton, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem, Collapse, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Grid, Snackbar, Alert } from '@mui/material';\nimport i18nService from '../../../services/i18nService';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DeleteConfirmDialog from '../../DeleteConfirmDialog';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GroupIcon from '@mui/icons-material/Group';\nimport Loading from './../../Loading';\nimport SecureErrorMessage from '../../common/SecureErrorMessage';\nimport { useNetworks } from '../../../hooks/useApi';\nimport { useNotification } from '../../../hooks/useNotification';\nimport { apiService } from '../../../services/apiService';\nimport { usePermissions } from '../../../hooks/usePermissions';\nimport { formatQualificationWithFallback } from '../../../utils/qualificationFormatter';\n\nconst Networks = ({ selectedChurch, user }) => {\n    \n    const {\n        networks,\n        loading,\n        error,\n        fetchNetworks,\n        createNetwork,\n        updateNetwork,\n        deleteNetwork\n    } = useNetworks(selectedChurch ? { churchId: selectedChurch.id } : {});\n\n\n    // Fonction de rafraîchissement manuel\n    const handleRefresh = useCallback(async () => {\n        if (selectedChurch?.id) {\n            await fetchNetworks({ churchId: selectedChurch.id });\n        }\n    }, [fetchNetworks, selectedChurch?.id]);\n\n    // Rafraîchir automatiquement quand l'église change\n    useEffect(() => {\n        if (selectedChurch?.id) {\n            handleRefresh();\n        }\n    }, [selectedChurch?.id, handleRefresh]);\n\n    const {\n        notification,\n        showSuccess,\n        showError,\n        hideNotification\n    } = useNotification();\n\n    const {\n        canCreateNetworks,\n        canUpdateNetworks,\n        canDeleteNetworks\n    } = usePermissions();\n\n    const [expandedNetworkId, setExpandedNetworkId] = useState(null);\n    const [expandedGrId, setExpandedGrId] = useState(null);\n    const [networkDetails, setNetworkDetails] = useState({});\n    const [networkGrs, setNetworkGrs] = useState({});\n    const [groupDetails, setGroupDetails] = useState({});\n    const [networkModal, setNetworkModal] = useState(false);\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [networkToDelete, setNetworkToDelete] = useState(null);\n    const [networkForm, setNetworkForm] = useState({\n        nom: '',\n        responsable1: '',\n        responsable2: null\n    });\n    const [editingNetworkId, setEditingNetworkId] = useState(null);\n    const [networkSearchTerm, setNetworkSearchTerm] = useState('');\n    const [members, setMembers] = useState([]);\n    const [membersError, setMembersError] = useState(null);\n    const [churches, setChurches] = useState([]);\n    const [formError, setFormError] = useState('');\n\n    // Fonction pour charger les membres disponibles (isolés) + responsable actuel\n    const loadMembers = useCallback(async () => {\n        try {\n            // Charger les utilisateurs disponibles (isolés) de l'église sélectionnée\n            const availableResponse = await apiService.users.getAvailable({ \n                churchId: selectedChurch?.id \n            });\n            const availableUsers = availableResponse.data?.data || availableResponse.data || [];\n            \n            // Si on est en mode édition, ajouter le responsable actuel du réseau\n            if (editingNetworkId && networkForm.responsable1) {\n                try {\n                    const currentResponsableResponse = await apiService.users.getById(networkForm.responsable1);\n                    const currentResponsable = currentResponsableResponse.data?.data || currentResponsableResponse.data;\n                    \n                    if (currentResponsable) {\n                        // Vérifier si le responsable actuel n'est pas déjà dans la liste\n                        const isAlreadyInList = availableUsers.some(user => \n                            (user.id || user._id) === (currentResponsable.id || currentResponsable._id)\n                        );\n                        \n                        if (!isAlreadyInList) {\n                            availableUsers.push(currentResponsable);\n                        }\n                    }\n                } catch (err) {\n                    // Erreur silencieuse lors du chargement du responsable actuel\n                }\n            }\n            \n            setMembers(availableUsers);\n        } catch (err) {\n            const processedError = handleApiError(err, 'le chargement des membres disponibles');\n            setMembersError(processedError.message);\n        }\n    }, [selectedChurch?.id, editingNetworkId, networkForm.responsable1]);\n\n    const loadChurches = useCallback(async () => {\n        try {\n            const response = await apiService.churches.getAll();\n            setChurches(response.data?.data || response.data || []);\n        } catch (err) {\n            setChurches([]);\n        }\n    }, []);\n\n    const handleNetworkClick = async (networkId) => {\n        setExpandedNetworkId(expandedNetworkId === networkId ? null : networkId);\n        setExpandedGrId(null);\n        if (!networkDetails[networkId]) {\n            try {\n                const res = await apiService.networks.getById(networkId);\n                setNetworkDetails(prev => ({ ...prev, [networkId]: res.data?.data || res.data }));\n            } catch (e) { /* gestion erreur possible */ }\n        }\n        if (!networkGrs[networkId]) {\n            try {\n                const res = await apiService.networks.getGroups(networkId);\n                setNetworkGrs(prev => ({ ...prev, [networkId]: res.data?.data || res.data }));\n            } catch (e) { /* gestion erreur possible */ }\n        }\n    };\n\n    const handleGrClick = async (grId) => {\n        setExpandedGrId(expandedGrId === grId ? null : grId);\n        if (!groupDetails[grId]) {\n            try {\n                const res = await apiService.groups.getById(grId);\n                const groupData = res.data?.data || res.data;\n                setGroupDetails(prev => ({ ...prev, [grId]: groupData }));\n            } catch (e) { \n                const processedError = handleApiError(e, 'le chargement du groupe');\n                // Erreur silencieuse lors du chargement du groupe\n            }\n        }\n    };\n\n    useEffect(() => {\n        fetchNetworks();\n        loadMembers();\n        loadChurches();\n    }, [selectedChurch, fetchNetworks, loadMembers, loadChurches]); // Utiliser selectedChurch au lieu de fetchNetworks\n\n    // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n    if (!selectedChurch) {\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                    {i18nService.t('dashboard.networks.selectChurchMessage')}\n                </Typography>\n            </Box>\n        );\n    }\n\n    // Fonctions de gestion des formulaires\n    const handleSubmitNetwork = async (e) => {\n        e.preventDefault();\n        \n        if (!networkForm.nom || !networkForm.responsable1) {\n            setFormError('Le nom et le responsable principal sont requis');\n            return;\n        }\n        \n        try {\n            const formData = {\n                nom: networkForm.nom,\n                responsable1: networkForm.responsable1,\n                ...(networkForm.responsable2 && { responsable2: networkForm.responsable2 }),\n                church: selectedChurch.id\n            };\n\n            if (editingNetworkId) {\n                await updateNetwork(editingNetworkId, formData);\n                showSuccess('Réseau modifié avec succès');\n            } else {\n                await createNetwork(formData);\n                showSuccess('Réseau créé avec succès');\n            }\n\n            setNetworkModal(false);\n            setNetworkForm({ nom: '', responsable1: '', responsable2: null });\n            setEditingNetworkId(null);\n            setFormError(''); // Réinitialiser l'erreur\n            \n            // Forcer un rafraîchissement immédiat\n            setTimeout(() => {\n                handleRefresh();\n            }, 100);\n        } catch (err) {\n            // Afficher l'erreur dans le formulaire\n            const errorMessage = err.response?.data?.message || err.message || 'Erreur lors de l\\'opération';\n            setFormError(errorMessage);\n            \n            // Aussi afficher dans la notification globale\n            showError(errorMessage);\n        }\n    };\n\n    const handleEditNetwork = (network) => {\n        setNetworkForm({\n            nom: network.nom,\n            responsable1: network.responsable1?.id || network.responsable1?._id || network.responsable1 || '',\n            responsable2: network.responsable2?.id || network.responsable2?._id || network.responsable2 || null\n        });\n        setEditingNetworkId(network.id || network._id);\n        setNetworkModal(true);\n        \n        // Recharger les membres pour inclure le responsable actuel\n        setTimeout(() => {\n            loadMembers();\n        }, 100);\n    };\n\n    // Ouvre le dialog de confirmation\n    const handleOpenDeleteDialog = (network) => {\n        setNetworkToDelete(network);\n        setDeleteDialogOpen(true);\n    };\n\n    // Ferme le dialog\n    const handleCloseDeleteDialog = () => {\n        setDeleteDialogOpen(false);\n        setNetworkToDelete(null);\n    };\n\n    // Confirme la suppression\n    const handleConfirmDeleteNetwork = async () => {\n        if (!networkToDelete) return;\n        try {\n            await deleteNetwork(networkToDelete.id || networkToDelete._id);\n            showSuccess('Réseau supprimé avec succès');\n            \n            // Forcer un rafraîchissement immédiat\n            setTimeout(() => {\n                handleRefresh();\n            }, 100);\n        } catch (err) {\n            // Afficher uniquement la notification d'erreur en bas\n            showError(err.response?.data?.message || err.message || 'Erreur lors de la suppression');\n        } finally {\n            handleCloseDeleteDialog();\n        }\n    };\n\n    return (\n        <Box sx={{ \n          width: '100%',\n          overflow: 'hidden', // Empêcher le scroll vertical\n          overflowX: 'auto' // Permettre le scroll horizontal uniquement si nécessaire\n        }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n                <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>{i18nService.t('dashboard.networks.management')}</Typography>\n                <Box sx={{ display: 'flex', gap: 2 }}>\n                    <IconButton onClick={handleRefresh} disabled={loading} aria-label={i18nService.t('common.actions.refresh')}>\n                        <RefreshIcon />\n                    </IconButton>\n                    <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => {\n                        setNetworkModal(true);\n                        setFormError(''); // Réinitialiser l'erreur\n                    }} disabled={!canCreateNetworks || !selectedChurch?.id}>{i18nService.t('dashboard.networks.newNetwork')}</Button>\n                </Box>\n            </Box>\n            <TextField data-aos=\"fade-up\"\n                fullWidth\n                variant=\"outlined\"\n                placeholder={i18nService.t('dashboard.networks.searchPlaceholder')}\n                value={networkSearchTerm}\n                onChange={(e) => setNetworkSearchTerm(e.target.value)}\n                InputProps={{\n                    startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />\n                }}\n                sx={{ mb: 3 }}\n            />\n            {loading ? (\n                <Loading titre={i18nService.t('dashboard.networks.loading')} />\n            ) : error ? (\n                <SecureErrorMessage error={error} title={i18nService.t('dashboard.networks.loadingError')} />\n            ) : (\n                <TableContainer data-aos=\"fade-up\" component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Nom</TableCell>\n                                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Responsable(s)</TableCell>\n                                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Église</TableCell>\n                                                                    <TableCell align=\"right\" sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.networks.table.actions')}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Array.isArray(networks) ? (\n                                networks\n                                    .filter(network => network.nom.toLowerCase().includes(networkSearchTerm.toLowerCase()))\n                                    .map((network) => (\n                                        <React.Fragment key={network.id || network._id}>\n                                            <TableRow hover onClick={() => handleNetworkClick(network.id || network._id)} style={{ cursor: 'pointer' }}>\n                                                <TableCell>\n                                                    <IconButton size=\"small\">\n                                                        {expandedNetworkId === (network.id || network._id) ? <ExpandLess /> : <ExpandMore />}\n                                                    </IconButton>\n                                                    {network.nom}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {(() => {\n                                                        const getLabel = (user) => user?.username || user?.pseudo || user?.email || '-';\n                                                        const r1 = typeof network.responsable1 === 'object'\n                                                            ? getLabel(network.responsable1)\n                                                            : getLabel(members.find(m => (m.id || m._id) === network.responsable1));\n                                                        const r2 = typeof network.responsable2 === 'object'\n                                                            ? getLabel(network.responsable2)\n                                                            : getLabel(members.find(m => (m.id || m._id) === network.responsable2));\n                                                        if (r1 && r2 && r2 !== '-') return `${r1} & ${r2}`;\n                                                        if (r1 && r1 !== '-') return r1;\n                                                        if (r2 && r2 !== '-') return r2;\n                                                        return '-';\n                                                    })()}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {network.church ? (churches.find(c => (c.id || c._id) === (network.church?.id || network.church?._id || network.church))?.nom || '-') : '-'}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        onClick={e => { e.stopPropagation(); handleEditNetwork(network); }}\n                                                        color=\"primary\"\n                                                        size=\"small\"\n                                                        disabled={!canUpdateNetworks}\n                                                    >\n                                                        <EditIcon />\n                                                    </IconButton>\n                                                    <IconButton\n                                                        onClick={e => { e.stopPropagation(); handleOpenDeleteDialog(network); }}\n                                                        color=\"error\"\n                                                        size=\"small\"\n                                                        disabled={!canDeleteNetworks}\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                    {/* Action: Détail réseau */}\n                                                    <IconButton\n                                                        onClick={e => {\n                                                            e.stopPropagation();\n                                                            window.open(`/networks/${network.id || network._id}`, '_blank');\n                                                        }}\n                                                        color=\"info\"\n                                                        size=\"small\"\n                                                        title={i18nService.t('common.actions.view')}\n                                                    >\n                                                        <GroupIcon />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow>\n                                                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={3}>\n                                                    <Collapse in={expandedNetworkId === (network.id || network._id)} timeout=\"auto\" unmountOnExit>\n                                                        <Box margin={1}>\n\n                                                            <Table size=\"small\">\n                                                                <TableBody>\n                                                                    {Array.isArray(networkGrs[network.id || network._id]) && networkGrs[network.id || network._id].map((gr) => (\n                                                                        <React.Fragment key={gr.id || gr._id}>\n                                                                            <TableRow hover onClick={e => { e.stopPropagation(); handleGrClick(gr.id || gr._id); }} style={{ cursor: 'pointer' }}>\n                                                                                <TableCell>\n                                                                                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                                                                                        <GroupIcon color=\"primary\" />\n                                                                                        {expandedGrId === (gr.id || gr._id) ? <ExpandLess /> : <ExpandMore />}\n                                                                                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                                                                                            {gr.responsable2?.username\n                                                                                                ? `GR ${gr.responsable1?.username} & ${gr.responsable2?.username}`\n                                                                                                : `GR ${gr.responsable1?.username}`}\n                                                                                        </Typography>\n                                                                                    </Box>\n                                                                                </TableCell>\n                                                                            </TableRow>\n                                                                            <TableRow>\n                                                                                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={3}>\n                                                                                    <Collapse in={expandedGrId === (gr.id || gr._id)} timeout=\"auto\" unmountOnExit>\n                                                                                        <Box margin={1}>\n\n                                                                                                                        <ol style={{ paddingLeft: '2rem' }}>\n                                {(groupDetails[gr.id || gr._id]?.members || []).map(member => {\n                                    // Gérer la structure imbriquée des membres\n                                    const memberData = member.user || member;\n                                    const memberId = member.id || member._id || memberData.id || memberData._id;\n                                    const username = memberData.username || memberData.pseudo || 'Nom inconnu';\n                                    const qualification = formatQualificationWithFallback(memberData.qualification, 'Non définie');\n                                    \n                                    return (\n                                        <li\n                                            key={memberId}\n                                            style={{\n                                                background: '#f5f5f5',\n                                                borderRadius: '8px',\n                                                padding: '8px 12px',\n                                                marginBottom: '8px',\n                                                color: '#333',\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                boxShadow: '0 1px 3px rgba(0,0,0,0.04)',\n                                                transition: 'background 0.2s',\n                                                cursor: 'pointer'\n                                            }}\n                                            onMouseOver={e => e.currentTarget.style.background = '#e3f2fd'}\n                                            onMouseOut={e => e.currentTarget.style.background = '#f5f5f5'}\n                                        >\n                                            <span style={{ marginRight: '10px', color: '#1976d2' }}>👤</span>\n                                            <span style={{ fontWeight: 500 }}>{username}</span>\n                                            <span style={{ marginLeft: '8px', fontStyle: 'italic', color: '#4b5563' }}>\n                                                ({qualification})\n                                            </span>\n                                        </li>\n                                    );\n                                })}\n                            </ol>\n                                                                                        </Box>\n                                                                                    </Collapse>\n                                                                                </TableCell>\n                                                                            </TableRow>\n                                                                        </React.Fragment>\n                                                                    ))}\n                                                                </TableBody>\n                                                            </Table>\n                                                        </Box>\n                                                    </Collapse>\n                                                </TableCell>\n                                            </TableRow>\n                                        </React.Fragment>\n                                    ))\n                            ) : null}\n                            {Array.isArray(networks) &&\n                                networks.filter(network => network.nom.toLowerCase().includes(networkSearchTerm.toLowerCase())).length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={3} align=\"center\">\n                                            {networks.length === 0 ? i18nService.t('dashboard.networks.noNetworks') : i18nService.t('dashboard.networks.noSearchResults')}\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            )}\n\n            <Dialog\n                open={networkModal}\n                onClose={() => setNetworkModal(false)}\n                maxWidth=\"sm\"\n                fullWidth\n                PaperProps={{\n                    sx: {\n                        width: '100%',\n                        maxWidth: '450px',\n                        margin: '20px'\n                    }\n                }}\n            >\n\n                <DialogTitle>{editingNetworkId ? i18nService.t('dashboard.networks.dialog.editTitle') : i18nService.t('dashboard.networks.dialog.createTitle')}</DialogTitle>\n                \n                {/* Affichage de l'erreur du formulaire */}\n                {formError && (\n                    <Box sx={{ px: 3, pb: 2 }}>\n                        <Alert severity=\"error\" onClose={() => setFormError('')}>\n                            {formError}\n                        </Alert>\n                    </Box>\n                )}\n                \n                <form onSubmit={handleSubmitNetwork}>\n                    <DialogContent sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\n                            <Grid container spacing={2} sx={{ display: 'flex', }}>\n                                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 400 }}\n                                        label={i18nService.t('dashboard.networks.form.networkName')}\n                                        value={networkForm.nom}\n                                        onChange={(e) => setNetworkForm({ ...networkForm, nom: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 400 }} margin=\"normal\">\n                                        <InputLabel id=\"responsable1-label\">{i18nService.t('networks.details.responsable1')}</InputLabel>\n                                        <Select\n                                            labelId=\"responsable1-label\"\n                                            value={networkForm.responsable1}\n                                            label={i18nService.t('networks.details.responsable1')}\n                                            onChange={(e) => setNetworkForm({ ...networkForm, responsable1: e.target.value })}\n                                            required\n                                        >\n                                            <MenuItem value=\"\"><em>Aucun</em></MenuItem>\n                                            {members.map((member) => (\n                                                <MenuItem key={member.id || member._id} value={member.id || member._id}>{member.username || member.pseudo || member.email}</MenuItem>\n                                            ))}\n                                        </Select>\n                                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, textAlign: 'center' }}>\n                                            {i18nService.t('networks.details.responsable1Helper')}\n                                        </Typography>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 400 }} margin=\"normal\">\n                                        <InputLabel id=\"responsable2-label\" sx={{ color: '#757575' }}>{i18nService.t('networks.details.responsable2')}</InputLabel>\n                                        <Select\n                                            labelId=\"responsable2-label\"\n                                            value={networkForm.responsable2 || ''}\n                                            label={i18nService.t('networks.details.responsable2')}\n                                            onChange={(e) => setNetworkForm({ ...networkForm, responsable2: e.target.value })}\n                                            disabled={true}\n                                            sx={{\n                                                backgroundColor: '#e0e0e0',\n                                                '& .MuiOutlinedInput-notchedOutline': {\n                                                    borderColor: '#bdbdbd'\n                                                },\n                                                '&:hover .MuiOutlinedInput-notchedOutline': {\n                                                    borderColor: '#bdbdbd'\n                                                },\n                                                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                                                    borderColor: '#bdbdbd'\n                                                },\n                                                '& .MuiSelect-icon': {\n                                                    color: '#9e9e9e'\n                                                }\n                                            }}\n                                        >\n                                            <MenuItem value=\"\"><em>Aucun</em></MenuItem>\n                                            {members.map((member) => (\n                                                <MenuItem key={member.id || member._id} value={member.id || member._id}>{member.username || member.pseudo || member.email}</MenuItem>\n                                            ))}\n                                        </Select>\n                                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, textAlign: 'center' }}>\n                                            {i18nService.t('networks.details.responsable2Helper')}\n                                        </Typography>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setNetworkModal(false)}>{i18nService.t('dashboard.members.roleDialog.cancel')}</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!canCreateNetworks}>{editingNetworkId ? i18nService.t('dashboard.networks.dialog.editTitle') : i18nService.t('dashboard.networks.dialog.createTitle')}</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n\n            {/* Dialog de confirmation suppression */}\n            <DeleteConfirmDialog\n                open={deleteDialogOpen}\n                title={i18nService.t('dashboard.networks.deleteDialog.title')}\n                content={networkToDelete ? i18nService.t('dashboard.networks.deleteDialog.content', { networkName: networkToDelete.nom }) : i18nService.t('dashboard.networks.deleteDialog.contentGeneric')}\n                onClose={handleCloseDeleteDialog}\n                onConfirm={handleConfirmDeleteNetwork}\n            />\n\n            {/* Snackbar feedback */}\n            <Snackbar\n                open={notification.open}\n                autoHideDuration={4000}\n                onClose={hideNotification}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            >\n                <Alert onClose={hideNotification} severity={notification.severity} sx={{ width: '100%' }}>\n                    {notification.message}\n                </Alert>\n            </Snackbar>\n        </Box>\n    );\n};\n\nexport default Networks;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport { Typography, Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, CircularProgress, Button } from '@mui/material';\nimport { apiService } from '../../../services/apiService';\nimport i18nService from '../../../services/i18nService';\nimport { formatQualification } from '../../../utils/qualificationFormatter';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nconst NetworksRecap = ({ selectedChurch, user, refreshKey }) => {\n  const [networks, setNetworks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchNetworks = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = selectedChurch ? { churchId: selectedChurch.id } : {};\n      \n      const res = await apiService.stats.getNetworks(params);\n      \n      const data = res.data?.data || res.data || [];\n      \n      if (Array.isArray(data)) {\n        setNetworks(data);\n      } else {\n        setNetworks([]);\n      }\n    } catch (err) {\n      const processedError = handleApiError(err, 'networksrecap - erreur:');\n            ;\n      setError(processedError.message);\n      setNetworks([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedChurch]);\n\n  // Charger les données quand selectedChurch change\n  useEffect(() => {\n    if (selectedChurch) {\n      fetchNetworks();\n    }\n  }, [selectedChurch, fetchNetworks]); // Dependencies updated\n\n  // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n  if (!selectedChurch) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          {i18nService.t('dashboard.networks.selectChurchMessage')}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ \n      width: '100%',\n      overflow: 'hidden', // Empêcher le scroll vertical\n      overflowX: 'auto' // Permettre le scroll horizontal uniquement si nécessaire\n    }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>{i18nService.t('dashboard.networks.recap.title')}</Typography>\n        <Button\n          variant=\"outlined\"\n          startIcon={<RefreshIcon />}\n          onClick={fetchNetworks}\n          disabled={loading}\n        >\n          {loading ? i18nService.t('common.actions.loading') : i18nService.t('dashboard.networks.recap.refresh')}\n        </Button>\n      </Box>\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n          <CircularProgress />\n        </Box>\n      ) : error ? (\n        <Typography color=\"error\">{error}</Typography>\n      ) : networks.length === 0 ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            {i18nService.t('dashboard.networks.noNetworks')}\n          </Typography>\n        </Box>\n      ) : (\n        <TableContainer data-aos=\"fade-up\" component={Paper} sx={{ mt: 2, boxShadow: 3, borderRadius: 2 }}>\n          <Table sx={{ minWidth: 650 }} stickyHeader>\n            <TableHead>\n              <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.networks.recap.table.networkName')}</TableCell>\n                <TableCell align=\"right\" sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.networks.recap.table.totalMembers')}</TableCell>\n                <TableCell align=\"right\" sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.networks.recap.table.nb12')}</TableCell>\n                <TableCell align=\"right\" sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.networks.recap.table.nb144')}</TableCell>\n                <TableCell align=\"right\" sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.networks.recap.table.groupCount')}</TableCell>\n                <TableCell align=\"right\" sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.networks.recap.table.groupResponsablesCount')}</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {networks.map((n, idx) => (\n                <TableRow\n                  key={n.id || n.nom}\n                  sx={{\n                    backgroundColor: idx % 2 === 0 ? '#fafafa' : '#fff',\n                    '&:hover': { backgroundColor: '#e3f2fd' },\n                    borderBottom: '1px solid #e0e0e0',\n                  }}\n                >\n                  <TableCell sx={{ py: 1, px: 2 }}>{n.nom}</TableCell>\n                  <TableCell align=\"right\" sx={{ py: 1, px: 2 }}>{n.memberCount || 0}</TableCell>\n                  <TableCell align=\"right\" sx={{ py: 1, px: 2 }}>\n                    {n.qualifications?.filter(q => formatQualification(q) === '12').length || 0}\n                  </TableCell>\n                  <TableCell align=\"right\" sx={{ py: 1, px: 2 }}>\n                    {n.qualifications?.filter(q => formatQualification(q) === '144').length || 0}\n                  </TableCell>\n                  <TableCell align=\"right\" sx={{ py: 1, px: 2 }}>{n.groupCount || 0}</TableCell>\n                  <TableCell align=\"right\" sx={{ py: 1, px: 2 }}>{n.groupResponsablesCount || 0}</TableCell>\n                </TableRow>\n              ))}\n              {/* Ligne Totaux */}\n              {networks.length > 0 && (() => {\n                const totals = networks.reduce((acc, n) => {\n                  acc.memberCount += n.memberCount || 0;\n                  acc.nb12 += n.qualifications?.filter(q => formatQualification(q) === '12').length || 0;\n                  acc.nb144 += n.qualifications?.filter(q => formatQualification(q) === '144').length || 0;\n                  acc.groupCount += n.groupCount || 0;\n                  acc.groupResponsablesCount += n.groupResponsablesCount || 0;\n                  return acc;\n                }, { memberCount: 0, nb12: 0, nb144: 0, groupCount: 0, groupResponsablesCount: 0 });\n                \n                return (\n                  <TableRow sx={{ backgroundColor: '#e3f2fd', fontWeight: 'bold' }}>\n                    <TableCell sx={{ py: 1, px: 2, fontWeight: 'bold' }}>{i18nService.t('dashboard.networks.recap.table.totals')}</TableCell>\n                    <TableCell align=\"right\" sx={{ py: 1, px: 2, fontWeight: 'bold' }}>{totals.memberCount}</TableCell>\n                    <TableCell align=\"right\" sx={{ py: 1, px: 2, fontWeight: 'bold' }}>{totals.nb12}</TableCell>\n                    <TableCell align=\"right\" sx={{ py: 1, px: 2, fontWeight: 'bold' }}>{totals.nb144}</TableCell>\n                    <TableCell align=\"right\" sx={{ py: 1, px: 2, fontWeight: 'bold' }}>{totals.groupCount}</TableCell>\n                    <TableCell align=\"right\" sx={{ py: 1, px: 2, fontWeight: 'bold' }}>{totals.groupResponsablesCount}</TableCell>\n                  </TableRow>\n                );\n              })()}\n\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default NetworksRecap;\n","import React, { useState, useEffect } from 'react';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport { Box, Typography, Button, IconButton, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions, TableCell, TableContainer, Table, TableHead, TableRow, Paper, TableBody, Snackbar, Alert } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport Loading from '../../Loading';\nimport SecureErrorMessage from '../../common/SecureErrorMessage';\nimport DeleteConfirmDialog from '../../DeleteConfirmDialog';\nimport { useNotification } from '../../../hooks/useNotification';\nimport { apiService } from '../../../services/apiService';\nimport { usePermissions } from '../../../hooks/usePermissions';\nimport i18nService from '../../../services/i18nService';\nimport { useLanguageThemeSync } from '../../../hooks/useLanguageThemeSync';\nimport AccessControl from '../../AccessControl';\n\nconst Carousel = () => {\n    const [carouselModal, setCarouselModal] = useState(false);\n    const [carouselImages, setCarouselImages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [imageToDelete, setImageToDelete] = useState(null);\n\n    // Initialiser le service i18n et forcer le re-rendu sur changement de langue\n    useEffect(() => {\n        i18nService.init();\n    }, []);\n    const lastUpdate = useLanguageThemeSync();\n\n    const {\n        notification,\n        showSuccess,\n        showError,\n        hideNotification\n    } = useNotification();\n\n    const {\n        canCreateCarousel,\n        canDeleteCarousel\n    } = usePermissions();\n\n    const loadCarouselImages = async () => {\n        setLoading(true);\n        try {\n            const response = await apiService.carousel.getAll();\n            setCarouselImages(response.data?.data || response.data || []);\n            setError(null);\n        } catch (err) {\n            setError(processedError.message);\n            setCarouselImages([]);\n            const processedError = handleApiError(err, 'l\\'opération');\n            } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        loadCarouselImages();\n    }, []);\n\n    const handleFileSelect = (event) => {\n        console.log('handleFileSelect appelé', event);\n        console.log('Fichiers sélectionnés:', event.target.files);\n        \n        const file = event.target.files[0];\n        if (file) {\n            console.log('Fichier sélectionné:', file.name, file.type, file.size);\n            setSelectedFile(file);\n        } else {\n            console.log('Aucun fichier sélectionné');\n        }\n        \n        // Réinitialiser la valeur pour permettre la sélection du même fichier\n        event.target.value = '';\n    };\n\n    const handleUpload = async (event) => {\n        if (event) event.preventDefault();\n        \n        // Validation personnalisée\n        if (!selectedFile) {\n            showError(i18nService.t('dashboard.carousel.noFileSelected') || 'Veuillez sélectionner une image');\n            return;\n        }\n\n        try {\n            const formData = new FormData();\n            formData.append('image', selectedFile);\n\n            await apiService.carousel.upload(formData);\n            showSuccess(i18nService.t('dashboard.carousel.uploadSuccess'));\n            setCarouselModal(false);\n            setSelectedFile(null);\n            await loadCarouselImages();\n        } catch (err) {\n            showError(err.message || i18nService.t('dashboard.carousel.uploadError'));\n        }\n    };\n\n    const handleDeleteImage = async () => {\n        if (!imageToDelete) return;\n\n        try {\n            await apiService.carousel.delete(imageToDelete.id || imageToDelete._id);\n            showSuccess(i18nService.t('dashboard.carousel.deleteSuccess'));\n            await loadCarouselImages();\n        } catch (err) {\n            showError(err.message || i18nService.t('dashboard.carousel.deleteError'));\n        } finally {\n            setDeleteDialogOpen(false);\n            setImageToDelete(null);\n        }\n    };\n\n    const handleOpenDeleteDialog = (image) => {\n        setImageToDelete(image);\n        setDeleteDialogOpen(true);\n    };\n\n    const handleCloseDeleteDialog = () => {\n        setDeleteDialogOpen(false);\n        setImageToDelete(null);\n    };\n\n    return (\n        <AccessControl allowedRoles={['SUPER_ADMIN']}>\n            <Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n                <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>{i18nService.t('dashboard.carousel.title')}</Typography>\n                <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => setCarouselModal(true)} disabled={!canCreateCarousel}>{i18nService.t('dashboard.carousel.newImage')}</Button>\n            </Box>\n            {loading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                    <CircularProgress />\n                </Box>\n            ) : error ? (\n                <SecureErrorMessage error={error} title={i18nService.t('dashboard.carousel.loadingError')} />\n            ) : (\n                <TableContainer data-aos=\"fade-up\" component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{i18nService.t('dashboard.carousel.table.image')}</TableCell>\n                                <TableCell>{i18nService.t('dashboard.carousel.table.path')}</TableCell>\n                                <TableCell align=\"right\">{i18nService.t('dashboard.carousel.table.actions')}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Array.isArray(carouselImages) && carouselImages.map((image) => (\n                                <TableRow key={image.id || image._id}>\n                                    <TableCell>\n                                        <img\n                                            src={`${process.env.REACT_APP_API_URL}${image.image_url}`}\n                                            alt=\"Carousel\"\n                                            style={{ height: '50px', width: 'auto' }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{image.image_url}</TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton\n                                            onClick={() => handleOpenDeleteDialog(image)}\n                                            color=\"error\"\n                                            size=\"small\"\n                                            disabled={!canDeleteCarousel}\n                                            title={!canDeleteCarousel ? i18nService.t('dashboard.carousel.readOnlyAdmin') : \"\"}\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            {Array.isArray(carouselImages) && carouselImages.length === 0 && (\n                                <TableRow>\n                                    <TableCell colSpan={3} align=\"center\">\n                                        {i18nService.t('dashboard.carousel.noImages')}\n                                    </TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            )}\n            <Dialog\n                open={carouselModal}\n                onClose={() => setCarouselModal(false)}\n                maxWidth=\"sm\"\n                fullWidth\n                PaperProps={{\n                    sx: {\n                        width: '100%',\n                        maxWidth: '500px',\n                        margin: '20px'\n                    }\n                }}\n            >\n                <DialogTitle>{i18nService.t('dashboard.carousel.dialog.title')}</DialogTitle>\n                <form onSubmit={handleUpload} noValidate>\n                    <DialogContent sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Box sx={{ width: '100%', maxWidth: '450px' }}>\n                            {/* Méthode 1: Button avec component=\"label\" */}\n                            <Button\n                                variant=\"outlined\"\n                                component=\"label\"\n                                fullWidth\n                                sx={{ mt: 2, mb: 1 }}\n                            >\n                                {i18nService.t('dashboard.carousel.dialog.selectImage')}\n                                <input\n                                    type=\"file\"\n                                    name=\"carouselImage\"\n                                    hidden\n                                    accept=\"image/*\"\n                                    onChange={handleFileSelect}\n                                />\n                            </Button>\n                            {selectedFile && (\n                                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 2 }}>\n                                    <Typography variant=\"body2\" sx={{ mb: 1 }} color=\"text.secondary\">\n                                        {selectedFile.name}\n                                    </Typography>\n                                    <Box sx={{ border: '1px solid #eee', borderRadius: 2, p: 1, bgcolor: '#fafafa' }}>\n                                        <img\n                                            src={URL.createObjectURL(selectedFile)}\n                                            alt=\"Prévisualisation\"\n                                            style={{ maxHeight: 120, maxWidth: 200, objectFit: 'contain' }}\n                                        />\n                                    </Box>\n                                </Box>\n                            )}\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setCarouselModal(false)}>{i18nService.t('common.actions.cancel')}</Button>\n                        <Button \n                            type=\"submit\" \n                            variant=\"contained\" \n                            color=\"primary\"\n                            disabled={!selectedFile}\n                        >\n                            {i18nService.t('dashboard.carousel.dialog.create')}\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n            {/* Dialog de confirmation suppression */}\n            <DeleteConfirmDialog\n                open={deleteDialogOpen}\n                title={i18nService.t('dashboard.carousel.deleteDialog.title')}\n                content={imageToDelete ? i18nService.t('dashboard.carousel.deleteDialog.content', { imageUrl: imageToDelete.image_url }) : i18nService.t('dashboard.carousel.deleteDialog.contentGeneric')}\n                onClose={handleCloseDeleteDialog}\n                onConfirm={handleDeleteImage}\n            />\n\n            {/* Snackbar feedback */}\n            <Snackbar\n                open={notification.open}\n                autoHideDuration={4000}\n                onClose={hideNotification}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            >\n                <Alert onClose={hideNotification} severity={notification.severity} sx={{ width: '100%' }}>\n                    {notification.message}\n                </Alert>\n            </Snackbar>\n            </Box>\n        </AccessControl>\n    );\n};\n\nexport default Carousel;\n","// Configuration de l'API backend\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n// Configuration pour les images\nexport const getImageUrl = (imagePath) => {\n  if (!imagePath) return '';\n  if (imagePath.startsWith('http')) return imagePath;\n  // Ajouter un / si le chemin ne commence pas par /\n  const path = imagePath.startsWith('/') ? imagePath : `/${imagePath}`;\n  // Ajouter un paramètre de cache-busting pour forcer le rechargement\n  const url = `${API_BASE_URL}${path}`;\n  const finalUrl = url.includes('?') ? `${url}&cb=${Date.now()}` : `${url}?cb=${Date.now()}`;\n\n  \n  return finalUrl;\n};\n","import { Box, Typography, Button, TextField, TableCell, TableContainer, Table, TableHead, TableRow, Paper, TableBody, DialogActions, DialogContent, DialogTitle, IconButton, Dialog, Tooltip, Grid, FormControl, InputLabel, MenuItem, Select, Snackbar, Alert } from '@mui/material';\nimport DeleteConfirmDialog from '../../DeleteConfirmDialog';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport LockResetIcon from '@mui/icons-material/LockReset';\nimport PersonIcon from '@mui/icons-material/Person';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport { useState, useEffect, useCallback } from 'react';\nimport { ROLE_OPTIONS, QUALIFICATION_OPTIONS, GENRE_OPTIONS, TRANCHE_AGE_OPTIONS, SITUATION_MATRIMONIALE_OPTIONS, NIVEAU_EDUCATION_OPTIONS } from '../../../constants/enums';\nimport { formatQualification } from '../../../utils/qualificationFormatter';\nimport { COUNTRIES } from '../../../constants/countries';\nimport Loading from '../../Loading';\nimport SecureErrorMessage from '../../common/SecureErrorMessage';\nimport { useUsers } from '../../../hooks/useApi';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport { useNotification } from '../../../hooks/useNotification';\nimport { useAuth } from '../../../hooks/useAuth';\nimport { apiService } from '../../../services/apiService';\nimport { usePermissions } from '../../../hooks/usePermissions';\nimport { formatQualificationWithFallback } from '../../../utils/qualificationFormatter';\nimport { formatRoleWithFallback } from '../../../utils/roleFormatter';\nimport i18nService from '../../../services/i18nService';\nimport { toast } from 'react-toastify';\nimport { getImageUrl } from '../../../config/apiConfig';\nimport roleService from '../../../services/roleService';\n\nconst Membres = ({ selectedChurch }) => {\n    // --- Ajout de l'état pour les groupes ---\n    const [groups, setGroups] = useState([]);\n    const [groupsError, setGroupsError] = useState(null);\n    const [churches, setChurches] = useState([]);\n    const [departments, setDepartments] = useState([]);\n    const [loadingDepartments, setLoadingDepartments] = useState(false);\n    const [departmentsError, setDepartmentsError] = useState(null);\n    const [churchesError, setChurchesError] = useState(null);\n\n    const { user } = useAuth();\n    const permissions = usePermissions();\n\n    const {\n        users: members,\n        loading,\n        error,\n        fetchUsers: loadMembers,\n        createUser,\n        updateUser,\n        deleteUser\n    } = useUsers(selectedChurch ? { churchId: selectedChurch.id } : {});\n\n    const {\n        notification,\n        showSuccess,\n        showError,\n        hideNotification\n    } = useNotification();\n\n    const {\n        canCreateUsers,\n        canUpdateUsers,\n        canDeleteUsers,\n        canAssignAdminRole,\n        canAssignManagerRole,\n        canAssignSuperAdminRole,\n        canModifyChurchField\n    } = usePermissions();\n\n    // Dialogs pour actions membres\n    const [roleDialog, setRoleDialog] = useState({ open: false, member: null, roles: [] });\n    const [resetDialog, setResetDialog] = useState({ open: false, member: null, newPassword: '' });\n    const [deleteDialog, setDeleteDialog] = useState({ open: false, member: null });\n    const [memberToDelete, setMemberToDelete] = useState(null);\n    const [isolatedMembers, setIsolatedMembers] = useState([]);\n    const [memberModal, setMemberModal] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const [memberToEdit, setMemberToEdit] = useState(null);\n\n    const [memberForm, setMemberForm] = useState({\n        username: '',\n        pseudo: '',\n        role: i18nService.t('dashboard.members.form.defaults.role'),\n        genre: i18nService.t('dashboard.members.form.defaults.gender'),\n        tranche_age: i18nService.t('dashboard.members.form.defaults.ageRange'),\n        profession: i18nService.t('dashboard.members.form.defaults.profession'),\n        ville_residence: i18nService.t('dashboard.members.form.defaults.city'),\n        origine: i18nService.t('dashboard.members.form.defaults.origin'),\n        situation_matrimoniale: i18nService.t('dashboard.members.form.defaults.maritalStatus'),\n        niveau_education: i18nService.t('dashboard.members.form.defaults.education'),\n        eglise_locale_id: canModifyChurchField ? '' : (permissions.isManager ? (user?.eglise_locale?.id || user?.eglise_locale || '') : ''),\n        sert_departement: i18nService.t('dashboard.members.form.no'),\n        departement_id: '',\n        departement_ids: [], // Nouveau champ pour les départements multiples\n        qualification: i18nService.t('dashboard.members.form.defaults.qualification'),\n        email: '',\n        telephone: '',\n        adresse: '',\n        image: ''\n    });\n\n    // États pour l'upload d'image\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [imagePreview, setImagePreview] = useState(null);\n\n    // Fonction pour réinitialiser le formulaire\n    const resetForm = useCallback(() => {\n        setMemberForm({\n            username: '',\n            pseudo: '',\n            role: i18nService.t('dashboard.members.form.defaults.role'),\n            genre: i18nService.t('dashboard.members.form.defaults.gender'),\n            tranche_age: i18nService.t('dashboard.members.form.defaults.ageRange'),\n            profession: i18nService.t('dashboard.members.form.defaults.profession'),\n            ville_residence: i18nService.t('dashboard.members.form.defaults.city'),\n            origine: '',\n            situation_matrimoniale: i18nService.t('dashboard.members.form.defaults.maritalStatus'),\n            niveau_education: i18nService.t('dashboard.members.form.defaults.education'),\n            eglise_locale_id: canModifyChurchField ? '' : (permissions.isManager ? (user?.eglise_locale?.id || user?.eglise_locale || '') : ''),\n            sert_departement: i18nService.t('dashboard.members.form.no'),\n            departement_id: '',\n            departement_ids: [],\n            qualification: i18nService.t('dashboard.members.form.defaults.qualification'),\n            email: '',\n            telephone: '',\n            adresse: '',\n            image: ''\n        });\n        setSelectedImage(null);\n        setImagePreview(null);\n    }, [user, canModifyChurchField]);\n\n    // Fonctions pour l'upload d'image\n    const handleImageSelect = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            // Vérifier le type de fichier\n            if (!file.type.startsWith('image/')) {\n                toast.error('Veuillez sélectionner un fichier image valide');\n                return;\n            }\n            \n            // Vérifier la taille (max 5MB)\n            if (file.size > 5 * 1024 * 1024) {\n                toast.error('L\\'image ne doit pas dépasser 5MB');\n                return;\n            }\n\n            setSelectedImage(file);\n            \n            // Créer une prévisualisation\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                setImagePreview(e.target.result);\n            };\n            reader.readAsDataURL(file);\n        }\n        \n        // Réinitialiser la valeur de l'input pour permettre la sélection du même fichier\n        event.target.value = '';\n    };\n\n\n    const handleRemoveImage = () => {\n        setMemberForm({ ...memberForm, image: '' });\n        setSelectedImage(null);\n        setImagePreview(null);\n    };\n\n    const loadChurches = useCallback(async () => {\n        try {\n            const response = await apiService.churches.getAll();\n            setChurches(response.data?.data || response.data || []);\n            setChurchesError(null);\n        } catch (err) {\n            const processedError = handleApiError(err, i18nService.t('dashboard.members.errors.loadingChurches'));\n            setChurches([]);\n            setChurchesError(processedError.message);\n        }\n    }, []);\n\n    // Fonction pour charger les départements\n    const loadDepartments = useCallback(async () => {\n        setLoadingDepartments(true);\n        try {\n            const response = await apiService.departments.getAll();\n            setDepartments(response.data?.data || response.data || []);\n            setDepartmentsError(null);\n        } catch (err) {\n            const processedError = handleApiError(err, i18nService.t('dashboard.members.errors.loadingDepartments'));\n            setDepartmentsError(processedError.message);\n            setDepartments([]);\n        } finally {\n            setLoadingDepartments(false);\n        }\n    }, []);\n\n    const loadIsolatedMembers = useCallback(async () => {\n        try {\n            if (!selectedChurch?.id) return;\n            \n            const response = await apiService.users.getIsoles({ churchId: selectedChurch.id });\n            setIsolatedMembers(response.data?.data || response.data || []);\n        } catch (err) {\n            const processedError = handleApiError(err, i18nService.t('dashboard.members.errors.loadingIsolatedMembers'));\n            }\n    }, [selectedChurch?.id]);\n\n    // Fonction pour charger les groupes\n    const loadGroups = useCallback(async () => {\n        try {\n            const response = await apiService.groups.getAll();\n            const groupsData = response.data?.data || response.data || [];\n            setGroups(groupsData);\n            setGroupsError(null);\n        } catch (err) {\n            const processedError = handleApiError(err, i18nService.t('dashboard.members.errors.loadingGroups'));\n            setGroupsError(processedError.message);\n            setGroups([]);\n        }\n    }, []);\n\n    // Charger les données au montage du composant\n    useEffect(() => {\n        loadMembers();\n        loadChurches();\n        loadGroups();\n        loadIsolatedMembers();\n        loadDepartments();\n    }, [loadMembers, loadChurches, loadGroups, loadIsolatedMembers, loadDepartments, selectedChurch?.id]);\n\n    // --- Ajout de l'état pour la recherche ---\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    // --- Ajout du filtre avancé ---\n    const FILTER_OPTIONS = [\n        { label: i18nService.t('dashboard.members.filters.all'), value: '' },\n        { label: i18nService.t('dashboard.members.filters.networkResponsible'), value: 'Responsable réseau' },\n        { label: i18nService.t('dashboard.members.filters.groupResponsibles'), value: 'Responsables de GR' },\n        { label: i18nService.t('dashboard.members.filters.leader'), value: 'Leader' },\n        { label: i18nService.t('dashboard.members.filters.allLeaders'), value: 'Leaders (tous)' },\n        { label: i18nService.t('dashboard.members.filters.regular'), value: 'Régulier' },\n        { label: i18nService.t('dashboard.members.filters.integration'), value: 'En intégration' },\n        { label: i18nService.t('dashboard.members.filters.irregular'), value: 'Irrégulier' },\n        { label: i18nService.t('dashboard.members.filters.governance'), value: 'Gouvernance' },\n        { label: i18nService.t('dashboard.members.filters.ecodim'), value: 'Ecodim' },\n        { label: i18nService.t('dashboard.members.filters.ecodimResponsible'), value: 'Responsable ecodim' },\n        { label: i18nService.t('dashboard.members.filters.qualification12'), value: '12' },\n        { label: i18nService.t('dashboard.members.filters.qualification144'), value: '144' },\n        { label: i18nService.t('dashboard.members.filters.qualification1728'), value: '1728' },\n        { label: i18nService.t('dashboard.members.filters.isolatedPeople'), value: 'Personnes isolées' },\n    ];\n    const [filter, setFilter] = useState('');\n\n    // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n    if (!selectedChurch) {\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                    {i18nService.t('dashboard.members.selectChurchMessage')}\n                </Typography>\n            </Box>\n        );\n    }\n\n    const handleGrantRights = async (member) => {\n        try {\n            // Charger les rôles actuels de l'utilisateur\n            const response = await roleService.getUserRoles(member.id || member._id);\n            const currentRoles = response.data.assigned_roles || [];\n            \n            setRoleDialog({ \n                open: true, \n                member, \n                roles: currentRoles \n            });\n        } catch (error) {\n            console.error('Erreur lors du chargement des rôles:', error);\n            // Fallback: utiliser le rôle principal\n            setRoleDialog({ \n                open: true, \n                member, \n                roles: member.role ? [member.role] : [] \n            });\n        }\n    };\n\n    const handleRoleChange = (event) => {\n        const value = event.target.value;\n        setRoleDialog(prev => ({ \n            ...prev, \n            roles: typeof value === 'string' ? value.split(',') : value \n        }));\n    };\n\n    // Fonction pour trier les rôles par hiérarchie (du plus élevé au plus bas)\n    const sortRolesByHierarchy = (roles) => {\n        const roleHierarchy = {\n            'SUPER_ADMIN': 6,\n            'ADMIN': 5,\n            'MANAGER': 4,\n            'SUPERVISEUR': 3,\n            'COLLECTEUR_CULTE': 2,\n            'COLLECTEUR_RESEAUX': 2,\n            'MEMBRE': 1\n        };\n        \n        return roles.sort((a, b) => {\n            const levelA = roleHierarchy[a.value] || 0;\n            const levelB = roleHierarchy[b.value] || 0;\n            return levelB - levelA; // Tri décroissant (du plus élevé au plus bas)\n        });\n    };\n\n    // Fonction pour filtrer les rôles disponibles selon les permissions\n    const getAvailableRoles = () => {\n        let roles;\n        if (permissions.isManager) {\n            // Le manager ne peut attribuer que les rôles non-privilégiés\n            roles = ROLE_OPTIONS.filter(role => \n                !['ADMIN', 'SUPER_ADMIN', 'MANAGER'].includes(role.value)\n            );\n        } else {\n            // SUPER_ADMIN et autres voient tous les rôles\n            roles = ROLE_OPTIONS;\n        }\n        \n        // Trier les rôles par hiérarchie\n        return sortRolesByHierarchy(roles);\n    };\n\n    const handleRoleSubmit = async () => {\n        try {\n            // Vérification côté frontend pour le manager\n            const restrictedRoles = ['ADMIN', 'SUPER_ADMIN', 'MANAGER'];\n            const hasRestrictedRole = roleDialog.roles.some(role => restrictedRoles.includes(role));\n            \n            if (permissions.isManager && hasRestrictedRole) {\n                showError(i18nService.t('dashboard.members.errors.cannotAssignRole'));\n                return;\n            }\n\n            // Utiliser le nouveau service pour assigner plusieurs rôles\n            await roleService.assignMultipleRoles(\n                roleDialog.member.id || roleDialog.member._id, \n                roleDialog.roles\n            );\n            \n            showSuccess(i18nService.t('dashboard.members.success.roleUpdated'));\n            setRoleDialog({ open: false, member: null, roles: [] });\n            await loadMembers();\n        } catch (err) {\n            const errorMessage = err.response?.data?.message || err.message || i18nService.t('dashboard.members.errors.roleAssignment');\n            showError(errorMessage);\n        }\n    };\n\n    const handleResetPassword = async (member) => {\n        try {\n            const res = await apiService.users.resetPassword(member.id || member._id);\n            // Le mot de passe temporaire est maintenant généré côté client\n            const tempPassword = res.data?.tempPassword || 'N/A';\n            setResetDialog({ open: true, member, newPassword: tempPassword });\n            showSuccess(i18nService.t('dashboard.members.success.passwordReset'));\n        } catch (err) {\n            const errorMessage = err.userMessage || err.message || i18nService.t('dashboard.members.errors.passwordReset');\n            showError(errorMessage);\n            setResetDialog({ open: false, member: null, newPassword: '' });\n        }\n    };\n\n    const handleCloseResetDialog = () => setResetDialog({ open: false, member: null, newPassword: '' });\n\n    const handleDeleteMember = (member) => {\n        setDeleteDialog({ open: true, member });\n    };\n\n    const handleConfirmDelete = async () => {\n        try {\n            await deleteUser(deleteDialog.member.id || deleteDialog.member._id);\n            showSuccess(i18nService.t('dashboard.members.success.memberDeleted'));\n            setDeleteDialog({ open: false, member: null });\n            await loadMembers();\n        } catch (err) {\n            // Utiliser le message sécurisé du hook\n            const errorMessage = err.userMessage || err.message || i18nService.t('dashboard.members.errors.deletion');\n            showError(errorMessage);\n        }\n    };\n\n    const handleCloseDeleteDialog = () => setDeleteDialog({ open: false, member: null });\n\n    const handleEditMember = (member) => {\n        setEditMode(true);\n        setMemberToEdit(member);\n        \n        // Extraire les départements multiples\n        const userDepartments = member.user_departments || [];\n        const departementIds = userDepartments.map(ud => ud.department?.id || ud.department?._id || ud.department_id).filter(Boolean);\n        \n        // Pour le manager uniquement, forcer l'église et le rôle\n        if (permissions.isManager) {\n            setMemberForm({\n                ...member,\n                eglise_locale_id: user?.eglise_locale?.id || user?.eglise_locale || '',\n                role: i18nService.t('dashboard.members.form.defaults.role'), // Le manager ne peut pas modifier le rôle\n                departement_id: member.departement?.id || member.departement?._id || member.departement || '',\n                departement_ids: departementIds,\n            });\n        } else {\n            setMemberForm({\n                ...member,\n                eglise_locale_id: member.eglise_locale?.id || member.eglise_locale?._id || member.eglise_locale || '',\n                departement_id: member.departement?.id || member.departement?._id || member.departement || '',\n                departement_ids: departementIds,\n            });\n        }\n        \n        setMemberModal(true);\n    };\n\n    const handleMemberSubmit = async (e) => {\n        e.preventDefault();\n        \n        // Validation des champs obligatoires\n        const requiredFields = ['username', 'pseudo', 'genre', 'tranche_age', 'profession', 'ville_residence', 'origine', 'situation_matrimoniale', 'niveau_education'];\n        const missingFields = requiredFields.filter(field => !memberForm[field] || memberForm[field].trim() === '');\n        \n        if (missingFields.length > 0) {\n            showError(i18nService.t('dashboard.members.errors.requiredFields', { fields: missingFields.join(', ') }));\n            return;\n        }\n        \n        let imageUrl = memberForm.image || '';\n        \n        // Upload de l'image si une image est sélectionnée\n        if (selectedImage) {\n            try {\n                const formData = new FormData();\n                formData.append('image', selectedImage);\n                \n                const response = await apiService.users.uploadProfileImage(formData);\n                \n                imageUrl = response.data?.data?.image || response.data?.image;\n                \n                if (!imageUrl) {\n                    throw new Error('URL de l\\'image non reçue');\n                }\n            } catch (error) {\n                toast.error('Erreur lors de l\\'upload de l\\'image');\n                return;\n            }\n        }\n        \n        const dataToSend = {\n            username: memberForm.username,\n            pseudo: memberForm.pseudo,\n            role: memberForm.role,\n            genre: memberForm.genre,\n            tranche_age: memberForm.tranche_age,\n            profession: memberForm.profession,\n            ville_residence: memberForm.ville_residence,\n            origine: memberForm.origine,\n            situation_matrimoniale: memberForm.situation_matrimoniale,\n            niveau_education: memberForm.niveau_education,\n            qualification: memberForm.qualification,\n            email: memberForm.email,\n            telephone: memberForm.telephone,\n            adresse: memberForm.adresse,\n            image: imageUrl,\n            eglise_locale_id: memberForm.eglise_locale_id === '' ? null : memberForm.eglise_locale_id,\n            departement_id: memberForm.departement_id === '' ? null : memberForm.departement_id,\n            departement_ids: memberForm.departement_ids || []\n        };\n\n        // Pour le manager uniquement, forcer l'église et le rôle\n        if (permissions.isManager) {\n            dataToSend.eglise_locale_id = user?.eglise_locale?.id || user?.eglise_locale;\n            dataToSend.role = i18nService.t('dashboard.members.form.defaults.role'); // Le manager ne peut attribuer que le rôle membre\n        }\n\n        try {\n            if (editMode && memberToEdit) {\n                const userId = memberToEdit.id || memberToEdit._id;\n                await updateUser(userId, dataToSend);\n                showSuccess(i18nService.t('dashboard.members.success.updated'));\n            } else {\n                await createUser(dataToSend);\n                showSuccess(i18nService.t('dashboard.members.success.created'));\n            }\n            setMemberModal(false);\n            setEditMode(false);\n            setMemberToEdit(null);\n            resetForm(); // Réinitialiser le formulaire\n            await loadMembers();\n        } catch (err) {\n            const errorMessage = err.userMessage || err.message || i18nService.t('dashboard.members.errors.save');\n            showError(errorMessage);\n        }\n    };\n\n    // Fonction de filtrage avancé\n    const filterMembers = (members) => {\n        if (!filter) return members;\n        \n        // Cas spéciaux pour \"Leaders (tous)\" et \"Responsables Ecodim\"\n        if (filter === i18nService.t('dashboard.members.filters.allLeaders')) {\n            const leaders = members.filter(m => {\n                const qual = m.qualification || '';\n                return qual === 'LEADER' || qual === 'RESPONSABLE_RESEAU' || \n                       qual === 'QUALIFICATION_12' || qual === '12' ||\n                       qual === 'QUALIFICATION_144' || qual === '144' ||\n                       qual === 'QUALIFICATION_1728' || qual === '1728';\n            });\n            return leaders;\n        }\n        \n        if (filter === i18nService.t('dashboard.members.filters.ecodimResponsible')) {\n            const responsablesEcodim = members.filter(m => {\n                const qual = m.qualification || '';\n                return qual.toLowerCase().includes('ecodim') && qual.toLowerCase().includes('responsable');\n            });\n            return responsablesEcodim;\n        }\n        \n        if (filter === i18nService.t('dashboard.members.filters.isolatedPeople')) {\n            return isolatedMembers;\n        }\n        \n        if (filter === i18nService.t('dashboard.members.filters.governance')) {\n            const gouvernanceMembers = members.filter(m => {\n                const qual = m.qualification || '';\n                return qual === 'GOUVERNANCE';\n            });\n            return gouvernanceMembers;\n        }\n        \n        // Cas spécial pour \"Responsables de GR\"\n        if (filter === i18nService.t('dashboard.members.filters.groupResponsibles')) {\n            // On extrait tous les responsables des groupes (responsable1 et responsable2)\n            const responsablesIds = new Set();\n            groups.forEach(gr => {\n                if (gr.responsable1) {\n                    const id = gr.responsable1.id || gr.responsable1._id;\n                    if (id) responsablesIds.add(id);\n                }\n                if (gr.responsable2) {\n                    const id = gr.responsable2.id || gr.responsable2._id;\n                    if (id) responsablesIds.add(id);\n                }\n            });\n            const responsablesGR = members.filter(m => responsablesIds.has(m.id || m._id));\n            return responsablesGR;\n        }\n        \n        // Filtre standard sur qualification - gérer les différents formats\n        const filteredMembers = members.filter(m => {\n            const qual = m.qualification || '';\n            const filterLower = filter.toLowerCase();\n            \n            // Gérer les qualifications avec et sans préfixe\n            if (filterLower === i18nService.t('dashboard.members.filters.leader').toLowerCase() && (qual === 'LEADER' || qual === 'Leader')) return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.networkResponsible').toLowerCase() && (qual === 'RESPONSABLE_RESEAU' || qual === 'Responsable réseau')) return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.regular').toLowerCase() && (qual === 'REGULIER' || qual === 'Régulier')) return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.integration').toLowerCase() && (qual === 'EN_INTEGRATION' || qual === 'En intégration')) return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.irregular').toLowerCase() && (qual === 'IRREGULIER' || qual === 'Irrégulier')) return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.governance').toLowerCase() && qual === 'GOUVERNANCE') return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.ecodim').toLowerCase() && qual.toLowerCase().includes('ecodim')) return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.qualification12').toLowerCase() && formatQualification(qual) === '12') return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.qualification144').toLowerCase() && formatQualification(qual) === '144') return true;\n            if (filterLower === i18nService.t('dashboard.members.filters.qualification1728').toLowerCase() && formatQualification(qual) === '1728') return true;\n            \n            return false;\n        });\n        \n        return filteredMembers;\n    };\n\n    return (\n        <Box sx={{ \n          width: '100%',\n          overflow: 'hidden', // Empêcher le scroll vertical\n          overflowX: 'auto' // Permettre le scroll horizontal uniquement si nécessaire\n        }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>\n                <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>{i18nService.t('dashboard.members.management')}</Typography>\n                <FormControl sx={{ minWidth: 250, mx: 3 }}>\n                    <InputLabel>{i18nService.t('dashboard.members.filters.title')}</InputLabel>\n                    <Select\n                        value={filter}\n                        label={i18nService.t('dashboard.members.filters.title')}\n                        onChange={e => setFilter(e.target.value)}\n                    >\n                        {FILTER_OPTIONS.map(opt => (\n                            <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => setMemberModal(true)} disabled={!canCreateUsers}>{i18nService.t('dashboard.members.newMember')}</Button>\n            </Box>\n            <TextField data-aos=\"fade-up\"\n                fullWidth\n                variant=\"outlined\"\n                placeholder={i18nService.t('dashboard.members.searchPlaceholder')}\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n                InputProps={{\n                    startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />\n                }}\n                sx={{ mb: 3 }}\n            />\n            {loading ? (\n                <Loading titre={i18nService.t('dashboard.members.loading.members')} />\n            ) : error && error !== 'success' ? (\n                <SecureErrorMessage error={error} title={i18nService.t('dashboard.members.loading.error')} />\n            ) : (\n                <>\n                    {/* Affichage de l'effectif filtré */}\n                    <Typography data-aos=\"fade-up\" sx={{ mb: 1, fontWeight: 'bold' }}>\n                        {i18nService.t('dashboard.members.foundCount', { count: Array.isArray(members)\n                                ? filterMembers(members).filter(member =>\n                                    member.username?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                    member.email?.toLowerCase().includes(searchTerm.toLowerCase())\n                                ).length\n                                : 0\n                        })}\n                    </Typography>\n                    <TableContainer data-aos=\"fade-up\" component={Paper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.members.table.name')}</TableCell>\n                                    <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.members.table.email')}</TableCell>\n                                    <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.members.table.phone')}</TableCell>\n                                    <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.members.table.qualification')}</TableCell>\n                                    <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.members.table.role')}</TableCell>\n                                    <TableCell align=\"right\" sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>{i18nService.t('dashboard.members.table.actions')}</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {Array.isArray(members) && filterMembers(members)\n                                .filter(member =>\n                                    member.username?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                    member.email?.toLowerCase().includes(searchTerm.toLowerCase())\n                                )\n                                .map(member => (\n                                    <TableRow key={member.id || member._id}>\n                                        <TableCell>{member.username}</TableCell>\n                                        <TableCell>{member.email}</TableCell>\n                                        <TableCell>{member.telephone || '-'}</TableCell>\n                                        <TableCell>\n                                          <Typography \n                                            component=\"span\" \n                                            variant=\"caption\" \n                                            sx={{ \n                                              fontWeight: 'bold',\n                                              fontSize: '0.75rem'\n                                            }}\n                                          >\n                                            {formatQualificationWithFallback(member.qualification, '-')}\n                                          </Typography>\n                                        </TableCell>\n                                        <TableCell>{formatRoleWithFallback(member.role)}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <Tooltip title={i18nService.t('dashboard.members.actions.assignRole')}>\n                                                <IconButton \n                                                    size=\"small\" \n                                                    color=\"secondary\" \n                                                    onClick={() => handleGrantRights(member)}\n                                                    disabled={!canUpdateUsers}\n                                                    title={!canUpdateUsers ? \n                                                        (canAssignManagerRole ? i18nService.t('dashboard.members.permissions.managerFullRights') : i18nService.t('dashboard.members.permissions.adminReadOnly')) \n                                                        : \"\"}\n                                                >\n                                                    <SecurityIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip title={i18nService.t('dashboard.members.actions.resetPassword')}>\n                                                <IconButton \n                                                    size=\"small\" \n                                                    color=\"warning\" \n                                                    onClick={() => handleResetPassword(member)}\n                                                    disabled={!canUpdateUsers}\n                                                    title={!canUpdateUsers ? \n                                                        (canAssignManagerRole ? i18nService.t('dashboard.members.permissions.managerFullRights') : i18nService.t('dashboard.members.permissions.adminReadOnly')) \n                                                        : \"\"}\n                                                >\n                                                    <LockResetIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip title={i18nService.t('dashboard.members.actions.edit')}>\n                                                <IconButton \n                                                    size=\"small\" \n                                                    color=\"info\" \n                                                    onClick={() => handleEditMember(member)}\n                                                    disabled={!canUpdateUsers}\n                                                    title={!canUpdateUsers ? \n                                                        (canAssignManagerRole ? i18nService.t('dashboard.members.permissions.managerFullRights') : i18nService.t('dashboard.members.permissions.adminReadOnly')) \n                                                        : \"\"}\n                                                >\n                                                    <EditIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip title={i18nService.t('dashboard.members.actions.delete')}>\n                                                <IconButton \n                                                    size=\"small\" \n                                                    color=\"error\" \n                                                    onClick={() => handleDeleteMember(member)}\n                                                    disabled={!canDeleteUsers}\n                                                    title={!canDeleteUsers ? \n                                                        (canAssignManagerRole ? i18nService.t('dashboard.members.permissions.managerFullRights') : i18nService.t('dashboard.members.permissions.adminReadOnly')) \n                                                        : \"\"}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                        </TableBody>\n                        </Table>\n                    </TableContainer>\n                </>\n            )}\n            {/* Dialog attribution de rôles multiples */}\n            <Dialog open={roleDialog.open} onClose={() => setRoleDialog({ open: false, member: null, roles: [] })} maxWidth=\"sm\" fullWidth>\n                <DialogTitle>\n                    {i18nService.t('dashboard.members.roleDialog.title')} - {roleDialog.member?.username}\n                </DialogTitle>\n                <DialogContent>\n                    <FormControl fullWidth sx={{ mt: 2 }}>\n                        <InputLabel id=\"role-select-label\">Sélectionner les rôles</InputLabel>\n                        <Select\n                            labelId=\"role-select-label\"\n                            multiple\n                            value={roleDialog.roles}\n                            label=\"Sélectionner les rôles\"\n                            onChange={handleRoleChange}\n                            renderValue={(selected) => (\n                                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                                    {selected.map((value) => (\n                                        <Box\n                                            key={value}\n                                            sx={{\n                                                backgroundColor: 'primary.main',\n                                                color: 'white',\n                                                padding: '2px 8px',\n                                                borderRadius: '12px',\n                                                fontSize: '0.75rem'\n                                            }}\n                                        >\n                                            {getAvailableRoles().find(role => role.value === value)?.label || value}\n                                        </Box>\n                                    ))}\n                                </Box>\n                            )}\n                        >\n                            {getAvailableRoles().map(role => (\n                                <MenuItem key={role.value} value={role.value}>\n                                    {role.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\n                        Vous pouvez sélectionner plusieurs rôles. Le rôle le plus élevé sera défini comme rôle principal.\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setRoleDialog({ open: false, member: null, roles: [] })}>\n                        Annuler\n                    </Button>\n                    <Button onClick={handleRoleSubmit} variant=\"contained\">\n                        Assigner les rôles\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            {/* Dialog reset mot de passe */}\n            <Dialog open={resetDialog.open} onClose={handleCloseResetDialog}>\n                <DialogTitle sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <LockResetIcon color=\"primary\" sx={{ mr: 1 }} />\n                    {i18nService.t('dashboard.members.resetPasswordDialog.title')}\n                </DialogTitle>\n                <DialogContent sx={{ minWidth: 340 }}>\n                    <Typography sx={{ mb: 1 }}>\n                        {i18nService.t('dashboard.members.resetPasswordDialog.newPasswordFor', { username: resetDialog.member?.username })}\n                    </Typography>\n                    <Box\n                        sx={{\n                            mt: 2,\n                            p: 2,\n                            bgcolor: 'background.paper',\n                            borderRadius: 2,\n                            boxShadow: 2,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'space-between',\n                            gap: 2,\n                            border: '1px solid #e0e0e0',\n                        }}\n                    >\n                        <Typography\n                            variant=\"h6\"\n                            sx={{ wordBreak: 'break-all', letterSpacing: 1, fontWeight: 700, color: 'primary.main', flex: 1 }}\n                        >\n                            {resetDialog.newPassword}\n                        </Typography>\n                        <Tooltip title={i18nService.t('dashboard.members.resetPasswordDialog.copyPassword')}>\n                            <IconButton\n                                color=\"primary\"\n                                onClick={() => {\n                                    navigator.clipboard.writeText(resetDialog.newPassword);\n                                }}\n                                sx={{ ml: 1 }}\n                            >\n                                <LockResetIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 2, display: 'block' }}>\n                        {i18nService.t('dashboard.members.resetPasswordDialog.passwordInfo')}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseResetDialog} variant=\"contained\" color=\"primary\" sx={{ fontWeight: 600 }}>\n                        {i18nService.t('dashboard.members.resetPasswordDialog.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={memberModal}\n                onClose={() => {\n                    setMemberModal(false);\n                    setEditMode(false);\n                    setMemberToEdit(null);\n                    \n                    // Pour le manager, forcer l'église et le rôle lors de la réinitialisation\n                    if (canAssignManagerRole) {\n                        setMemberForm({\n                            username: '',\n                            pseudo: '',\n                            role: 'MEMBRE',\n                            genre: '',\n                            tranche_age: '',\n                            profession: '',\n                            ville_residence: '',\n                            origine: '',\n                            situation_matrimoniale: '',\n                            niveau_education: '',\n                            eglise_locale_id: user?.eglise_locale?.id || user?.eglise_locale || '',\n                            sert_departement: 'Non',\n                            departement_id: '',\n                            departement_ids: [],\n                            qualification: 'EN_INTEGRATION',\n                            email: '',\n                            telephone: '',\n                            adresse: '',\n                            image: ''\n                        });\n                    } else {\n                        setMemberForm({\n                            username: '',\n                            pseudo: '',\n                            role: 'MEMBRE',\n                            genre: '',\n                            tranche_age: '',\n                            profession: '',\n                            ville_residence: '',\n                            origine: '',\n                            situation_matrimoniale: '',\n                            niveau_education: '',\n                            eglise_locale_id: '',\n                            sert_departement: 'Non',\n                            departement_id: '',\n                            departement_ids: [],\n                            qualification: 'EN_INTEGRATION',\n                            email: '',\n                            telephone: '',\n                            adresse: '',\n                            image: ''\n                        });\n                    }\n                    setSelectedImage(null);\n                    setImagePreview(null);\n                }}\n                maxWidth=\"md\"\n                fullWidth\n                PaperProps={{\n                    sx: {\n                        width: '100%',\n                        maxWidth: '800px',\n                        margin: '20px'\n                    }\n                }}\n            >\n                <DialogTitle>{editMode ? i18nService.t('dashboard.members.dialog.editTitle') : i18nService.t('dashboard.members.dialog.createTitle')}</DialogTitle>\n                <form onSubmit={handleMemberSubmit}>\n                    <DialogContent sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Box sx={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            gap: 2,\n                            alignItems: 'center',\n                            width: '100%',\n                            maxWidth: '750px'\n                        }}>\n                            <Grid\n                                container\n                                spacing={2}\n                                sx={{\n                                    margin: 0,\n                                    alignItems: 'center'\n                                }}>\n                                {/* Informations personnelles */}\n\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 350 }}\n                                        label={i18nService.t('dashboard.members.form.username')}\n                                        value={memberForm.username}\n                                        onChange={(e) => setMemberForm({ ...memberForm, username: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 350 }}\n                                        label={i18nService.t('dashboard.members.form.pseudo')}\n                                        value={memberForm.pseudo}\n                                        onChange={(e) => setMemberForm({ ...memberForm, pseudo: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                        <InputLabel>{i18nService.t('dashboard.members.form.genre')}</InputLabel>\n                                        <Select\n                                            sx={{ minWidth: 350 }}\n                                            value={memberForm.genre}\n                                            onChange={(e) => setMemberForm({ ...memberForm, genre: e.target.value })}\n                                        >\n                                            {GENRE_OPTIONS.map((genre) => (\n                                                <MenuItem key={genre.value} value={genre.value}>{genre.label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                {/* Informations démographiques */}\n\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                        <InputLabel>{i18nService.t('dashboard.members.form.ageRange')}</InputLabel>\n                                        <Select\n                                            sx={{ minWidth: 350 }}\n                                            value={memberForm.tranche_age}\n                                            onChange={(e) => setMemberForm({ ...memberForm, tranche_age: e.target.value })}\n                                        >\n                                            {TRANCHE_AGE_OPTIONS.map((tranche) => (\n                                                <MenuItem key={tranche.value} value={tranche.value}>{tranche.label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 350 }}\n                                        label={i18nService.t('dashboard.members.form.profession')}\n                                        value={memberForm.profession}\n                                        onChange={(e) => setMemberForm({ ...memberForm, profession: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 350 }}\n                                        label={i18nService.t('dashboard.members.form.residenceCity')}\n                                        value={memberForm.ville_residence}\n                                        onChange={(e) => setMemberForm({ ...memberForm, ville_residence: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                        <InputLabel>{i18nService.t('dashboard.members.form.origin')}</InputLabel>\n                                        <Select\n                                            sx={{ minWidth: 350 }}\n                                            value={memberForm.origine}\n                                            onChange={(e) => setMemberForm({ ...memberForm, origine: e.target.value })}\n                                        >\n                                            {COUNTRIES.map((country) => (\n                                                <MenuItem key={country.value} value={country.value}>{country.label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                        <InputLabel>{i18nService.t('dashboard.members.form.maritalStatus')}</InputLabel>\n                                        <Select\n                                            sx={{ minWidth: 350 }}\n                                            value={memberForm.situation_matrimoniale}\n                                            onChange={(e) => setMemberForm({ ...memberForm, situation_matrimoniale: e.target.value })}\n                                        >\n                                            {SITUATION_MATRIMONIALE_OPTIONS.map((situation) => (\n                                                <MenuItem key={situation.value} value={situation.value}>{situation.label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                {/* Formation */}\n\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                        <InputLabel>{i18nService.t('dashboard.members.form.educationLevel')}</InputLabel>\n                                        <Select\n                                            sx={{ minWidth: 350 }}\n                                            value={memberForm.niveau_education}\n                                            onChange={(e) => setMemberForm({ ...memberForm, niveau_education: e.target.value })}\n                                        >\n                                            {NIVEAU_EDUCATION_OPTIONS.map((niveau) => (\n                                                <MenuItem key={niveau.value} value={niveau.value}>{niveau.label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                {/* Église et Département */}\n\n                                {/* Champ église - visible pour Super Admin et Admin */}\n                                {canModifyChurchField && (\n                                    <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                            <InputLabel>{i18nService.t('dashboard.members.form.localChurch')}</InputLabel>\n                                            <Select\n                                                sx={{ minWidth: 350 }}\n                                                value={memberForm.eglise_locale_id}\n                                                onChange={(e) => setMemberForm({ ...memberForm, eglise_locale_id: e.target.value })}\n                                            >\n                                                {churches.map((church) => (\n                                                    <MenuItem key={church.id || church._id} value={church.id || church._id}>{church.nom}</MenuItem>\n                                                ))}\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                )}\n\n                                {/* Champ rôle - masqué pour le manager */}\n                                {!canAssignManagerRole && (\n                                    <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                            <InputLabel>Rôle</InputLabel>\n                                            <Select\n                                                sx={{ minWidth: 350 }}\n                                                value={memberForm.role}\n                                                onChange={(e) => setMemberForm({ ...memberForm, role: e.target.value })}\n                                            >\n                                                {ROLE_OPTIONS.map((role) => (\n                                                    <MenuItem key={role.value} value={role.value}>{role.label}</MenuItem>\n                                                ))}\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                )}\n                                {/* Sert dans un département : seulement en création */}\n                                {!editMode && (\n                                    <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                            <InputLabel>{i18nService.t('dashboard.members.form.servesDepartment')}</InputLabel>\n                                            <Select\n                                                sx={{ minWidth: 350 }}\n                                                value={memberForm.sert_departement}\n                                                onChange={(e) => setMemberForm({ ...memberForm, sert_departement: e.target.value, departement_id: e.target.value === 'Non' ? '' : memberForm.departement_id })}\n                                            >\n                                                                                            <MenuItem value={i18nService.t('dashboard.members.form.yes')}>{i18nService.t('dashboard.members.form.yes')}</MenuItem>\n                                            <MenuItem value={i18nService.t('dashboard.members.form.no')}>{i18nService.t('dashboard.members.form.no')}</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                )}\n                                {/* Départements multiples : toujours affiché en modification, ou si sert_departement === 'Oui' en création */}\n                                {(editMode || memberForm.sert_departement === 'Oui') && (\n                                    <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <FormControl sx={{ width: 350 }} margin=\"normal\">\n                                            <InputLabel>{i18nService.t('dashboard.members.form.departments')}</InputLabel>\n                                            <Select\n                                                multiple\n                                                sx={{ minWidth: 350 }}\n                                                value={memberForm.departement_ids || []}\n                                                onChange={(e) => setMemberForm({ ...memberForm, departement_ids: e.target.value })}\n                                                renderValue={(selected) => {\n                                                    if (selected.length === 0) return i18nService.t('dashboard.members.form.noDepartment');\n                                                    if (selected.length === 1) {\n                                                        const dept = departments.find(d => (d.id || d._id) === selected[0]);\n                                                        return dept ? dept.nom : selected[0];\n                                                    }\n                                                    return `${selected.length} départements sélectionnés`;\n                                                }}\n                                            >\n                                                {departmentsError && (\n                                                    <Alert severity=\"error\">{departmentsError}</Alert>\n                                                )}\n                                                {departments.length === 0 && !departmentsError && (\n                                                    <Alert severity=\"info\">{i18nService.t('dashboard.members.form.noDepartmentsFound')}</Alert>\n                                                )}\n                                                {Array.isArray(departments) && departments.map((dept) => (\n                                                    <MenuItem key={dept.id || dept._id} value={dept.id || dept._id}>\n                                                        {dept.nom}\n                                                    </MenuItem>\n                                                ))}\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                )}\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <FormControl sx={{ width: 350 }} margin=\"normal\" required>\n                                        <InputLabel>{i18nService.t('dashboard.members.form.qualification')}</InputLabel>\n                                        <Select\n                                            sx={{ minWidth: 350 }}\n                                            value={memberForm.qualification}\n                                            onChange={(e) => setMemberForm({ ...memberForm, qualification: e.target.value })}\n                                        >\n                                            {QUALIFICATION_OPTIONS.map((qual) => (\n                                                <MenuItem key={qual.value} value={qual.value}>{qual.label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                {/* Contact */}\n\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 350 }}\n                                        type=\"email\"\n                                        label={i18nService.t('dashboard.members.form.email')}\n                                        value={memberForm.email}\n                                        onChange={(e) => setMemberForm({ ...memberForm, email: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 350 }}\n                                        label={i18nService.t('dashboard.members.form.phone')}\n                                        value={memberForm.telephone}\n                                        onChange={(e) => setMemberForm({ ...memberForm, telephone: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <TextField\n                                        sx={{ width: 350 }}\n                                        label={i18nService.t('dashboard.members.form.address')}\n                                        value={memberForm.adresse}\n                                        onChange={(e) => setMemberForm({ ...memberForm, adresse: e.target.value })}\n                                        margin=\"normal\"\n                                        required\n                                        multiline\n                                        rows={3}\n                                    />\n                                </Grid>\n                                {/* Upload d'image de profil */}\n                                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Box sx={{ width: 350, mt: 2 }}>\n                                        <Typography variant=\"body2\" sx={{ mb: 1, fontWeight: 'bold' }}>\n                                            {i18nService.t('dashboard.members.form.profileImage')}\n                                        </Typography>\n                                        \n                                        {/* Aperçu de l'image */}\n                                        {(memberForm.image || imagePreview) && (\n                                            <Box sx={{ mb: 2, textAlign: 'center' }}>\n                                                <img \n                                                    src={imagePreview || getImageUrl(memberForm.image)} \n                                                    alt=\"Aperçu\" \n                                                    style={{ \n                                                        width: 100, \n                                                        height: 100, \n                                                        objectFit: 'cover', \n                                                        borderRadius: '50%',\n                                                        border: '2px solid #e0e0e0'\n                                                    }} \n                                                    onError={(e) => {\n                                                        // Erreur de chargement de l'image dans le formulaire membre\n                                                    }}\n                                                />\n                                                <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n                                                    {imagePreview ? 'Nouvelle image' : 'Image actuelle'}\n                                                </Typography>\n                                            </Box>\n                                        )}\n                                        \n                                        {/* Bouton d'upload */}\n                                        <input\n                                            accept=\"image/*\"\n                                            style={{ display: 'none' }}\n                                            id=\"image-upload\"\n                                            type=\"file\"\n                                            onChange={handleImageSelect}\n                                        />\n                                        <label htmlFor=\"image-upload\">\n                                            <Button\n                                                variant=\"outlined\"\n                                                component=\"span\"\n                                                startIcon={<AddIcon />}\n                                                fullWidth\n                                                sx={{ mb: 1 }}\n                                            >\n                                                {memberForm.image ? 'Changer l\\'image' : 'Ajouter une image'}\n                                            </Button>\n                                        </label>\n                                        \n                                        {memberForm.image && (\n                                            <Button\n                                                variant=\"text\"\n                                                color=\"error\"\n                                                onClick={handleRemoveImage}\n                                                fullWidth\n                                                size=\"small\"\n                                            >\n                                                Supprimer l'image\n                                            </Button>\n                                        )}\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setMemberModal(false)}>{i18nService.t('dashboard.members.roleDialog.cancel')}</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">{editMode ? i18nService.t('dashboard.members.dialog.update') : i18nService.t('dashboard.members.dialog.create')}</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n            {/* Dialog de confirmation suppression */}\n            <DeleteConfirmDialog\n                open={deleteDialog.open}\n                title={i18nService.t('dashboard.members.deleteDialog.title')}\n                content={memberToDelete ? `${i18nService.t('dashboard.members.deleteDialog.content', { memberName: memberToDelete.username })}` : `${i18nService.t('dashboard.members.deleteDialog.contentGeneric')}`}\n                onClose={handleCloseDeleteDialog}\n                onConfirm={handleConfirmDelete}\n            />\n\n\n            {/* Snackbar feedback */}\n            <Snackbar\n                open={notification.open}\n                autoHideDuration={4000}\n                onClose={hideNotification}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            >\n                <Alert onClose={hideNotification} severity={notification.severity} sx={{ width: '100%' }}>\n                    {notification.message}\n                </Alert>\n            </Snackbar>\n        </Box>\n    );\n};\n\nexport default Membres;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport {\n  Typography,\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Alert\n} from '@mui/material';\nimport { apiService } from '../../../services/apiService';\nimport { formatQualificationWithFallback } from '../../../utils/qualificationFormatter';\n\nconst UsersRetired = ({ selectedChurch }) => {\n  // Debug: afficher la valeur de selectedChurch\n  // Debug de l'église sélectionnée - Supprimé pour la production\n\n  const [retired, setRetired] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchRetired = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = selectedChurch ? { churchId: selectedChurch.id } : {};\n      const res = await apiService.users.getRetired(params);\n      setRetired(res.data?.data || res.data || []);\n    } catch (err) {\n      setError(err.response?.data?.message || err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedChurch]);\n\n  // Charger les données quand selectedChurch change\n  useEffect(() => {\n    if (selectedChurch) {\n      fetchRetired();\n    }\n  }, [selectedChurch, fetchRetired]); // Dependencies updated\n\n  // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n  if (!selectedChurch) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          Veuillez sélectionner une église pour voir les membres retraités\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>Membres Retirés</Typography>\n      </Box>\n      {loading ? (\n        <Box sx={{ textAlign: 'center', mt: 4 }}><CircularProgress /></Box>\n      ) : error ? (\n        <Alert severity=\"error\">{error}</Alert>\n      ) : retired.length === 0 ? (\n        <Typography>Aucun membre retiré trouvé.</Typography>\n      ) : (\n        <TableContainer  data-aos=\"fade-up\" component={Paper} sx={{ mt: 2, boxShadow: 3, borderRadius: 2 }}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Nom</TableCell>\n                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Pseudo</TableCell>\n                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Qualification</TableCell>\n                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Groupe quitté</TableCell>\n                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Réseau</TableCell>\n                <TableCell sx={{ fontWeight: 'bold', backgroundColor: '#f5f5f5' }}>Date de sortie</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {retired.map((item, idx) => (\n                <TableRow key={item.user._id} sx={{ backgroundColor: idx % 2 === 0 ? '#fafafa' : '#fff', '&:hover': { backgroundColor: '#e3f2fd' } }}>\n                  <TableCell>{item.user.username}</TableCell>\n                  <TableCell>{item.user.pseudo}</TableCell>\n                  <TableCell>{formatQualificationWithFallback(item.user.qualification, '-')}</TableCell>\n                  <TableCell>{item.group?.nom || '-'}</TableCell>\n                  <TableCell>{item.network?.nom || '-'}</TableCell>\n                  <TableCell>{item.leftAt ? new Date(item.leftAt).toLocaleDateString() : '-'}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default UsersRetired;\n","// Liste des villes françaises avec leurs populations\r\nexport const cityPopulations = [\r\n    { name: 'Paris', population: 2161000 },\r\n    { name: 'Marseille', population: 861635 },\r\n    { name: 'Lyon', population: 513275 },\r\n    { name: 'Toulouse', population: 479553 },\r\n    { name: 'Nice', population: 342522 },\r\n    { name: 'Nantes', population: 309346 },\r\n    { name: 'Strasbourg', population: 280966 },\r\n    { name: 'Montpellier', population: 285121 },\r\n    { name: 'Bordeaux', population: 254436 },\r\n    { name: 'Lille', population: 232787 },\r\n    { name: 'Rennes', population: 217728 },\r\n    { name: 'Reims', population: 180752 },\r\n    { name: 'Saint-Étienne', population: 172565 },\r\n    { name: 'Toulon', population: 171953 },\r\n    { name: 'Le Havre', population: 170147 },\r\n    { name: 'Grenoble', population: 158454 },\r\n    { name: 'Dijon', population: 156854 },\r\n    { name: 'Angers', population: 154508 },\r\n    { name: 'Saint-Denis', population: 153810 },\r\n    { name: 'Villeurbanne', population: 150659 },\r\n    { name: 'Le Mans', population: 143252 },\r\n    { name: 'Aix-en-Provence', population: 143097 },\r\n    { name: 'Brest', population: 139456 },\r\n    { name: 'Nîmes', population: 146709 },\r\n    { name: 'Limoges', population: 132175 },\r\n    { name: 'Clermont-Ferrand', population: 143886 },\r\n    { name: 'Tours', population: 136463 },\r\n    { name: 'Villejuif', population: 131824 },\r\n    { name: 'Amiens', population: 133625 },\r\n    { name: 'Metz', population: 118489 },\r\n    { name: 'Besançon', population: 117912 },\r\n    { name: 'Perpignan', population: 119656 },\r\n    { name: 'Orléans', population: 114782 },\r\n    { name: 'Mulhouse', population: 108942 },\r\n    { name: 'Caen', population: 105354 },\r\n    { name: 'Boulogne-Billancourt', population: 119808 },\r\n    { name: 'Rouen', population: 110169 },\r\n    { name: 'Nancy', population: 104260 },\r\n    { name: 'Argenteuil', population: 107221 },\r\n    { name: 'Montreuil', population: 104139 },\r\n    { name: 'Saint-Paul', population: 103916 },\r\n    { name: 'Roubaix', population: 98712 },\r\n    { name: 'Tourcoing', population: 97442 },\r\n    { name: 'Nanterre', population: 94525 },\r\n    { name: 'Avignon', population: 91343 },\r\n    { name: 'Créteil', population: 90195 },\r\n    { name: 'Poitiers', population: 87698 },\r\n    { name: 'Versailles', population: 85771 },\r\n    { name: 'Pau', population: 77200 },\r\n    { name: 'Colombes', population: 85177 },\r\n    { name: 'Vitry-sur-Seine', population: 92909 },\r\n    { name: 'Aulnay-sous-Bois', population: 82514 },\r\n    { name: 'Asnières-sur-Seine', population: 86742 },\r\n    { name: 'Courbevoie', population: 81603 },\r\n    { name: 'Cherbourg-en-Cotentin', population: 80076 },\r\n    { name: 'Rueil-Malmaison', population: 78145 },\r\n    { name: 'Bourges', population: 64668 },\r\n    { name: 'Le Cannet', population: 41531 },\r\n    { name: 'Dunkerque', population: 86865 },\r\n    { name: 'Saint-Maur-des-Fossés', population: 75214 },\r\n    { name: 'Valence', population: 63848 },\r\n    { name: 'Quimper', population: 63532 },\r\n    { name: 'Antibes', population: 75820 },\r\n    { name: 'Troyes', population: 61996 },\r\n    { name: 'Auxerre', population: 34734 },\r\n    { name: 'Bourgoin-Jallieu', population: 28447 },\r\n    { name: 'Cannes', population: 73421 },\r\n    { name: 'Calais', population: 72929 },\r\n    { name: 'Saint-Brieuc', population: 44472 },\r\n    { name: 'Saint-Herblain', population: 46352 },\r\n    { name: 'Saint-Priest', population: 46845 },\r\n    { name: 'La Rochelle', population: 75736 },\r\n    { name: 'Rezé', population: 42068 },\r\n    { name: 'Saint-André', population: 55653 },\r\n    { name: 'Montauban', population: 60489 },\r\n    { name: 'Chambery', population: 58753 },\r\n    { name: 'Aix-les-Bains', population: 30812 },\r\n    { name: 'Boulogne-sur-Mer', population: 42092 },\r\n    { name: 'Châteauroux', population: 43442 },\r\n    { name: 'Chalon-sur-Saône', population: 45166 },\r\n    { name: 'Albi', population: 49532 },\r\n    { name: 'Mâcon', population: 34350 },\r\n    { name: 'Colmar', population: 67714 },\r\n    { name: 'Dole', population: 23575 },\r\n    { name: 'Épinal', population: 32006 },\r\n    { name: 'Montbéliard', population: 25405 },\r\n    { name: 'Valenciennes', population: 43336 },\r\n    { name: 'Thionville', population: 40578 },\r\n    { name: 'Tarbes', population: 43363 },\r\n    { name: 'Haguenau', population: 35112 },\r\n    { name: 'Charleville-Mézières', population: 46348 },\r\n    { name: 'Évreux', population: 47533 },\r\n    { name: 'Saint-Étienne-du-Rouvray', population: 28408 },\r\n    { name: 'Drancy', population: 71043 },\r\n    { name: 'Noisy-le-Grand', population: 66888 },\r\n    { name: 'Ivry-sur-Seine', population: 63486 },\r\n    { name: 'Évry-Courcouronnes', population: 67591 },\r\n    { name: 'Villeneuve-d\\'Ascq', population: 62408 },\r\n    { name: 'Sarcelles', population: 58546 },\r\n    { name: 'Le Blanc-Mesnil', population: 55519 },\r\n    { name: 'Alfortville', population: 44818 },\r\n    { name: 'Saint-Ouen', population: 53107 },\r\n    { name: 'Neuilly-sur-Seine', population: 59940 },\r\n    { name: 'Clichy', population: 62854 },\r\n    { name: 'Pantin', population: 57001 },\r\n    { name: 'Maisons-Alfort', population: 54843 },\r\n    { name: 'Malakoff', population: 30420 },\r\n    { name: 'Bagneux', population: 40336 },\r\n    { name: 'Fontenay-sous-Bois', population: 52424 },\r\n    { name: 'Issy-les-Moulineaux', population: 67198 },\r\n    { name: 'Bondy', population: 54866 },\r\n    { name: 'Bobigny', population: 54787 },\r\n    { name: 'Les Lilas', population: 23001 },\r\n    { name: 'Vincennes', population: 49568 },\r\n    { name: 'Saint-Mandé', population: 22563 },\r\n    { name: 'Montrouge', population: 50260 },\r\n    { name: 'Bagnolet', population: 35773 },\r\n    { name: 'Rosny-sous-Bois', population: 46527 },\r\n    { name: 'Noisy-le-Sec', population: 45674 },\r\n    { name: 'Le Pré-Saint-Gervais', population: 17050 },\r\n    { name: 'Romainville', population: 47028 },\r\n    { name: 'L\\'Île-Saint-Denis', population: 8047 },\r\n    { name: 'Le Raincy', population: 14481 },\r\n    { name: 'Neuilly-Plaisance', population: 20778 },\r\n    { name: 'Neuilly-sur-Marne', population: 35608 },\r\n    { name: 'Gagny', population: 39902 },\r\n    { name: 'Gournay-sur-Marne', population: 6787 },\r\n    { name: 'Villemomble', population: 29968 },\r\n    { name: 'Le Perreux-sur-Marne', population: 33902 },\r\n    { name: 'Bry-sur-Marne', population: 16888 },\r\n    { name: 'Champigny-sur-Marne', population: 76818 },\r\n    { name: 'Saint-Maurice', population: 14568 },\r\n    { name: 'Joinville-le-Pont', population: 19052 },\r\n    { name: 'Nogent-sur-Marne', population: 31849 },\r\n    { name: 'Sevran', population: 51249 },\r\n    { name: 'Villepinte', population: 37725 },\r\n    { name: 'Tremblay-en-France', population: 35885 },\r\n    { name: 'Gonesse', population: 25677 },\r\n    { name: 'Garges-lès-Gonesse', population: 42528 },\r\n    { name: 'Goussainville', population: 30991 },\r\n    { name: 'Villiers-le-Bel', population: 27145 },\r\n    { name: 'Bezons', population: 28712 },\r\n    { name: 'Puteaux', population: 44891 },\r\n    { name: 'Levallois-Perret', population: 64110 },\r\n    { name: 'Aubervilliers', population: 88625 },\r\n    { name: 'La Courneuve', population: 43354 },\r\n    { name: 'Épinay-sur-Seine', population: 54781 },\r\n    { name: 'Villetaneuse', population: 12312 },\r\n    { name: 'Pierrefitte-sur-Seine', population: 29561 },\r\n    { name: 'Stains', population: 38105 },\r\n    { name: 'Saint-Gratien', population: 20767 },\r\n    { name: 'Enghien-les-Bains', population: 11325 },\r\n    { name: 'Soisy-sous-Montmorency', population: 17818 },\r\n    { name: 'Ermont', population: 28421 },\r\n    { name: 'Eaubonne', population: 24476 },\r\n    { name: 'Saint-Leu-la-Forêt', population: 15450 },\r\n    { name: 'Taverny', population: 26436 },\r\n    { name: 'Bessancourt', population: 8084 },\r\n    { name: 'Frépillon', population: 3334 },\r\n    { name: 'Butry-sur-Oise', population: 2308 },\r\n    { name: 'Méry-sur-Oise', population: 9875 },\r\n    { name: 'Mériel', population: 5200 },\r\n    { name: 'Valmondois', population: 1234 },\r\n    { name: 'L\\'Isle-Adam', population: 11815 },\r\n    { name: 'Parmain', population: 5600 },\r\n    { name: 'Nesles-la-Vallée', population: 1774 },\r\n    { name: 'Nointel', population: 823 },\r\n    { name: 'Champagne-sur-Oise', population: 4756 },\r\n    { name: 'Persan', population: 12500 },\r\n    { name: 'Beaumont-sur-Oise', population: 9567 },\r\n    { name: 'Bernes-sur-Oise', population: 2500 },\r\n    { name: 'Bruyères-sur-Oise', population: 3500 }\r\n];\r\n\r\n// Fonction pour obtenir une ville par nom\r\nexport const getCityByName = (cityName) => {\r\n    return cityPopulations.find(city =>\r\n        city.name.toLowerCase() === cityName.toLowerCase()\r\n    );\r\n};\r\n\r\n// Fonction pour filtrer les villes par nom (pour l'autocomplete)\r\nexport const filterCities = (searchTerm) => {\r\n    if (!searchTerm || searchTerm.length < 2) return [];\r\n\r\n    const normalizedSearch = searchTerm.toLowerCase();\r\n    return cityPopulations\r\n        .filter(city =>\r\n            city.name.toLowerCase().includes(normalizedSearch)\r\n        )\r\n        .slice(0, 20); // Limiter à 20 résultats\r\n};","import React, { useState, useEffect } from 'react';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport { Typography, Box, IconButton, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Snackbar, Alert, MenuItem, Select, InputLabel, FormControl, CircularProgress, Autocomplete } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport DeleteConfirmDialog from '../../DeleteConfirmDialog';\nimport Loading from '../../Loading';\nimport SecureErrorMessage from '../../common/SecureErrorMessage';\nimport { useNotification } from '../../../hooks/useNotification';\nimport { apiService } from '../../../services/apiService';\n// debounce import supprimé car non utilisé\nimport { cityPopulations, getCityByName } from '../../../constants/cities';\nimport axios from 'axios';\nimport { usePermissions } from '../../../hooks/usePermissions';\nimport i18nService from '../../../services/i18nService';\nimport { useLanguageThemeSync } from '../../../hooks/useLanguageThemeSync';\nimport AccessControl from '../../AccessControl';\n\nconst Churches = () => {\n    const [churches, setChurches] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [churchModal, setChurchModal] = useState(false);\n    const [editingChurchId, setEditingChurchId] = useState(null);\n    const [churchForm, setChurchForm] = useState({ \n        nom: '', \n        adresse: '', \n        ville: '',\n        latitude: '',\n        longitude: '',\n        population: '',\n        description: '',\n        responsable: '',\n        type: 'EGLISE',\n        image: null\n    });\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [churchToDelete, setChurchToDelete] = useState(null);\n    const [users, setUsers] = useState([]);\n    const [loadingCityInfo, setLoadingCityInfo] = useState(false);\n    const [addressOptions, setAddressOptions] = useState([]);\n    const [loadingAddress, setLoadingAddress] = useState(false);\n    const [addressValue, setAddressValue] = useState(null);\n    const [addressInputValue, setAddressInputValue] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n\n    // Initialiser le service i18n et forcer le re-rendu sur changement de langue\n    useEffect(() => {\n        i18nService.init();\n    }, []);\n    const lastUpdate = useLanguageThemeSync();\n\n    const {\n        notification,\n        showSuccess,\n        showError,\n        hideNotification\n    } = useNotification();\n\n    const {\n        canCreateChurches,\n        canUpdateChurches,\n        canDeleteChurches\n    } = usePermissions();\n\n    const loadChurches = async () => {\n        setLoading(true);\n        try {\n            const response = await apiService.churches.getAll();\n            setChurches(response.data?.data || response.data || []);\n            setError(null);\n        } catch (err) {\n            const processedError = handleApiError(err, 'le chargement des églises');\n            setError(processedError.message);\n            setChurches([]);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const loadUsers = async () => {\n        try {\n            // Utiliser la nouvelle route spécifique pour les utilisateurs GOUVERNANCE\n            const response = await apiService.users.getGovernance();\n            const governanceUsers = response.data?.data || response.data || [];\n            \n            setUsers(governanceUsers);\n        } catch (err) {\n            // Gérer les erreurs de chargement des utilisateurs de manière plus intuitive\n            let errorMessage = i18nService.t('dashboard.churches.loadResponsablesError');\n            \n            if (err.response?.status === 500) {\n                errorMessage = i18nService.t('dashboard.churches.serverError');\n            } else if (err.response?.status === 403) {\n                errorMessage = i18nService.t('dashboard.churches.accessDenied');\n            } else if (err.message && !err.message.includes('Request failed with status code')) {\n                errorMessage = err.message;\n            }\n            \n            setUsers([]);\n        }\n    };\n\n    useEffect(() => {\n        loadChurches();\n        loadUsers();\n    }, []);\n\n    // Fonction pour récupérer automatiquement les informations de la ville\n    const fetchCityInfo = async (cityName) => {\n        if (!cityName || cityName.length < 2) return;\n        \n        try {\n            setLoadingCityInfo(true);\n            \n            // D'abord, essayer de trouver la ville dans notre liste locale\n            const localCity = getCityByName(cityName);\n            \n            if (localCity) {\n                // Si la ville est trouvée localement, utiliser ces données\n                setChurchForm(prev => ({\n                    ...prev,\n                    population: localCity.population.toString(),\n                    ville: localCity.name\n                }));\n                \n                // Ensuite, essayer de récupérer les coordonnées via l'API\n                try {\n                    const response = await apiService.churches.getCityInfo(localCity.name);\n                    const cityInfo = response.data?.data;\n                    \n                    if (cityInfo && cityInfo.latitude && cityInfo.longitude) {\n                        setChurchForm(prev => ({\n                            ...prev,\n                            latitude: cityInfo.latitude.toString(),\n                            longitude: cityInfo.longitude.toString()\n                        }));\n                    }\n                } catch (apiError) {\n                    // Impossible de récupérer les coordonnées via l'API, utilisation des données locales uniquement\n                }\n                \n                showSuccess(i18nService.t('dashboard.churches.cityInfoRetrieved', { cityName: localCity.name }));\n            } else {\n                // Si la ville n'est pas dans notre liste locale, essayer l'API\n                const response = await apiService.churches.getCityInfo(cityName);\n                const cityInfo = response.data?.data;\n                \n                if (cityInfo) {\n                    setChurchForm(prev => ({\n                        ...prev,\n                        latitude: cityInfo.latitude?.toString() || '',\n                        longitude: cityInfo.longitude?.toString() || '',\n                        population: cityInfo.population?.toString() || '',\n                        ville: cityInfo.ville || cityName\n                    }));\n                    showSuccess(i18nService.t('dashboard.churches.cityInfoRetrieved', { cityName: cityInfo.ville }));\n                }\n            }\n        } catch (error) {\n            // Ne pas afficher d'erreur car c'est optionnel\n        } finally {\n            setLoadingCityInfo(false);\n        }\n    };\n\n    // Debounce pour éviter trop d'appels API\n    const debouncedFetchCityInfo = React.useCallback(\n        debounce(fetchCityInfo, 1000),\n        []\n    );\n\n    // Fonction debounce\n    function debounce(func, wait) {\n        let timeout;\n        return function executedFunction(...args) {\n            const later = () => {\n                clearTimeout(timeout);\n                func(...args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n\n    // Fonction pour rechercher des adresses via Nominatim\n    const searchAddress = async (input) => {\n        if (!input || input.length < 3) return [];\n        setLoadingAddress(true);\n        try {\n            const url = 'https://nominatim.openstreetmap.org/search';\n            const response = await axios.get(url, {\n                params: {\n                    q: input,\n                    format: 'json',\n                    addressdetails: 1,\n                    limit: 5,\n                    countrycodes: 'fr' // Limite à la France\n                }\n            });\n            // Ajout d'un champ id unique pour chaque option\n            const options = (response.data || []).map(opt => ({ ...opt, id: opt.place_id }));\n            setAddressOptions(options);\n        } catch (error) {\n            setAddressOptions([]);\n        } finally {\n            setLoadingAddress(false);\n        }\n    };\n\n    const handleChurchSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const formData = new FormData();\n            formData.append('nom', churchForm.nom);\n            formData.append('adresse', churchForm.adresse);\n            formData.append('ville', churchForm.ville);\n            formData.append('latitude', churchForm.latitude ? parseFloat(churchForm.latitude) : '');\n            formData.append('longitude', churchForm.longitude ? parseFloat(churchForm.longitude) : '');\n            formData.append('population', churchForm.population ? parseInt(churchForm.population) : '');\n            formData.append('description', churchForm.description);\n            formData.append('responsable_id', churchForm.responsable || '');\n            formData.append('type', churchForm.type);\n            if (selectedImage) {\n                formData.append('image', selectedImage);\n\n            }\n            if (editingChurchId) {\n                await apiService.churches.update(editingChurchId, formData);\n                showSuccess(i18nService.t('dashboard.churches.updateSuccess'));\n            } else {\n                await apiService.churches.create(formData);\n                showSuccess(i18nService.t('dashboard.churches.createSuccess'));\n            }\n            setChurchModal(false);\n            setChurchForm({ nom: '', adresse: '', ville: '', latitude: '', longitude: '', population: '', description: '', responsable: '', type: 'EGLISE', image: null });\n            setSelectedImage(null);\n            setEditingChurchId(null);\n            await loadChurches();\n        } catch (err) {\n            // Gérer les erreurs de manière plus intuitive\n            let errorMessage = i18nService.t('dashboard.churches.operationError');\n            \n            if (err.response?.status === 500) {\n                errorMessage = i18nService.t('dashboard.churches.serverError');\n            } else if (err.response?.status === 400) {\n                errorMessage = err.response?.data?.message || i18nService.t('dashboard.churches.invalidData');\n            } else if (err.response?.status === 404) {\n                errorMessage = i18nService.t('dashboard.churches.notFound');\n            } else if (err.response?.status === 403) {\n                errorMessage = i18nService.t('dashboard.churches.accessDenied');\n            } else if (err.message && !err.message.includes('Request failed with status code')) {\n                errorMessage = err.message;\n            }\n            \n            showError(errorMessage);\n            const processedError = handleApiError(err, 'erreur détaillée:');\n            ;\n        }\n    };\n\n    const handleEditChurch = (church) => {\n        setChurchForm({\n            nom: church.nom,\n            adresse: church.adresse || '',\n            ville: church.ville || '',\n            latitude: church.latitude || '',\n            longitude: church.longitude || '',\n            population: church.population || '',\n            description: church.description || '',\n            responsable: church.responsable?.id || church.responsable?._id || '',\n            type: church.type || 'EGLISE',\n            image: null\n        });\n        setSelectedImage(null);\n        setEditingChurchId(church.id || church._id);\n        setChurchModal(true);\n    };\n\n    const handleOpenDeleteDialog = (church) => {\n        setChurchToDelete(church);\n        setDeleteDialogOpen(true);\n    };\n\n    const handleCloseDeleteDialog = () => {\n        setDeleteDialogOpen(false);\n        setChurchToDelete(null);\n    };\n\n    const handleConfirmDeleteChurch = async () => {\n        if (!churchToDelete) return;\n        try {\n            await apiService.churches.delete(churchToDelete.id || churchToDelete._id);\n            showSuccess(i18nService.t('dashboard.churches.deleteSuccess'));\n            await loadChurches();\n        } catch (err) {\n            // Gérer les erreurs de suppression de manière plus intuitive\n            let errorMessage = i18nService.t('dashboard.churches.deleteError');\n            \n            if (err.response?.status === 500) {\n                errorMessage = i18nService.t('dashboard.churches.deleteServerError');\n            } else if (err.response?.status === 400) {\n                errorMessage = err.response?.data?.message || i18nService.t('dashboard.churches.deleteConstraintError');\n            } else if (err.response?.status === 404) {\n                errorMessage = i18nService.t('dashboard.churches.notFound');\n            } else if (err.response?.status === 403) {\n                errorMessage = i18nService.t('dashboard.churches.accessDenied');\n            } else if (err.message && !err.message.includes('Request failed with status code')) {\n                errorMessage = err.message;\n            }\n            \n            showError(errorMessage);\n            const processedError = handleApiError(err, 'erreur de suppression détaillée:');\n            ;\n        } finally {\n            handleCloseDeleteDialog();\n        }\n    };\n\n    // Remise à zéro du champ lors de la fermeture du modal\n    useEffect(() => {\n        if (!churchModal) {\n            setAddressValue(null);\n            setAddressInputValue('');\n            setSelectedImage(null);\n        }\n    }, [churchModal]);\n\n    return (\n        <AccessControl allowedRoles={['SUPER_ADMIN']}>\n            <Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n                <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>{i18nService.t('dashboard.churches.title')}</Typography>\n                <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => setChurchModal(true)} disabled={!canCreateChurches}>{i18nService.t('dashboard.churches.newChurch')}</Button>\n            </Box>\n            {loading ? (\n                <Loading titre={i18nService.t('dashboard.churches.loading')} />\n            ) : error ? (\n                <SecureErrorMessage error={error} title={i18nService.t('dashboard.churches.loadingError')} />\n            ) : (\n                <TableContainer data-aos=\"fade-up\" component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{i18nService.t('dashboard.churches.table.name')}</TableCell>\n                                <TableCell>{i18nService.t('dashboard.churches.table.city')}</TableCell>\n                                <TableCell>{i18nService.t('dashboard.churches.table.address')}</TableCell>\n                                <TableCell>{i18nService.t('dashboard.churches.table.members')}</TableCell>\n                                <TableCell>{i18nService.t('dashboard.churches.table.responsible')}</TableCell>\n                                <TableCell align=\"right\">{i18nService.t('dashboard.churches.table.actions')}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Array.isArray(churches) ? (\n                                churches\n                                    .map((church) => (\n                                        <TableRow key={church.id || church._id}>\n                                            <TableCell>{church.nom}</TableCell>\n                                            <TableCell>{church.ville || '-'}</TableCell>\n                                            <TableCell>{church.adresse || '-'}</TableCell>\n                                            <TableCell>{church.nombre_membres || 0}</TableCell>\n                                            <TableCell>{church.responsable ? (church.responsable.username || church.responsable.pseudo || church.responsable.email) : '-'}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton\n                                                    onClick={() => handleEditChurch(church)}\n                                                    color=\"primary\"\n                                                    size=\"small\"\n                                                    disabled={!canUpdateChurches}\n                                                    title={!canUpdateChurches ? i18nService.t('dashboard.churches.readOnlyAdmin') : \"\"}\n                                                >\n                                                    <EditIcon />\n                                                </IconButton>\n                                                <IconButton color=\"error\" onClick={() => handleOpenDeleteDialog(church)} disabled={!canDeleteChurches} title={!canDeleteChurches ? i18nService.t('dashboard.churches.readOnlyAdmin') : \"\"}>\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))) : null}\n                            {Array.isArray(churches) &&\n                                churches.length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={2} align=\"center\">\n                                            {i18nService.t('dashboard.churches.noChurches')}\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            )}\n\n            <Dialog\n                open={churchModal}\n                onClose={() => {\n                    setChurchModal(false);\n                    setEditingChurchId(null);\n                    setChurchForm({ nom: '', adresse: '', ville: '', latitude: '', longitude: '', population: '', description: '', responsable: '', type: 'EGLISE', image: null });\n                    setSelectedImage(null);\n                }}\n                maxWidth=\"sm\"\n                fullWidth\n                PaperProps={{\n                    sx: {\n                        width: '100%',\n                        maxWidth: '500px',\n                        margin: '20px'\n                    }\n                }}\n            >\n                <DialogTitle>{editingChurchId ? i18nService.t('dashboard.churches.dialog.editTitle') : i18nService.t('dashboard.churches.dialog.createTitle')}</DialogTitle>\n                <form onSubmit={handleChurchSubmit}>\n                    <DialogContent sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Box sx={{ width: '100%', maxWidth: '450px' }}>\n                            <TextField\n                                fullWidth\n                                label={i18nService.t('dashboard.churches.form.churchName')}\n                                value={churchForm.nom}\n                                onChange={(e) => setChurchForm({ ...churchForm, nom: e.target.value })}\n                                required\n                                margin=\"normal\"\n                            />\n                            <Autocomplete\n                                fullWidth\n                                options={cityPopulations}\n                                getOptionLabel={(option) => typeof option === 'string' ? option : option.name}\n                                value={churchForm.ville}\n                                onChange={(event, newValue) => {\n                                    const cityName = typeof newValue === 'string' ? newValue : newValue?.name || '';\n                                    setChurchForm({ ...churchForm, ville: cityName });\n                                    if (cityName) {\n                                        debouncedFetchCityInfo(cityName);\n                                    }\n                                }}\n                                renderInput={(params) => (\n                                    <TextField\n                                        {...params}\n                                        label={i18nService.t('dashboard.churches.form.city')}\n                                        margin=\"normal\"\n                                        InputProps={{\n                                            ...params.InputProps,\n                                            endAdornment: (\n                                                <>\n                                                    {loadingCityInfo && (\n                                                        <CircularProgress size={20} />\n                                                    )}\n                                                    {params.InputProps.endAdornment}\n                                                </>\n                                            ),\n                                        }}\n                                        helperText={loadingCityInfo ? i18nService.t('dashboard.churches.form.retrievingInfo') : i18nService.t('dashboard.churches.form.cityHelper')}\n                                    />\n                                )}\n                                renderOption={(props, option) => (\n                                    <Box component=\"li\" {...props}>\n                                        <Box>\n                                            <Typography variant=\"body1\">{option.name}</Typography>\n                                            <Typography variant=\"caption\" color=\"text.secondary\">\n                                                {i18nService.t('dashboard.churches.form.population')}: {option.population.toLocaleString()} {i18nService.t('dashboard.churches.form.inhabitants')}\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                )}\n                            />\n                            <Autocomplete\n                                fullWidth\n                                options={addressOptions}\n                                value={addressValue}\n                                inputValue={addressInputValue}\n                                getOptionLabel={(option) => {\n                                    if (typeof option === 'string') return option;\n                                    const a = option.address || {};\n                                    const parts = [\n                                        a.house_number,\n                                        a.road,\n                                        a.postcode,\n                                        a.city || a.town || a.village || ''\n                                    ].filter(Boolean);\n                                    return parts.join(', ');\n                                }}\n                                isOptionEqualToValue={(option, value) => option.id === value.id}\n                                filterOptions={(options) => options}\n                                onInputChange={(event, newInputValue, reason) => {\n                                    setAddressInputValue(newInputValue);\n                                    setChurchForm({ ...churchForm, adresse: newInputValue });\n                                    if (reason === 'input') {\n                                        setAddressValue(null);\n                                    }\n                                    if (newInputValue && newInputValue.length > 2) {\n                                        searchAddress(newInputValue);\n                                    } else {\n                                        setAddressOptions([]);\n                                    }\n                                }}\n                                onChange={async (event, newValue) => {\n                                    setAddressValue(newValue);\n                                    if (!newValue) return;\n                                    const address = typeof newValue === 'string' ? newValue : newValue.display_name;\n                                    setAddressInputValue(address);\n                                    setChurchForm(prev => ({ ...prev, adresse: address }));\n                                    // Remplir automatiquement ville, lat, lon, population\n                                    if (typeof newValue !== 'string') {\n                                        const ville = newValue.address.city || newValue.address.town || newValue.address.village || newValue.address.municipality || newValue.address.county || '';\n                                        const latitude = newValue.lat;\n                                        const longitude = newValue.lon;\n                                        setChurchForm(prev => ({\n                                            ...prev,\n                                            ville,\n                                            latitude,\n                                            longitude\n                                        }));\n                                        // Appel backend pour la population\n                                        try {\n                                            const response = await apiService.churches.getCityInfo(ville);\n                                            const cityInfo = response.data?.data;\n                                            if (cityInfo && cityInfo.population) {\n                                                setChurchForm(prev => ({ ...prev, population: cityInfo.population.toString() }));\n                                            }\n                                        } catch (e) {}\n                                    }\n                                }}\n                                loading={loadingAddress}\n                                renderInput={(params) => (\n                                    <TextField\n                                        {...params}\n                                        label={i18nService.t('dashboard.churches.form.fullAddress')}\n                                        margin=\"normal\"\n                                        InputProps={{\n                                            ...params.InputProps,\n                                            endAdornment: (\n                                                <>\n                                                    {loadingAddress && <CircularProgress size={20} />}\n                                                    {params.InputProps.endAdornment}\n                                                </>\n                                            ),\n                                        }}\n                                        helperText={i18nService.t('dashboard.churches.form.addressHelper')}\n                                    />\n                                )}\n                                renderOption={(props, option) => {\n                                    const a = option.address || {};\n                                    const parts = [\n                                        a.house_number,\n                                        a.road,\n                                        a.postcode,\n                                        a.city || a.town || a.village || ''\n                                    ].filter(Boolean);\n                                    return (\n                                        <Box component=\"li\" {...props}>\n                                            <Typography variant=\"body1\">{parts.join(', ')}</Typography>\n                                        </Box>\n                                    );\n                                }}\n                            />\n                            <Box sx={{ display: 'flex', gap: 2 }}>\n                                <TextField\n                                    fullWidth\n                                    label={i18nService.t('dashboard.churches.form.cityPopulation')}\n                                    type=\"number\"\n                                    value={churchForm.population}\n                                    onChange={(e) => setChurchForm({ ...churchForm, population: e.target.value })}\n                                    margin=\"normal\"\n                                />\n                            </Box>\n                            <TextField\n                                fullWidth\n                                label={i18nService.t('dashboard.churches.form.description')}\n                                multiline\n                                rows={3}\n                                value={churchForm.description}\n                                onChange={(e) => setChurchForm({ ...churchForm, description: e.target.value })}\n                                margin=\"normal\"\n                            />\n                            <FormControl fullWidth margin=\"normal\">\n                                <InputLabel id=\"responsable-label\">{i18nService.t('dashboard.churches.form.responsible')}</InputLabel>\n                                <Select\n                                    labelId=\"responsable-label\"\n                                    value={churchForm.responsable}\n                                    label={i18nService.t('dashboard.churches.form.responsible')}\n                                    onChange={(e) => setChurchForm({ ...churchForm, responsable: e.target.value })}\n                                >\n                                    <MenuItem value=\"\"><em>{i18nService.t('dashboard.churches.form.none')}</em></MenuItem>\n                                    {users.length > 0 ? (\n                                        users.map((user) => (\n                                            <MenuItem key={user.id || user._id} value={user.id || user._id}>\n                                                {user.username || user.pseudo || user.email} - {user.eglise_locale?.nom || i18nService.t('dashboard.churches.form.noAssignedChurch')}\n                                            </MenuItem>\n                                        ))\n                                    ) : (\n                                        <MenuItem disabled>\n                                            {i18nService.t('dashboard.churches.form.noGovernanceUsers')}\n                                        </MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl fullWidth margin=\"normal\">\n                                <InputLabel id=\"type-label\">{i18nService.t('dashboard.churches.form.type')}</InputLabel>\n                                <Select\n                                    labelId=\"type-label\"\n                                    value={churchForm.type}\n                                    label={i18nService.t('dashboard.churches.form.type')}\n                                    onChange={e => setChurchForm({ ...churchForm, type: e.target.value })}\n                                    required\n                                >\n                                    <MenuItem value=\"EGLISE\">{i18nService.t('dashboard.churches.form.typeChurch')}</MenuItem>\n                                    <MenuItem value=\"MISSION\">{i18nService.t('dashboard.churches.form.typeMission')}</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button\n                                variant=\"outlined\"\n                                component=\"label\"\n                                fullWidth\n                                sx={{ mt: 1, mb: 2 }}\n                            >\n                                {selectedImage ? selectedImage.name : i18nService.t('dashboard.churches.form.chooseImage')}\n                                <input\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    hidden\n                                    onChange={e => {\n                                        if (e.target.files && e.target.files[0]) {\n                                            setSelectedImage(e.target.files[0]);\n                                        }\n                                    }}\n                                />\n                            </Button>\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => {\n                            setChurchModal(false);\n                            setEditingChurchId(null);\n                            setChurchForm({ nom: '', adresse: '', ville: '', latitude: '', longitude: '', population: '', description: '', responsable: '', type: 'EGLISE', image: null });\n                            setSelectedImage(null);\n                        }}>{i18nService.t('common.actions.cancel')}</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                            {editingChurchId ? i18nService.t('common.actions.update') : i18nService.t('common.actions.create')}\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n            {/* Dialog de confirmation suppression */}\n            <DeleteConfirmDialog\n                open={deleteDialogOpen}\n                title={i18nService.t('dashboard.churches.deleteDialog.title')}\n                content={churchToDelete ? i18nService.t('dashboard.churches.deleteDialog.content', { churchName: churchToDelete.nom }) : i18nService.t('dashboard.churches.deleteDialog.contentGeneric')}\n                onClose={handleCloseDeleteDialog}\n                onConfirm={handleConfirmDeleteChurch}\n            />\n\n            {/* Snackbar feedback */}\n            <Snackbar\n                open={notification.open}\n                autoHideDuration={4000}\n                onClose={hideNotification}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            >\n                <Alert onClose={hideNotification} severity={notification.severity} sx={{ width: '100%' }}>\n                    {notification.message}\n                </Alert>\n            </Snackbar>\n            </Box>\n        </AccessControl>\n    );\n};\n\nexport default Churches;\n","import { Box, Typography, Button, TextField, TableCell, TableContainer, Table, TableHead, TableRow, Paper, TableBody, DialogActions, DialogContent, DialogTitle, IconButton, Dialog, CircularProgress } from '@mui/material';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport DeleteConfirmDialog from '../../DeleteConfirmDialog';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useState, useEffect } from 'react';\nimport SecureErrorMessage from '../../common/SecureErrorMessage';\nimport { useNotification } from '../../../hooks/useNotification';\nimport { apiService } from '../../../services/apiService';\nimport { usePermissions } from '../../../hooks/usePermissions';\nimport i18nService from '../../../services/i18nService';\nimport { useLanguageThemeSync } from '../../../hooks/useLanguageThemeSync';\nimport AccessControl from '../../AccessControl';\n\nconst Departments = () => {\n    const [departments, setDepartments] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [departmentToDelete, setDepartmentToDelete] = useState(null);\n    const [departmentModal, setDepartmentModal] = useState(false);\n    const [editingDepartmentId, setEditingDepartmentId] = useState(null);\n    const [departmentForm, setDepartmentForm] = useState({\n        nom: ''\n    });\n    const [departmentSearchTerm, setDepartmentSearchTerm] = useState('');\n\n    // Initialiser le service i18n et forcer le re-rendu sur changement de langue\n    useEffect(() => {\n        i18nService.init();\n    }, []);\n    const lastUpdate = useLanguageThemeSync();\n\n    const {\n        notification,\n        showSuccess,\n        showError,\n        hideNotification\n    } = useNotification();\n\n    const {\n        canCreateDepartments,\n        canUpdateDepartments,\n        canDeleteDepartments\n    } = usePermissions();\n\n    const loadDepartments = async () => {\n        setLoading(true);\n        try {\n            const response = await apiService.departments.getAll();\n            setDepartments(response.data?.data || response.data || []);\n            setError(null);\n        } catch (err) {\n            setError(processedError.message);\n            setDepartments([]);\n            const processedError = handleApiError(err, 'l\\'opération');\n            } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        loadDepartments();\n    }, []);\n\n    const handleEditDepartment = (department) => {\n        setDepartmentForm({ nom: department.nom });\n        setEditingDepartmentId(department.id || department._id);\n        setDepartmentModal(true);\n    };\n\n    const handleOpenDeleteDialog = (department) => {\n        setDepartmentToDelete(department);\n        setDeleteDialogOpen(true);\n    };\n\n    const handleCloseDeleteDialog = () => {\n        setDeleteDialogOpen(false);\n        setDepartmentToDelete(null);\n    };\n\n    const handleConfirmDeleteDepartment = async () => {\n        if (!departmentToDelete) return;\n        try {\n            await apiService.departments.delete(departmentToDelete.id || departmentToDelete._id);\n            showSuccess(i18nService.t('dashboard.departments.deleteSuccess'));\n            await loadDepartments();\n        } catch (err) {\n            showError(err.message || i18nService.t('dashboard.departments.deleteError'));\n        } finally {\n            handleCloseDeleteDialog();\n        }\n    };\n\n    const handleDepartmentSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (editingDepartmentId) {\n                await apiService.departments.update(editingDepartmentId, departmentForm);\n                showSuccess(i18nService.t('dashboard.departments.updateSuccess'));\n            } else {\n                await apiService.departments.create(departmentForm);\n                showSuccess(i18nService.t('dashboard.departments.createSuccess'));\n            }\n            \n            setDepartmentModal(false);\n            setDepartmentForm({ nom: '' });\n            setEditingDepartmentId(null);\n            await loadDepartments();\n        } catch (err) {\n            showError(err.message || i18nService.t('dashboard.departments.operationError'));\n            }\n    };\n\n    return (\n        <AccessControl allowedRoles={['SUPER_ADMIN']}>\n            <Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n                <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>{i18nService.t('dashboard.departments.title')}</Typography>\n                <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => setDepartmentModal(true)} disabled={!canCreateDepartments}>{i18nService.t('dashboard.departments.newDepartment')}</Button>\n            </Box>\n            <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder={i18nService.t('dashboard.departments.searchPlaceholder')}\n                value={departmentSearchTerm}\n                onChange={(e) => setDepartmentSearchTerm(e.target.value)}\n                InputProps={{\n                    startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />\n                }}\n                sx={{ mb: 3 }}\n            />\n            {loading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                    <CircularProgress />\n                </Box>\n            ) : error ? (\n                <SecureErrorMessage error={error} title={i18nService.t('dashboard.departments.loadingError')} />\n            ) : (\n                <TableContainer data-aos=\"fade-up\" component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{i18nService.t('dashboard.departments.table.name')}</TableCell>\n                                <TableCell align=\"right\">{i18nService.t('dashboard.departments.table.actions')}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Array.isArray(departments) ? (\n                                departments\n                                    .filter(department => {\n                                        if (!department || !department.nom) return false;\n                                        const searchTerm = (departmentSearchTerm || '').toLowerCase();\n                                        const nomDepartement = String(department.nom).toLowerCase();\n                                        return nomDepartement.includes(searchTerm);\n                                    })\n                                    .map((department) => (\n                                        <TableRow key={department.id || department._id}>\n                                            <TableCell>{department.nom}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton\n                                                    onClick={() => handleEditDepartment(department)}\n                                                    color=\"primary\"\n                                                    size=\"small\"\n                                                    disabled={!canUpdateDepartments}\n                                                    title={!canUpdateDepartments ? i18nService.t('dashboard.departments.readOnlyAdmin') : \"\"}\n                                                >\n                                                    <EditIcon />\n                                                </IconButton>\n                                                <IconButton color=\"error\" onClick={() => handleOpenDeleteDialog(department)} disabled={!canDeleteDepartments} title={!canDeleteDepartments ? i18nService.t('dashboard.departments.readOnlyAdmin') : \"\"}>\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                            ) : null}\n                            {Array.isArray(departments) &&\n                                departments.filter(department => department.nom.toLowerCase().includes(departmentSearchTerm.toLowerCase())).length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={2} align=\"center\">\n                                            {departments.length === 0 ? i18nService.t('dashboard.departments.noDepartments') : i18nService.t('dashboard.departments.noSearchResults')}\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            )}\n            <Dialog\n                open={departmentModal}\n                onClose={() => {\n                    setDepartmentModal(false);\n                    setEditingDepartmentId(null);\n                    setDepartmentForm({ nom: '' });\n                }}\n                maxWidth=\"sm\"\n                fullWidth\n                PaperProps={{\n                    sx: {\n                        width: '100%',\n                        maxWidth: '500px',\n                        margin: '20px'\n                    }\n                }}\n            >\n                <DialogTitle>{editingDepartmentId ? i18nService.t('dashboard.departments.dialog.editTitle') : i18nService.t('dashboard.departments.dialog.createTitle')}</DialogTitle>\n                <form onSubmit={handleDepartmentSubmit}>\n                    <DialogContent sx={{ display: 'flex', justifyContent: 'center' }}>\n                        <Box sx={{ width: '100%', maxWidth: '450px' }}>\n                            <TextField\n                                fullWidth\n                                label={i18nService.t('dashboard.departments.form.departmentName')}\n                                value={departmentForm.nom}\n                                onChange={(e) => setDepartmentForm({ ...departmentForm, nom: e.target.value })}\n                                margin=\"normal\"\n                                required\n                            />\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => {\n                            setDepartmentModal(false);\n                            setEditingDepartmentId(null);\n                            setDepartmentForm({ nom: '' });\n                        }}>{i18nService.t('common.actions.cancel')}</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">{editingDepartmentId ? i18nService.t('common.actions.update') : i18nService.t('common.actions.create')}</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n            <DeleteConfirmDialog\n                open={deleteDialogOpen}\n                title={i18nService.t('dashboard.departments.deleteDialog.title')}\n                content={departmentToDelete ? i18nService.t('dashboard.departments.deleteDialog.content', { departmentName: departmentToDelete.nom }) : i18nService.t('dashboard.departments.deleteDialog.contentGeneric')}\n                onClose={handleCloseDeleteDialog}\n                onConfirm={handleConfirmDeleteDepartment}\n            />\n            </Box>\n        </AccessControl>\n    );\n};\n\nexport default Departments;\n","import React, { useEffect, useMemo } from 'react';\nimport { Typography, Grid, CircularProgress, Box, Paper, IconButton, Button } from '@mui/material';\nimport { ResponsiveContainer, PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend } from 'recharts';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport { useGlobalCache } from '../../../hooks/useGlobalCache';\nimport { formatQualificationWithFallback } from '../../../utils/qualificationFormatter';\nimport { QUALIFICATION_OPTIONS } from '../../../constants/enums';\nimport i18nService from '../../../services/i18nService';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#B455C6', '#FF6666', '#82ca9d', '#8884d8', '#ffc658', '#a4de6c', '#d0ed57'];\n\nconst StatsMembres = ({ selectedChurch }) => {\n    // Debug: afficher la valeur de selectedChurch\n    // Debug de l'église sélectionnée - Supprimé pour la production\n\n    // Fonction utilitaire pour calculer l'âge\n    const calculateAge = (dateNaissance) => {\n        const today = new Date();\n        const birthDate = new Date(dateNaissance);\n        let age = today.getFullYear() - birthDate.getFullYear();\n        const monthDiff = today.getMonth() - birthDate.getMonth();\n        \n        if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        return age;\n    };\n\n    // Utilisation du cache global pour éviter les rechargements\n    const { data: users, loading: cacheLoading, error: cacheError, refresh: fetchUsers } = useGlobalCache(\n        `users-stats-${selectedChurch?.id || 'none'}`,\n        async () => {\n            // Ne pas faire d'appel API si selectedChurch n'est pas valide\n            if (!selectedChurch) {\n                return [];\n            }\n            const { apiService } = await import('../../../services/apiService');\n            \n            // Utiliser getAll avec filtre par église\n            const params = { churchId: selectedChurch.id };\n            const usersRes = await apiService.users.getAll(params);\n            const allUsers = usersRes.data?.data || usersRes.data || [];\n            \n            // Filtrer les utilisateurs de cette église\n            const filteredUsers = allUsers.filter(user => \n                user.eglise_locale_id === selectedChurch.id || \n                user.eglise_locale?.id === selectedChurch.id\n            );\n            \n            return filteredUsers;\n        },\n        {\n            ttl: 5 * 60 * 1000, // 5 minutes\n            staleWhileRevalidate: true\n        }\n    );\n\n    // Rafraîchissement automatique quand selectedChurch change\n    useEffect(() => {\n        if (selectedChurch) {\n            // Rafraîchir les données avec un délai pour éviter les appels simultanés\n            const timer = setTimeout(() => {\n                fetchUsers();\n            }, 100);\n            \n            return () => clearTimeout(timer);\n        }\n    }, [selectedChurch]); // Dépendance unique : selectedChurch\n\n    // Calcul des stats qualification à partir des users non isolés\n    const qualificationStats = useMemo(() => {\n        if (!users || users.length === 0) return [];\n        \n        const stats = {};\n        users.forEach(user => {\n            const qualification = user.qualification || 'Non définie';\n            \n            // Trouver le label correspondant dans QUALIFICATION_OPTIONS\n            let displayName = 'Non définie';\n            if (qualification !== 'Non définie') {\n                const option = QUALIFICATION_OPTIONS.find(opt => opt.value === qualification);\n                displayName = option ? option.label : formatQualificationWithFallback(qualification, qualification);\n            }\n            \n            if (!stats[displayName]) {\n                stats[displayName] = { name: displayName, value: 0 };\n            }\n            stats[displayName].value++;\n        });\n        \n        const result = Object.values(stats).sort((a, b) => b.value - a.value);\n        return result;\n    }, [users]);\n\n    // Calcul des stats par genre\n    const genreStats = useMemo(() => {\n        if (!users || users.length === 0) return [];\n        const stats = {};\n        users.forEach(user => {\n            const genre = user.genre || 'Non défini';\n            if (!stats[genre]) {\n                stats[genre] = { name: genre, value: 0 };\n            }\n            stats[genre].value++;\n        });\n        return Object.values(stats).sort((a, b) => b.value - a.value);\n    }, [users]);\n\n    // Calcul des stats par tranche d'âge\n    const ageStats = useMemo(() => {\n        if (!users || users.length === 0) return [];\n        \n        const stats = {};\n        users.forEach(user => {\n            // Utiliser directement le champ tranche_age de l'utilisateur\n            const tranche = user.tranche_age || 'Non définie';\n            \n            if (!stats[tranche]) {\n                stats[tranche] = { name: tranche, value: 0 };\n            }\n            stats[tranche].value++;\n        });\n        \n        // Trier selon l'ordre logique des tranches d'âge\n        const order = [\n            '0 - 2 ans', '2 ans - 6 ans', '7 ans - 12 ans', '13 ans - 18 ans', \n            '19 ans - 25 ans', '26 ans - 35 ans', '36 ans - 55 ans', \n            '56 ans - 85 ans', '85 ans et plus', 'Non définie'\n        ];\n        \n        const result = Object.values(stats).sort((a, b) => {\n            const aIndex = order.indexOf(a.name);\n            const bIndex = order.indexOf(b.name);\n            // Mettre \"Non définie\" à la fin\n            if (aIndex === -1) return 1;\n            if (bIndex === -1) return -1;\n            return aIndex - bIndex;\n        });\n        \n        return result;\n    }, [users]);\n\n    // Calcul des stats par ville de résidence\n    const villeStats = useMemo(() => {\n        if (!users || users.length === 0) return [];\n        const stats = {};\n        users.forEach(user => {\n            const ville = user.ville_residence || 'Non définie';\n            if (!stats[ville]) {\n                stats[ville] = { name: ville, value: 0 };\n            }\n            stats[ville].value++;\n        });\n        return Object.values(stats).sort((a, b) => b.value - a.value).slice(0, 10); // Top 10\n    }, [users]);\n\n    // 4. Bar chart qualification (trié par ordre décroissant)\n    const qualifBarStats = useMemo(() => {\n        return qualificationStats\n            .map(q => ({ qualification: q.name, count: q.value }))\n            .sort((a, b) => b.count - a.count);\n    }, [qualificationStats]);\n\n    // Protection : ne pas afficher les données si selectedChurch n'est pas valide\n    if (!selectedChurch) {\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                    Veuillez sélectionner une église pour voir les statistiques\n                </Typography>\n            </Box>\n        );\n    }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3, alignItems: 'center' }}>\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>Statistiques Membres</Typography>\n        <IconButton onClick={fetchUsers} disabled={cacheLoading} aria-label={i18nService.t('common.actions.refresh')}>\n          <RefreshIcon />\n        </IconButton>\n      </Box>\n      {cacheLoading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}><CircularProgress /></Box>\n      ) : cacheError ? (\n        <Typography color=\"error\">{cacheError}</Typography>\n      ) : (\n        <Grid>\n          {/* Répartition par qualification */}\n          <Grid data-aos=\"fade-up\" item xs={12} md={6} sx={{ mt: 4 }}>\n            <Paper sx={{ p: 3, backgroundColor: '#f9f9f9', overflowX: 'auto' }}>\n              <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>{i18nService.t('home.qualificationDistribution')}</Typography>\n              <ResponsiveContainer width=\"100%\" height={350}>\n                <BarChart data={qualifBarStats}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"qualification\" angle={-30} textAnchor=\"end\" interval={0} height={80} />\n                  <YAxis allowDecimals={false} />\n                  <RechartsTooltip />\n                  <Bar dataKey=\"count\" fill=\"#FFBB28\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n          </Grid>\n          {/* Répartition par genre */}\n          <Grid data-aos=\"fade-up\" item xs={12} md={6} sx={{ mt: 4 }}>\n            <Paper sx={{ p: 3, backgroundColor: '#f9f9f9', overflowX: 'auto' }}>\n              <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>{i18nService.t('home.genreDistribution')}</Typography>\n              <ResponsiveContainer width=\"100%\" height={500}>\n                <PieChart>\n                  <Pie\n                    data={genreStats}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={200}\n                    label={({ name, value }) => {\n                      const total = genreStats.reduce((sum, g) => sum + g.value, 0);\n                      const percent = total ? ((value / total) * 100).toFixed(1) : 0;\n                      return `${name}: ${value} (${percent}%)`;\n                    }}\n                  >\n                    {genreStats.map((entry, idx) => (\n                      <Cell key={`cell-${idx}`} fill={COLORS[idx % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Legend />\n                  <RechartsTooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </Paper>\n          </Grid>\n\n          {/* Répartition par âge */}\n          <Grid data-aos=\"fade-up\" item xs={12} md={6} sx={{ mt: 4 }}>\n            <Paper sx={{ p: 3, backgroundColor: '#f9f9f9', overflowX: 'auto' }}>\n              <Typography variant=\"h6\" gutterBottom sx={{ fontSize: 22 }}>{i18nService.t('home.ageDistribution')}</Typography>\n              <ResponsiveContainer width=\"100%\" height={350}>\n                <BarChart data={ageStats}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis allowDecimals={false} />\n                  <RechartsTooltip />\n                  <Bar dataKey=\"value\" fill=\"#00C49F\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n          </Grid>\n\n        </Grid>\n      )}\n    </Box>\n  );\n};\n\nexport default StatsMembres;\n","export const departementToRegion = {\r\n    \"Ain\": \"Auvergne-Rhône-Alpes\",\r\n    \"Aisne\": \"Hauts-de-France\",\r\n    \"Allier\": \"Auvergne-Rhône-Alpes\",\r\n    \"Alpes-de-Haute-Provence\": \"Provence-Alpes-Côte d'Azur\",\r\n    \"Hautes-Alpes\": \"Provence-Alpes-Côte d'Azur\",\r\n    \"Alpes-Maritimes\": \"Provence-Alpes-Côte d'Azur\",\r\n    \"Ardèche\": \"Auvergne-Rhône-Alpes\",\r\n    \"Ardennes\": \"Grand Est\",\r\n    \"Ariège\": \"Occitanie\",\r\n    \"Aube\": \"Grand Est\",\r\n    \"Aude\": \"Occitanie\",\r\n    \"Aveyron\": \"Occitanie\",\r\n    \"Bouches-du-Rhône\": \"Provence-Alpes-Côte d'Azur\",\r\n    \"Calvados\": \"Normandie\",\r\n    \"Cantal\": \"Auvergne-Rhône-Alpes\",\r\n    \"Charente\": \"Nouvelle-Aquitaine\",\r\n    \"Charente-Maritime\": \"Nouvelle-Aquitaine\",\r\n    \"Cher\": \"Centre-Val de Loire\",\r\n    \"Corrèze\": \"Nouvelle-Aquitaine\",\r\n    \"Côte-d'Or\": \"Bourgogne-Franche-Comté\",\r\n    \"Côtes-d'Armor\": \"Bretagne\",\r\n    \"Creuse\": \"Nouvelle-Aquitaine\",\r\n    \"Dordogne\": \"Nouvelle-Aquitaine\",\r\n    \"Doubs\": \"Bourgogne-Franche-Comté\",\r\n    \"Drôme\": \"Auvergne-Rhône-Alpes\",\r\n    \"Eure\": \"Normandie\",\r\n    \"Eure-et-Loir\": \"Centre-Val de Loire\",\r\n    \"Finistère\": \"Bretagne\",\r\n    \"Corse-du-Sud\": \"Corse\",\r\n    \"Haute-Corse\": \"Corse\",\r\n    \"Gard\": \"Occitanie\",\r\n    \"Haute-Garonne\": \"Occitanie\",\r\n    \"Gers\": \"Occitanie\",\r\n    \"Gironde\": \"Nouvelle-Aquitaine\",\r\n    \"Hérault\": \"Occitanie\",\r\n    \"Ille-et-Vilaine\": \"Bretagne\",\r\n    \"Indre\": \"Centre-Val de Loire\",\r\n    \"Indre-et-Loire\": \"Centre-Val de Loire\",\r\n    \"Isère\": \"Auvergne-Rhône-Alpes\",\r\n    \"Jura\": \"Bourgogne-Franche-Comté\",\r\n    \"Landes\": \"Nouvelle-Aquitaine\",\r\n    \"Loir-et-Cher\": \"Centre-Val de Loire\",\r\n    \"Loire\": \"Auvergne-Rhône-Alpes\",\r\n    \"Haute-Loire\": \"Auvergne-Rhône-Alpes\",\r\n    \"Loire-Atlantique\": \"Pays de la Loire\",\r\n    \"Loiret\": \"Centre-Val de Loire\",\r\n    \"Lot\": \"Occitanie\",\r\n    \"Lot-et-Garonne\": \"Nouvelle-Aquitaine\",\r\n    \"Lozère\": \"Occitanie\",\r\n    \"Maine-et-Loire\": \"Pays de la Loire\",\r\n    \"Manche\": \"Normandie\",\r\n    \"Marne\": \"Grand Est\",\r\n    \"Haute-Marne\": \"Grand Est\",\r\n    \"Mayenne\": \"Pays de la Loire\",\r\n    \"Meurthe-et-Moselle\": \"Grand Est\",\r\n    \"Meuse\": \"Grand Est\",\r\n    \"Morbihan\": \"Bretagne\",\r\n    \"Moselle\": \"Grand Est\",\r\n    \"Nièvre\": \"Bourgogne-Franche-Comté\",\r\n    \"Nord\": \"Hauts-de-France\",\r\n    \"Oise\": \"Hauts-de-France\",\r\n    \"Orne\": \"Normandie\",\r\n    \"Pas-de-Calais\": \"Hauts-de-France\",\r\n    \"Puy-de-Dôme\": \"Auvergne-Rhône-Alpes\",\r\n    \"Pyrénées-Atlantiques\": \"Nouvelle-Aquitaine\",\r\n    \"Hautes-Pyrénées\": \"Occitanie\",\r\n    \"Pyrénées-Orientales\": \"Occitanie\",\r\n    \"Bas-Rhin\": \"Grand Est\",\r\n    \"Haut-Rhin\": \"Grand Est\",\r\n    \"Rhône\": \"Auvergne-Rhône-Alpes\",\r\n    \"Haute-Saône\": \"Bourgogne-Franche-Comté\",\r\n    \"Saône-et-Loire\": \"Bourgogne-Franche-Comté\",\r\n    \"Sarthe\": \"Pays de la Loire\",\r\n    \"Savoie\": \"Auvergne-Rhône-Alpes\",\r\n    \"Haute-Savoie\": \"Auvergne-Rhône-Alpes\",\r\n    \"Paris\": \"Île-de-France\",\r\n    \"Seine-Maritime\": \"Normandie\",\r\n    \"Seine-et-Marne\": \"Île-de-France\",\r\n    \"Yvelines\": \"Île-de-France\",\r\n    \"Deux-Sèvres\": \"Nouvelle-Aquitaine\",\r\n    \"Somme\": \"Hauts-de-France\",\r\n    \"Tarn\": \"Occitanie\",\r\n    \"Tarn-et-Garonne\": \"Occitanie\",\r\n    \"Var\": \"Provence-Alpes-Côte d'Azur\",\r\n    \"Vaucluse\": \"Provence-Alpes-Côte d'Azur\",\r\n    \"Vendée\": \"Pays de la Loire\",\r\n    \"Vienne\": \"Nouvelle-Aquitaine\",\r\n    \"Haute-Vienne\": \"Nouvelle-Aquitaine\",\r\n    \"Vosges\": \"Grand Est\",\r\n    \"Yonne\": \"Bourgogne-Franche-Comté\",\r\n    \"Territoire de Belfort\": \"Bourgogne-Franche-Comté\",\r\n    \"Essonne\": \"Île-de-France\",\r\n    \"Hauts-de-Seine\": \"Île-de-France\",\r\n    \"Seine-Saint-Denis\": \"Île-de-France\",\r\n    \"Val-de-Marne\": \"Île-de-France\",\r\n    \"Val-d'Oise\": \"Île-de-France\"\r\n  };","import React, { useState, useEffect, useRef } from 'react';\nimport { handleApiError } from '../../../utils/errorHandler';\nimport { Box, Typography, Paper, Chip, Button, Divider } from '@mui/material';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, GeoJSON, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { apiService } from '../../../services/apiService';\nimport Loading from '../../Loading';\nimport SecureErrorMessage from '../../common/SecureErrorMessage';\nimport { departementToRegion } from '../../../constants/departementToRegion';\nimport { usePermissions } from '../../../hooks/usePermissions';\nimport { getImageUrl } from '../../../config/apiConfig';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\n// Correction pour les icônes Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Icône personnalisée pour les églises (plus foncé)\nconst churchIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-violet.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Icône personnalisée pour les missions (vert standard)\nconst missionIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Composant pour centrer la carte sur la France\nfunction CenterOnFrance() {\n  const map = useMap();\n  \n  useEffect(() => {\n    // Centrer sur la France avec un zoom approprié\n    map.setView([46.603354, 1.888334], 6);\n  }, [map]);\n  \n  return null;\n}\n\n// Fonction utilitaire pour colorer les zones\nfunction getZoneColor(zoneName) {\n  switch (zoneName) {\n    case 'Zone Nord-Ouest': return '#4791db'; \n    case 'Zone Nord-Est': return '#e57373';\n    case 'Zone Sud-Ouest': return '#ffeb3b'; \n    case 'Zone Sud-Est': return '#66bb6a';   \n    case 'Zone Centre': return '#9e9e9e';     \n    default: return '#e0e0e0';                \n  }\n}\n\n// Fonction utilitaire pour foncer une couleur hex\nfunction darkenColor(hex, percent) {\n  let num = parseInt(hex.replace('#',''),16);\n  let r = Math.floor((num >> 16) * percent);\n  let g = Math.floor(((num >> 8) & 0x00FF) * percent);\n  let b = Math.floor((num & 0x0000FF) * percent);\n  return '#' + ((r << 16) | (g << 8) | b).toString(16).padStart(6, '0');\n}\n\n// Fonction utilitaire pour normaliser les chaînes (enlever accents, apostrophes, minuscules)\nfunction normalize(str) {\n  return str\n    ? str.normalize('NFD').replace(/[\u0000-\\u036f]/g, '').replace(/’/g, \"'\").toLowerCase().trim()\n    : '';\n}\n\n// Mapping département -> région (extrait de data officielle)\n\n// Composant pour écouter le zoom et mettre à jour le state\nfunction ZoomListener({ setZoom }) {\n  useMapEvents({\n    zoomend: (e) => {\n      setZoom(e.target.getZoom());\n    },\n  });\n  return null;\n}\n\nconst MissionImplantation = ({ active = true }) => {\n  const { canCreateChurches } = usePermissions();\n  const [churches, setChurches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const mapRef = useRef(null);\n  const [zones, setZones] = useState([]);\n  const [regionsGeoJson, setRegionsGeoJson] = useState(null);\n  const [departementsGeoJson, setDepartementsGeoJson] = useState(null);\n  const [zoom, setZoom] = useState(8); // Nouveau state pour le zoom\n  const [hovered, setHovered] = useState(null);\n  const [mapInstance, setMapInstance] = useState(null); // Pour stocker l'instance de la carte\n  const containerRef = useRef(null);\n  const [ready, setReady] = useState(false);\n\n  // Coordonnées du centre de la France\n  const center = [46.603354, 1.888334];\n\n  // Coordonnées du centre de la zone Nord-Ouest\n  const zoneNordOuestCenter = [48.5, -1.7]; // Exemple : centre Bretagne/Normandie, à ajuster si besoin\n  const zoneNordOuestZoom = 7; // Zoom adapté à la zone\n\n  // Fonction pour charger les églises\n  const fetchChurches = async () => {\n    try {\n      setLoading(true);\n      const response = await apiService.churches.getAll();\n      const churchesData = response.data?.data || response.data || [];\n      // Debug des images des églises\n      churchesData.forEach(church => {\n        });\n      \n      // Filtrer les églises avec des coordonnées valides\n      const churchesWithCoords = churchesData.filter(church => \n        church.latitude && church.longitude && \n        !isNaN(parseFloat(church.latitude)) && \n        !isNaN(parseFloat(church.longitude))\n      );\n      \n      setChurches(churchesWithCoords);\n      setError(null);\n    } catch (err) {\n      const processedError = handleApiError(err, 'erreur lors du chargement des églises:');\n          ;\n      setError(processedError.message);\n      setChurches([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!active) return;\n    fetchChurches();\n  }, [active]);\n\n  useEffect(() => {\n    fetch('/zones.json').then(res => res.json()).then(setZones);\n    fetch('/regions.geojson').then(res => res.json()).then(setRegionsGeoJson);\n    fetch('/departements.geojson').then(res => res.json()).then(setDepartementsGeoJson);\n  }, []);\n\n  // Initialiser le zoom après la création de la carte\n  useEffect(() => {\n    if (mapInstance) {\n      setZoom(mapInstance.getZoom());\n    }\n  }, [mapInstance]);\n\n  // Forcer un resize du navigateur après le montage pour déclencher le recalcul de la carte\n  useEffect(() => {\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // ResizeObserver pour recalculer la taille de la carte à chaque resize du conteneur\n  useEffect(() => {\n    if (!containerRef.current || !mapInstance) return;\n    // Appel initial après un petit délai pour laisser le layout se stabiliser\n    const t1 = setTimeout(() => mapInstance.invalidateSize(), 100);\n    const t2 = setTimeout(() => mapInstance.invalidateSize(), 500);\n    // Observer le resize du conteneur\n    const observer = new window.ResizeObserver(() => {\n      mapInstance.invalidateSize();\n    });\n    observer.observe(containerRef.current);\n    return () => {\n      observer.disconnect();\n      clearTimeout(t1);\n      clearTimeout(t2);\n    };\n  }, [mapInstance]);\n\n  useEffect(() => {\n    // On attend que le layout soit prêt avant de monter la carte\n    const t = setTimeout(() => setReady(true), 100);\n    return () => clearTimeout(t);\n  }, []);\n\n  const handleCenterOnFrance = () => {\n    if (mapRef.current) {\n      mapRef.current.setView([46.603354, 1.888334], 6);\n    }\n  };\n\n  if (loading) {\n    return <Loading titre=\"Chargement de la carte...\" />;\n  }\n\n  if (error) {\n            return <SecureErrorMessage error={error} title=\"Erreur de chargement\" />;\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: 'primary.main' }}>\n          Mission et Implantation\n        </Typography>\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <Button \n            variant=\"outlined\" \n            onClick={handleCenterOnFrance}\n            sx={{ minWidth: 120 }}\n          >\n            Centrer sur la France\n          </Button>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              if (mapRef.current) {\n                mapRef.current.setView(zoneNordOuestCenter, zoneNordOuestZoom);\n              }\n            }}\n            sx={{ minWidth: 120 }}\n          >\n            Zone Nord-Ouest\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<RefreshIcon />}\n            onClick={fetchChurches}\n            disabled={loading}\n          >\n            Actualiser\n          </Button>\n        </Box>\n      </Box>\n      \n      <Box\n        ref={containerRef}\n        sx={{\n          height: '600px',\n          width: '100%',\n          minWidth: '300px',\n          minHeight: '300px',\n          mb: 3,\n          border: '2px solid #ccc',\n          borderRadius: '8px',\n          overflow: 'hidden',\n          position: 'relative',\n          boxSizing: 'border-box'\n        }}\n      >\n        {ready && (\n          <MapContainer\n            center={center}\n            zoom={8}\n            minZoom={5}\n            maxZoom={12}\n            style={{ height: '600px', width: '100%' }}\n            zoomControl={true}\n            scrollWheelZoom={true}\n            whenCreated={map => {\n              mapRef.current = map;\n              setMapInstance(map);\n            }}\n            ref={mapRef}\n          >\n            <ZoomListener setZoom={setZoom} />\n            <CenterOnFrance />\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {/* Affichage des régions si zoom <= 6 */}\n            {zoom <= 6 && regionsGeoJson && zones.length > 0 && (\n              <GeoJSON\n                data={regionsGeoJson}\n                style={feature => {\n                  const zone = zones.find(z => z.regions.includes(feature.properties.nom));\n                  const color = zone ? getZoneColor(zone.nom) : '#EEE';\n                  return {\n                    fillColor: hovered === feature.properties.nom ? darkenColor(color, 0.6) : color,\n                    weight: 2,\n                    color: '#333',\n                    fillOpacity: 0.5,\n                    cursor: 'pointer'\n                  };\n                }}\n                onEachFeature={(feature, layer) => {\n                  layer.on({\n                    mouseover: () => setHovered(feature.properties.nom),\n                    mouseout: () => setHovered(null)\n                  });\n                  const zone = zones.find(z => z.regions.includes(feature.properties.nom));\n                  layer.bindTooltip(`${feature.properties.nom} (${zone ? zone.nom : ''})`, {sticky: true});\n                }}\n              />\n            )}\n            {/* Affichage des contours des régions sous les départements */}\n            {regionsGeoJson && (\n              <GeoJSON\n                data={regionsGeoJson}\n                style={() => ({\n                  fillOpacity: 0,\n                  weight: 5,\n                  color: '#000',\n                  dashArray: '6,4',\n                  pointerEvents: 'none',\n                  zIndex: 1200\n                })}\n              />\n            )}\n            {/* Affichage des départements si zoom >= 7 */}\n            {zoom >= 7 && departementsGeoJson && zones.length > 0 && (\n              <>\n                <GeoJSON\n                  data={departementsGeoJson}\n                  style={feature => {\n                    // Trouver la région du département\n                    const region = departementToRegion[feature.properties.nom];\n                    const zone = zones.find(z => z.regions.includes(region));\n                    const color = zone ? getZoneColor(zone.nom) : '#EEE';\n                    return {\n                      fillColor: hovered === feature.properties.nom ? darkenColor(color, 0.6) : color,\n                      weight: 1,\n                      color: '#333',\n                      fillOpacity: 0.5,\n                      cursor: 'pointer',\n                    };\n                  }}\n                  onEachFeature={(feature, layer) => {\n                    layer.on({\n                      mouseover: () => setHovered(feature.properties.nom),\n                      mouseout: () => setHovered(null)\n                    });\n                    // Afficher le nom du département et sa région\n                    const region = departementToRegion[feature.properties.nom];\n                    layer.bindTooltip(`${feature.properties.nom} (${region})`, {sticky: true});\n                  }}\n                />\n                {/* Message si aucun polygone n'est visible */}\n                {departementsGeoJson.features.length === 0 && (\n                  <Typography color=\"error\">Aucun polygone de département n'est visible (features vides)</Typography>\n                )}\n              </>\n            )}\n            {/* Marqueurs de toutes les églises, affichés à tous les niveaux */}\n            {churches.length > 0 && churches.map((church) => (\n              <Marker\n                key={church.id || church._id}\n                position={[parseFloat(church.latitude), parseFloat(church.longitude)]}\n                icon={church.type === 'MISSION' ? missionIcon : churchIcon}\n              >\n                <Popup maxWidth={300}>\n                  <Box sx={{minWidth: 250, maxWidth: 300 }}>\n                    {/* Image en haut de la popup */}\n                    <Box sx={{ width: '100%', mb: 1, display: 'flex', justifyContent: 'center' }}>\n                      {church.image ? (\n                        <img\n                          src={getImageUrl(church.image)}\n                          alt={church.nom}\n                          style={{ \n                            maxWidth: '100%', \n                            maxHeight: 200, \n                            borderRadius: 8, \n                            objectFit: 'cover', \n                            border: '1px solid #ccc'\n                          }}\n                          onError={e => {\n                            e.target.onerror = null;\n                            e.target.style.display = 'none';\n                          }}\n                        />\n                      ) : (\n                        <Box \n                          sx={{ \n                            width: '100%', \n                            height: 150, \n                            bgcolor: 'grey.200', \n                            borderRadius: 2,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            border: '1px dashed #ccc'\n                          }}\n                        >\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Aucune image\n                          </Typography>\n                        </Box>\n                      )}\n                    </Box>\n                    <Typography variant=\"h6\" gutterBottom sx={{ \n                      fontWeight: 'bold', \n                      color: church.type === 'MISSION' ? '#2e7d32' : 'primary.main' \n                    }}>\n                      {church.nom}\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mb: 1 }}>\n              \n                      <Chip \n                        label={`Ville: ${church.ville || 'Non spécifiée'}`} \n                        color={church.type === 'MISSION' ? 'primary' : 'primary'} \n                        size=\"small\"\n                        sx={{ \n                          fontSize: '0.72rem',\n                          backgroundColor: church.type === 'MISSION' ? '#2e7d32' : undefined,\n                          color: church.type === 'MISSION' ? 'white' : undefined\n                        }}\n                      />\n                                              <Chip \n                          label={`Population: ${church.population?.toLocaleString() || 'Non spécifiée'}`} \n                          color={church.type === 'MISSION' ? 'secondary' : 'secondary'} \n                          size=\"small\"\n                          sx={{ \n                            fontSize: '0.72rem',\n                            backgroundColor: church.type === 'MISSION' ? '#35BB3B' : undefined,\n                            color: church.type === 'MISSION' ? 'white' : undefined\n                          }}\n                        />\n                    </Box>\n                    <Typography variant=\"body2\" paragraph sx={{ mb: 1 }}>\n                      <strong>Adresse : </strong>\n                      {church.adresse || 'Non spécifiée'}\n                    </Typography>\n                    {church.responsable && (\n                      <Typography variant=\"body2\" paragraph sx={{ mb: 1 }}>\n                        <strong>Responsable : </strong>\n                        {church.responsable.username}\n                      </Typography>\n                    )}\n                    <Typography variant=\"body2\" paragraph sx={{ mb: 1 }}>\n                      <strong>Nombre de membres : </strong>\n                      {church.nombre_membres || 'Non spécifié'}\n                    </Typography>\n                    {church.description && (\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        <strong>Description : </strong>\n                        {church.description}\n                      </Typography>\n                    )}\n                  </Box>\n                </Popup>\n              </Marker>\n            ))}\n          </MapContainer>\n        )}\n        {/* Légende des zones */}\n        <Box sx={{\n          position: 'absolute',\n          bottom: 16,\n          right: 16,\n          background: 'rgba(255,255,255,0.95)',\n          borderRadius: 2,\n          boxShadow: 3,\n          p: 2,\n          minWidth: 180,\n          zIndex: 1200\n        }}>\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1 }}>Légende des zones</Typography>\n          {[\n            { nom: 'Zone Nord-Ouest', color: getZoneColor('Zone Nord-Ouest') },\n            { nom: 'Zone Nord-Est', color: getZoneColor('Zone Nord-Est') },\n            { nom: 'Zone Sud-Ouest', color: getZoneColor('Zone Sud-Ouest') },\n            { nom: 'Zone Sud-Est', color: getZoneColor('Zone Sud-Est') },\n            { nom: 'Zone Centre', color: getZoneColor('Zone Centre') }\n          ].map(zone => (\n            <Box key={zone.nom} sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n              <Box sx={{ width: 20, height: 20, background: zone.color, borderRadius: '4px', border: '1px solid #888', mr: 1 }} />\n              <Typography variant=\"body2\">{zone.nom}</Typography>\n            </Box>\n          ))}\n          <Divider sx={{ my: 1 }} />\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1 }}>Marqueurs</Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n            <img\n              src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-violet.png\"\n              alt=\"Église\"\n              style={{ width: 20, height: 32, marginRight: 8 }}\n            />\n            <Typography variant=\"body2\">Église</Typography>\n          </Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n            <img\n              src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\"\n              alt=\"Mission\"\n              style={{ width: 20, height: 32, marginRight: 8 }}\n            />\n            <Typography variant=\"body2\">Mission</Typography>\n          </Box>\n        </Box>\n      </Box>\n\n      {churches.length === 0 && !loading && (\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            Aucune église avec coordonnées géographiques trouvée\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Ajoutez des coordonnées (latitude/longitude) aux églises pour les afficher sur la carte\n          </Typography>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default MissionImplantation; ","// Formater une date pour l'affichage\nexport const formatDate = (dateString) => {\n  if (!dateString) return '';\n  \n  const date = new Date(dateString);\n  \n  // Vérifier si la date est valide\n  if (isNaN(date.getTime())) return '';\n  \n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  \n  return date.toLocaleDateString('fr-FR', options);\n};\n\n// Formater une date courte\nexport const formatDateShort = (dateString) => {\n  if (!dateString) return '';\n  \n  const date = new Date(dateString);\n  \n  if (isNaN(date.getTime())) return '';\n  \n  const options = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  };\n  \n  return date.toLocaleDateString('fr-FR', options);\n};\n\n// Formater une date relative (il y a X temps)\nexport const formatDateRelative = (dateString) => {\n  if (!dateString) return '';\n  \n  const date = new Date(dateString);\n  const now = new Date();\n  \n  if (isNaN(date.getTime())) return '';\n  \n  const diffInSeconds = Math.floor((now - date) / 1000);\n  \n  if (diffInSeconds < 60) {\n    return 'Il y a moins d\\'une minute';\n  }\n  \n  const diffInMinutes = Math.floor(diffInSeconds / 60);\n  if (diffInMinutes < 60) {\n    return `Il y a ${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''}`;\n  }\n  \n  const diffInHours = Math.floor(diffInMinutes / 60);\n  if (diffInHours < 24) {\n    return `Il y a ${diffInHours} heure${diffInHours > 1 ? 's' : ''}`;\n  }\n  \n  const diffInDays = Math.floor(diffInHours / 24);\n  if (diffInDays < 7) {\n    return `Il y a ${diffInDays} jour${diffInDays > 1 ? 's' : ''}`;\n  }\n  \n  const diffInWeeks = Math.floor(diffInDays / 7);\n  if (diffInWeeks < 4) {\n    return `Il y a ${diffInWeeks} semaine${diffInWeeks > 1 ? 's' : ''}`;\n  }\n  \n  const diffInMonths = Math.floor(diffInDays / 30);\n  if (diffInMonths < 12) {\n    return `Il y a ${diffInMonths} mois`;\n  }\n  \n  const diffInYears = Math.floor(diffInDays / 365);\n  return `Il y a ${diffInYears} an${diffInYears > 1 ? 's' : ''}`;\n};\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  InputAdornment,\n  Pagination,\n  CircularProgress,\n  Alert,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Tooltip,\n  Snackbar,\n  FormControlLabel,\n  Checkbox\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  FilterList as FilterListIcon,\n  Visibility as VisibilityIcon,\n  Download as DownloadIcon,\n  Delete as DeleteIcon,\n  Refresh as RefreshIcon,\n  Note as NoteIcon,\n  Group as GroupIcon,\n  AttachFile as AttachFileIcon,\n  StickyNote2 as StickyNote2Icon\n} from '@mui/icons-material';\nimport { useSelectedChurch } from '../../../hooks/useSelectedChurch';\nimport { useNotification } from '../../../hooks/useNotification';\nimport { formatDate } from '../../../utils/dateFormatter';\nimport { apiService } from '../../../services/apiService';\nimport DeleteConfirmDialog from '../../DeleteConfirmDialog';\n\nconst Testimonies = () => {\n  console.log('Testimonies component rendering...');\n  \n  const { selectedChurch } = useSelectedChurch();\n  const {\n    notification,\n    showSuccess,\n    showError,\n    hideNotification\n  } = useNotification();\n  const [testimonies, setTestimonies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [showOnlyUnread, setShowOnlyUnread] = useState(false);\n  const [selectedTestimony, setSelectedTestimony] = useState(null);\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [testimonyToDelete, setTestimonyToDelete] = useState(null);\n  const [noteDialogOpen, setNoteDialogOpen] = useState(false);\n  const [testimonyForNote, setTestimonyForNote] = useState(null);\n  const [noteText, setNoteText] = useState('');\n\n  // Catégories de témoignages (correspondant au schéma Prisma)\n  const categories = [\n    { value: '', label: 'Toutes les catégories' },\n    { value: 'INTIMACY', label: 'Intimité avec Dieu' },\n    { value: 'LEADERSHIP', label: 'Leadership' },\n    { value: 'HEALING', label: 'Guérison/Santé' },\n    { value: 'PROFESSIONAL', label: 'Professionnel' },\n    { value: 'BUSINESS', label: 'Entreprises/Affaires' },\n    { value: 'FINANCES', label: 'Finances' },\n    { value: 'DELIVERANCE', label: 'Délivrance' },\n    { value: 'FAMILY', label: 'Famille' }\n  ];\n\n  // Charger les témoignages\n  const loadTestimonies = async () => {\n    console.log('loadTestimonies called, selectedChurch:', selectedChurch);\n    if (!selectedChurch?.id) return;\n    \n    setLoading(true);\n    \n    try {\n      const params = {\n        page: page.toString(),\n        limit: '10',\n        churchId: selectedChurch.id\n      };\n      \n      if (searchTerm) params.search = searchTerm;\n      if (selectedCategory) params.category = selectedCategory;\n      if (showOnlyUnread) params.isRead = 'false';\n      \n      const response = await apiService.testimonies.getAll(params);\n      const data = response.data;\n      \n      if (data.success) {\n        setTestimonies(data.data.testimonies || []);\n        setTotalPages(data.data.totalPages || 1);\n      } else {\n        showError(data.message || 'Erreur lors du chargement des témoignages');\n      }\n    } catch (err) {\n      showError('Erreur de connexion lors du chargement des témoignages');\n      console.error('Erreur:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Charger les témoignages au montage et quand les filtres changent\n  useEffect(() => {\n    loadTestimonies();\n  }, [selectedChurch, page, searchTerm, selectedCategory, showOnlyUnread]);\n\n  // Gestion de la pagination\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  // Gestion de la recherche\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n    setPage(1); // Reset à la première page\n  };\n\n  // Gestion du filtre par catégorie\n  const handleCategoryChange = (event) => {\n    setSelectedCategory(event.target.value);\n    setPage(1); // Reset à la première page\n  };\n\n  // Gestion du filtre non lus\n  const handleUnreadFilterChange = (event) => {\n    setShowOnlyUnread(event.target.checked);\n    setPage(1); // Reset à la première page\n  };\n\n  // Voir un témoignage\n  const handleViewTestimony = async (testimony) => {\n    setSelectedTestimony(testimony);\n    setViewDialogOpen(true);\n    \n    // Marquer automatiquement comme lu si ce n'est pas déjà fait\n    if (!testimony.isRead) {\n      try {\n        await apiService.testimonies.markAsRead(testimony.id);\n        // Recharger la liste pour mettre à jour l'affichage\n        loadTestimonies();\n      } catch (err) {\n        console.error('Erreur lors du marquage automatique comme lu:', err);\n        // Ne pas afficher d'erreur à l'utilisateur pour cette action silencieuse\n      }\n    }\n  };\n\n  // Supprimer un témoignage\n  const handleOpenDeleteDialog = (testimony) => {\n    setTestimonyToDelete(testimony);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setTestimonyToDelete(null);\n  };\n\n  const handleConfirmDeleteTestimony = async () => {\n    if (!testimonyToDelete) return;\n\n    try {\n      const response = await apiService.testimonies.delete(testimonyToDelete.id);\n      const data = response.data;\n\n      if (data.success) {\n        showSuccess('Témoignage supprimé avec succès');\n        loadTestimonies(); // Recharger la liste\n      } else {\n        showError(data.message || 'Erreur lors de la suppression');\n      }\n    } catch (err) {\n      showError('Erreur de connexion lors de la suppression');\n      console.error('Erreur:', err);\n    } finally {\n      handleCloseDeleteDialog();\n    }\n  };\n\n  // Actualiser la liste\n  const handleRefresh = () => {\n    loadTestimonies();\n  };\n\n\n  // Ouvrir le dialogue de note\n  const handleOpenNoteDialog = (testimony) => {\n    setTestimonyForNote(testimony);\n    setNoteText(testimony.note || '');\n    setNoteDialogOpen(true);\n  };\n\n  // Fermer le dialogue de note\n  const handleCloseNoteDialog = () => {\n    setNoteDialogOpen(false);\n    setTestimonyForNote(null);\n    setNoteText('');\n  };\n\n  // Sauvegarder la note\n  const handleSaveNote = async () => {\n    if (!testimonyForNote) return;\n\n    try {\n      const response = await apiService.testimonies.addNote(testimonyForNote.id, noteText);\n      const data = response.data;\n\n      if (data.success) {\n        showSuccess(data.message);\n        loadTestimonies(); // Recharger la liste\n        handleCloseNoteDialog();\n      } else {\n        showError(data.message || 'Erreur lors de l\\'ajout de la note');\n      }\n    } catch (err) {\n      showError('Erreur de connexion lors de l\\'ajout de la note');\n      console.error('Erreur:', err);\n    }\n  };\n\n  // Formater le nom d'auteur (robuste)\n  const formatAuthorName = (testimony) => {\n    if (!testimony) return '—';\n    if (testimony.isAnonymous) return 'Anonyme';\n    return `${testimony.firstName ?? ''} ${testimony.lastName ?? ''}`.trim() || '—';\n  };\n\n  // Formater la catégorie (robuste)\n  const formatCategory = (category) => {\n    if (!category) return '—';\n    const categoryObj = categories.find(cat => cat.value === category);\n    return categoryObj ? categoryObj.label : String(category);\n  };\n\n  if (!selectedChurch) {\n    return (\n      <Alert severity=\"warning\">\n        Veuillez sélectionner une église pour voir les témoignages.\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      {/* En-tête avec titre et bouton d'actualisation */}\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Gestion des témoignages\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          startIcon={<RefreshIcon />}\n          onClick={handleRefresh}\n          disabled={loading}\n        >\n          Actualiser\n        </Button>\n      </Box>\n\n      {/* Filtres */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={12} md={4} sx={{ width: '30%'}}>\n              <TextField\n                fullWidth\n                placeholder=\"Rechercher dans les témoignages...\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4} sx={{ width: '30%'}}>\n              <FormControl fullWidth>\n                <InputLabel>Catégorie</InputLabel>\n                <Select\n                  value={selectedCategory}\n                  onChange={handleCategoryChange}\n                  label=\"Catégorie\"\n                >\n                  {categories.map((category) => (\n                    <MenuItem key={category.value} value={category.value}>\n                      {category.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={4} sx={{ width: '30%'}}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={showOnlyUnread}\n                    onChange={handleUnreadFilterChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Non lus uniquement\"\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Box display=\"flex\" justifyContent=\"center\">\n                <Chip\n                  icon={<FilterListIcon />}\n                  label={`${testimonies.length} témoignage(s)`}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      {/* Liste des témoignages */}\n      {loading ? (\n        <Box display=\"flex\" justifyContent=\"center\" py={4}>\n          <CircularProgress />\n        </Box>\n      ) : testimonies.length === 0 ? (\n        <Alert severity=\"info\">\n          Aucun témoignage trouvé pour cette église.\n        </Alert>\n      ) : (\n        <>\n          <Grid container spacing={2}>\n            {testimonies.map((testimony) => (\n              <Grid item xs={12} md={6} lg={4} key={testimony.id} sx={{ width: '100%'}}>\n                <Card sx={{ \n                  height: '100%', \n                  display: 'flex', \n                  flexDirection: 'column',\n                  opacity: testimony.isRead ? 0.7 : 1,\n                  border: testimony.isRead ? '1px solid rgb(184, 184, 185)' : '1px solid rgba(119, 64, 201, 0.77)',\n                  boxShadow: testimony.isRead ? 'none' : '0 2px 8px rgba(106, 57, 182, 0.15)'\n                }}>\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" mb={2}>\n                      <Box display=\"flex\" gap={1} alignItems=\"center\">\n                        <Chip\n                          label={formatCategory(testimony.category)}\n                          color=\"primary\"\n                          size=\"small\"\n                        />\n                      </Box>\n                      <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: '0.75rem', fontWeight: 500 }}>\n                        {formatDate(testimony.createdAt)}\n                      </Typography>\n                    </Box>\n                    \n                    <Typography variant=\"h6\" gutterBottom>\n                      {formatAuthorName(testimony)}\n                    </Typography>\n                    \n                    <Typography \n                      variant=\"body2\" \n                      color=\"text.primary\" \n                      sx={{ \n                        display: '-webkit-box',\n                        WebkitLineClamp: 3,\n                        WebkitBoxOrient: 'vertical',\n                        overflow: 'hidden',\n                        mb: 2\n                      }}\n                    >\n                      {testimony.content}\n                    </Typography>\n                    \n                    {testimony.note && (\n                      <Box sx={{ \n                        bgcolor: 'rgba(106, 57, 182, 0.08)', \n                        p: 2, \n                        borderRadius: 2, \n                        mb: 2,\n                        border: '1px solid',\n                        borderColor: 'rgba(106, 57, 182, 0.2)',\n                        position: 'relative'\n                      }}>\n                        <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1}>\n                          <Box sx={{ \n                            width: 20, \n                            height: 20, \n                            borderRadius: '50%', \n                            bgcolor: 'primary.main', \n                            display: 'flex', \n                            alignItems: 'center', \n                            justifyContent: 'center' \n                          }}>\n                        <StickyNote2Icon sx={{ color: 'white', fontSize: '16px' }} />\n                          </Box>\n                          <Typography variant=\"subtitle2\" color=\"primary.dark\" sx={{ fontWeight: 600 }}>\n                            Note\n                          </Typography>\n                        </Box>\n                        <Typography variant=\"body2\" color=\"text.primary\" sx={{ \n                          lineHeight: 1.6,\n                          fontStyle: 'italic',\n                          pl: 3\n                        }}>\n                          {testimony.note}\n                        </Typography>\n                      </Box>\n                    )}\n                    \n                    {testimony.network?.nom && (\n                      <Chip\n                        icon={<GroupIcon />}\n                        label={`Réseau : ${testimony.network.nom}`}\n                        size=\"small\"\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        sx={{ mb: 1, fontSize: '0.75rem' }}\n                      />\n                    )}\n                    \n                    {testimony.illustrations?.length > 0 && (\n                      <Chip\n                        icon={<AttachFileIcon />}\n                        label={`${testimony.illustrations.length} fichier(s)`}\n                        size=\"small\"\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        sx={{ mb: 1, fontSize: '0.75rem' }}\n                      />\n                    )}\n                  </CardContent>\n                  \n                  <Box sx={{ p: 2, pt: 0 }}>\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                      <Box display=\"flex\" gap={1}>\n                        <Tooltip title=\"Voir le témoignage\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleViewTestimony(testimony)}\n                            sx={{\n                              color: testimony.isRead ? '#666' : '#6a39b6',\n                              '&:hover': {\n                                backgroundColor: testimony.isRead ? 'rgba(102, 102, 102, 0.1)' : 'rgba(106, 57, 182, 0.1)'\n                              }\n                            }}\n                          >\n                            <VisibilityIcon />\n                          </IconButton>\n                        </Tooltip>\n                        \n                        \n                        <Tooltip title={testimony.note ? \"Modifier la note\" : \"Ajouter une note\"}>\n                          <IconButton\n                            size=\"small\"\n                            color={testimony.note ? \"primary\" : \"default\"}\n                            onClick={() => handleOpenNoteDialog(testimony)}\n                          >\n                            <NoteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </Box>\n                      \n                      <Tooltip title=\"Supprimer\">\n                        <IconButton\n                          size=\"small\"\n                          color=\"error\"\n                          onClick={() => handleOpenDeleteDialog(testimony)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </Box>\n                  </Box>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={4}>\n              <Pagination\n                count={totalPages}\n                page={page}\n                onChange={handlePageChange}\n                color=\"primary\"\n                size=\"large\"\n              />\n            </Box>\n          )}\n        </>\n      )}\n\n      {/* Dialog pour voir un témoignage */}\n      <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          Témoignage de {selectedTestimony && formatAuthorName(selectedTestimony)}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2 }}>\n            {selectedTestimony && (\n              <Box>\n                <Box display=\"flex\" gap={1} mb={2}>\n                  <Chip\n                    label={formatCategory(selectedTestimony.category)}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Typography variant=\"body1\" paragraph>\n                  {selectedTestimony.content}\n                </Typography>\n                \n                {selectedTestimony.network?.nom && (\n                  <Chip\n                    icon={<GroupIcon />}\n                    label={`Réseau : ${selectedTestimony.network.nom}`}\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    sx={{ mb: 2, fontSize: '0.75rem' }}\n                  />\n                )}\n                \n                {selectedTestimony.illustrations?.length > 0 && (\n                  <Box sx={{ mb: 2 }}>\n                    <Chip\n                      icon={<AttachFileIcon />}\n                      label={`${selectedTestimony.illustrations.length} fichier(s) joint(s)`}\n                      size=\"small\"\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      sx={{ mb: 1, fontSize: '0.75rem' }}\n                    />\n                    <Box sx={{ mt: 1 }}>\n                      {selectedTestimony.illustrations.map((file, index) => (\n                        <Chip\n                          key={index}\n                          label={file.originalName}\n                          icon={<DownloadIcon />}\n                          clickable\n                          onClick={() => window.open(`http://localhost:5001/uploads/testimonies/${file.fileName}`, '_blank')}\n                          sx={{ mr: 1, mb: 1 }}\n                        />\n                      ))}\n                    </Box>\n                  </Box>\n                )}\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setViewDialogOpen(false)}>\n            Fermer\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Dialog de confirmation suppression */}\n      <DeleteConfirmDialog\n        open={deleteDialogOpen}\n        title=\"Supprimer le témoignage\"\n        content={testimonyToDelete ? `Êtes-vous sûr de vouloir supprimer le témoignage \"${testimonyToDelete.title || 'sans titre'}\" ?` : \"Êtes-vous sûr de vouloir supprimer ce témoignage ?\"}\n        onClose={handleCloseDeleteDialog}\n        onConfirm={handleConfirmDeleteTestimony}\n      />\n\n      {/* Dialog pour les notes */}\n      <Dialog open={noteDialogOpen} onClose={handleCloseNoteDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {testimonyForNote?.note ? 'Modifier la note' : 'Ajouter une note'}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2 }}>\n            {testimonyForNote && (\n              <Typography variant=\"body2\" color=\"text.primary\" gutterBottom>\n                Témoignage de {formatAuthorName(testimonyForNote)} - {formatCategory(testimonyForNote.category)}\n              </Typography>\n            )}\n            <TextField\n              fullWidth\n              multiline\n              rows={6}\n              value={noteText}\n              onChange={(e) => setNoteText(e.target.value)}\n              placeholder=\"Ajoutez votre note sur ce témoignage...\"\n              variant=\"outlined\"\n              sx={{ mt: 2 }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseNoteDialog}>\n            Annuler\n          </Button>\n          {testimonyForNote?.note && (\n            <Button \n              onClick={async () => {\n                setNoteText('');\n                try {\n                  const response = await apiService.testimonies.addNote(testimonyForNote.id, '');\n                  const data = response.data;\n                  if (data.success) {\n                    showSuccess(data.message);\n                    loadTestimonies();\n                    handleCloseNoteDialog();\n                  } else {\n                    showError(data.message || 'Erreur lors de la suppression de la note');\n                  }\n                } catch (err) {\n                  showError('Erreur de connexion lors de la suppression de la note');\n                  console.error('Erreur:', err);\n                }\n              }}\n              color=\"error\"\n            >\n              Supprimer la note\n            </Button>\n          )}\n          <Button \n            onClick={handleSaveNote} \n            variant=\"contained\"\n            disabled={!noteText.trim()}\n          >\n            {testimonyForNote?.note ? 'Modifier' : 'Ajouter'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar feedback */}\n      <Snackbar\n        open={notification.open}\n        autoHideDuration={4000}\n        onClose={hideNotification}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={hideNotification} severity={notification.severity} sx={{ width: '100%' }}>\n          {notification.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default Testimonies;\n","import React, { useMemo, useEffect } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport i18nService from '../../services/i18nService';\nimport Stats from './sections/Stats';\nimport StatsReseaux from './sections/StatsReseaux';\nimport StatsCultes from './sections/StatsCultes';\nimport StatsPrevisionnel from './sections/StatsPrevisionnel';\nimport StatsAssistance from './sections/StatsAssistance';\nimport ChaineImpact from './sections/ChaineImpact';\nimport Networks from './sections/Networks';\nimport NetworksRecap from './sections/NetworksRecap';\nimport Carousel from './sections/Carousel';\nimport Membres from './sections/Membres';\nimport UsersRetired from './sections/UsersRetired';\nimport Churches from './sections/Churches';\nimport Departments from './sections/Departments';\nimport StatsMembres from './sections/StatsMembres';\nimport MissionImplantation from './sections/MissionImplantation';\nimport Testimonies from './sections/Testimonies';\n\nconst DashboardContent = React.memo(({ activeSection, selectedChurch, user, permissions, refreshKey }) => {\n  // Initialiser le service i18n\n  useEffect(() => {\n    i18nService.init();\n  }, []);\n\n  // Mapping des sections avec leurs composants\n  const sectionComponents = useMemo(() => ({\n    stats: Stats,\n    statsReseaux: StatsReseaux,\n    statsCultes: StatsCultes,\n    statsMembres: StatsMembres,\n    statsPrevisionnel: StatsPrevisionnel,\n    statsAssistance: StatsAssistance,\n    chaineImpact: ChaineImpact,\n    networks: Networks,\n    networksRecap: NetworksRecap,\n    carousel: Carousel,\n    users: Membres,\n    usersRetired: UsersRetired,\n    churches: Churches,\n    departments: Departments,\n    missionImplantation: MissionImplantation,\n    testimonies: Testimonies\n  }), []);\n\n  // Récupérer le composant actif\n  const ActiveComponent = sectionComponents[activeSection];\n\n  // Rendu conditionnel optimisé\n  const renderSection = useMemo(() => {\n    if (!ActiveComponent) {\n      return (\n        <Box sx={{ p: 3, textAlign: 'center' }}>\n          <Typography variant=\"h6\" color=\"error\">\n            {i18nService.t('dashboard.menu.sectionNotFound')}\n          </Typography>\n        </Box>\n      );\n    }\n\n    // Passer selectedChurch et user aux sections qui en ont besoin\n    const sectionProps = {\n      active: activeSection === 'missionImplantation',\n      selectedChurch,\n      user,\n      refreshKey\n    };\n\n    return (\n      <Box sx={{ \n        display: 'block',\n        width: '100%',\n        overflow: 'hidden' // Empêcher le scroll horizontal au niveau du conteneur principal\n      }}>\n        <ActiveComponent {...sectionProps} />\n      </Box>\n    );\n  }, [ActiveComponent, activeSection, selectedChurch, user]);\n\n  return renderSection;\n});\n\nDashboardContent.displayName = 'DashboardContent';\n\nexport default DashboardContent; ","import {\n  People as PeopleIcon,\n  Church as ChurchIcon,\n  Settings as SettingsIcon,\n  BarChart as BarChartIcon,\n  GroupWork as GroupWorkIcon,\n  Event as EventIcon,\n  AccountTree as AccountTreeIcon,\n  PeopleAlt as PeopleAltIcon,\n  BusinessCenter as BusinessCenterIcon,\n  Collections as CollectionsIcon,\n  InsertChart as InsertChartIcon,\n  Map as MapIcon,\n  Assessment as AssessmentIcon,\n  RecordVoiceOver as RecordVoiceOverIcon,\n  List as ListIcon\n} from '@mui/icons-material';\nimport i18nService from '../services/i18nService';\n\nexport const menuItems = [\n  {\n    text: 'Statistiques',\n    icon: <InsertChartIcon />,\n    children: [\n      { id: 'stats', text: i18nService.t('menu.overview'), icon: <BarChartIcon /> },\n      { id: 'statsReseaux', text: i18nService.t('menu.networks'), icon: <GroupWorkIcon /> },\n      { id: 'statsCultes', text: i18nService.t('menu.services'), icon: <EventIcon /> },\n      { id: 'statsMembres', text: i18nService.t('menu.members'), icon: <PeopleIcon /> },\n      { id: 'statsPrevisionnel', text: i18nService.t('menu.forecasts'), icon: <AssessmentIcon /> },\n      { id: 'statsAssistance', text: i18nService.t('menu.attendance'), icon: <PeopleIcon /> },\n    ]\n  },\n  {\n    text: 'Réseaux',\n    icon: <AccountTreeIcon />,\n    children: [\n      { id: 'networks', text: 'Gestion des réseaux', icon: <AccountTreeIcon /> },\n      { id: 'networksRecap', text: 'Récapitulatif des effectifs', icon: <PeopleAltIcon /> },\n      { id: 'chaineImpact', text: \"Chaine d'impact\", icon: <AccountTreeIcon /> },\n    ]\n  },\n  {\n    text: 'Membres',\n    icon: <PeopleIcon />,\n    children: [\n      { id: 'users', text: 'Gestion des membres', icon: <PeopleIcon /> },\n      { id: 'usersRetired', text: 'Membres retirés', icon: <PeopleAltIcon /> },\n    ]\n  },\n  {\n    text: 'Mission et Implantation',\n    icon: <MapIcon />,\n    children: [\n      { id: 'missionImplantation', text: 'Carte interactive', icon: <MapIcon /> },\n    ]\n  },\n  {\n    text: 'Témoignages',\n    icon: <RecordVoiceOverIcon />,\n    children: [\n      { id: 'testimonies', text: 'Gestion des témoignages', icon: <ListIcon /> },\n    ]\n  },\n  {\n    text: 'Configuration',\n    icon: <SettingsIcon />,\n    children: [\n      { id: 'churches', text: 'Églises', icon: <ChurchIcon /> },\n      { id: 'departments', text: 'Départements', icon: <BusinessCenterIcon /> },\n      { id: 'carousel', text: 'Carousel', icon: <CollectionsIcon /> }\n    ]\n  }\n];\n","import React, { useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Divider,\n  Collapse,\n  styled\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport {\n  Menu as MenuIcon,\n  People as PeopleIcon,\n  Church as ChurchIcon,\n  ExitToApp as LogoutIcon,\n  Settings as SettingsIcon,\n  BarChart as BarChartIcon,\n  GroupWork as GroupWorkIcon,\n  Event as EventIcon,\n  AccountTree as AccountTreeIcon,\n  PeopleAlt as PeopleAltIcon,\n  BusinessCenter as BusinessCenterIcon,\n  Collections as CollectionsIcon,\n  InsertChart as InsertChartIcon,\n  ReplyAllOutlined as ReplyAllOutlinedIcon,\n  Map as MapIcon\n} from '@mui/icons-material';\nimport { usePermissions } from '../../hooks/usePermissions';\nimport { menuItems } from '../../constants/menuItems';\nimport i18nService from '../../services/i18nService';\nimport { useLanguageThemeSync } from '../../hooks/useLanguageThemeSync';\nimport { useNavigate } from 'react-router-dom';\n\nconst drawerWidth = 320;\n\nconst StyledDrawer = styled(Drawer)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  overflowX: 'hidden',\n  '& .MuiDrawer-paper': {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    overflowX: 'hidden',\n  },\n}));\n\nconst StyledListItem = styled(({ active, ...rest }) => <ListItem {...rest} />)(\n  ({ theme, active }) => ({\n    margin: '8px 16px',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: active ? 'rgba(255, 255, 255, 0.2)' : 'transparent',\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    },\n    '& .MuiListItemIcon-root': {\n      color: theme.palette.primary.contrastText,\n    },\n  })\n);\n\nconst DashboardMenu = ({\n  activeSection,\n  expandedItems,\n  onSectionChange,\n  onToggleExpanded,\n  onLogout,\n  mobileOpen,\n  setMobileOpen,\n  selectedChurch,\n  setSelectedChurch,\n  showChurchFilter,\n  user,\n  permissions\n}) => {\n  // Initialiser le service i18n et synchroniser avec les changements de langue\n  useEffect(() => {\n    i18nService.init();\n  }, []);\n\n  const lastUpdate = useLanguageThemeSync();\n\n  const {\n    isManager,\n    canAccessConfig\n  } = usePermissions();\n  \n  const navigate = useNavigate();\n\n  const handleMenuClick = (item) => {\n    if (item.children) {\n      onToggleExpanded(item.text);\n    } else {\n      onSectionChange(item.id);\n    }\n  };\n  const handleSubMenuClick = (subItem) => {\n    onSectionChange(subItem.id);\n  };\n\n  // Fonction pour traduire les éléments du menu\n  const translateMenuItem = (item) => {\n    const translations = {\n      'Statistiques': i18nService.t('dashboard.menu.statistics'),\n      'Réseaux': i18nService.t('dashboard.menu.networks'),\n      'Membres': i18nService.t('dashboard.menu.members'),\n      'Mission et Implantation': i18nService.t('dashboard.menu.mission'),\n      'Configuration': i18nService.t('dashboard.menu.configuration'),\n      \"Vue d'ensemble\": i18nService.t('dashboard.menu.overview'),\n      'Cultes': i18nService.t('dashboard.menu.services'),\n      'Gestion des réseaux': i18nService.t('dashboard.menu.networkManagement'),\n      'Récapitulatif des effectifs': i18nService.t('dashboard.menu.networkRecap'),\n      'Gestion des membres': i18nService.t('dashboard.menu.memberManagement'),\n      'Membres retirés': i18nService.t('dashboard.menu.retiredMembers'),\n      'Carte interactive': i18nService.t('dashboard.menu.interactiveMap'),\n      'Églises': i18nService.t('dashboard.menu.churches'),\n      'Départements': i18nService.t('dashboard.menu.departments'),\n      'Carousel': i18nService.t('dashboard.menu.carousel')\n    };\n\n    return {\n      ...item,\n      text: translations[item.text] || item.text,\n      children: item.children ? item.children.map(child => ({\n        ...child,\n        text: translations[child.text] || child.text\n      })) : undefined\n    };\n  };\n\n  // Filtrer et traduire les éléments du menu selon les permissions\n  const filteredMenuItems = menuItems\n    .filter(item => {\n      // Masquer la section Configuration pour le manager\n      if (item.text === 'Configuration' && !canAccessConfig) {\n        return false;\n      }\n      return true;\n    })\n    .map(translateMenuItem);\n\n  const drawer = (\n    <div>\n      <Toolbar>\n        <Typography\n          variant=\"h4\"\n          noWrap\n          sx={{ color: 'white', fontWeight: 'bold', letterSpacing: 2, py: 2, cursor: 'pointer' }}\n          onClick={() => window.location.reload()}\n        >\n          {isManager ? i18nService.t('dashboard.menu.management') : i18nService.t('dashboard.menu.administration')}\n        </Typography>\n      </Toolbar>\n      <Divider sx={{ bgcolor: 'rgba(255,255,255,0.12)' }} />\n      <List>\n        {filteredMenuItems.map((item) => (\n          <React.Fragment key={item.text || item.id}>\n            <StyledListItem\n              active={activeSection === item.id ? 1 : 0}\n              onClick={() => handleMenuClick(item)}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText\n                primary={item.text}\n                sx={{\n                  '& .MuiListItemText-primary': {\n                    color: 'white',\n                    fontWeight: 'bold'\n                  }\n                }}\n              />\n              {item.children && (\n                <ExpandMoreIcon\n                  sx={{\n                    color: 'white',\n                    marginLeft: 'auto',\n                    marginRight: '9px',\n                    transition: 'transform 0.2s',\n                    transform: expandedItems.includes(item.text) ? 'rotate(0deg)' : 'rotate(-90deg)'\n                  }}\n                />\n              )}\n            </StyledListItem>\n            {item.children && (\n              <Collapse in={expandedItems.includes(item.text)} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  {item.children.map((sub) => (\n                    <StyledListItem\n                      key={sub.id}\n                      sx={{ pl: 4, background: activeSection === sub.id ? 'rgba(255,255,255,0.15)' : 'transparent' }}\n                      active={activeSection === sub.id ? 1 : 0}\n                      onClick={() => handleSubMenuClick(sub)}\n                    >\n                      <ListItemIcon>{sub.icon}</ListItemIcon>\n                      <ListItemText\n                        primary={sub.text}\n                        sx={{ '& .MuiListItemText-primary': { color: 'white' } }}\n                      />\n                    </StyledListItem>\n                  ))}\n                </List>\n              </Collapse>\n            )}\n          </React.Fragment>\n        ))}\n        <StyledListItem onClick={() => navigate('/')}>\n          <ListItemIcon>\n            <ReplyAllOutlinedIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary={i18nService.t('dashboard.menu.backToSite')}\n            sx={{\n              '& .MuiListItemText-primary': {\n                color: 'white',\n                fontWeight: 'bold'\n              }\n            }}\n          />\n        </StyledListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <Box component=\"nav\" sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}>\n      <StyledDrawer\n        variant=\"temporary\"\n        open={mobileOpen}\n        onClose={() => setMobileOpen(false)}\n        ModalProps={{ keepMounted: true }}\n        sx={{ display: { xs: 'block', sm: 'none' } }}\n      >\n        {drawer}\n      </StyledDrawer>\n      <StyledDrawer\n        variant=\"permanent\"\n        sx={{ display: { xs: 'none', sm: 'block' } }}\n        open\n      >\n        {drawer}\n      </StyledDrawer>\n    </Box>\n  );\n};\n\nexport default DashboardMenu; ","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { \n  Box, \n  Typography, \n  AppBar, \n  Toolbar, \n  IconButton, \n  FormControl, \n  Select, \n  MenuItem,\n  Chip,\n  Badge\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MessageIcon from '@mui/icons-material/Message';\nimport DashboardContent from '../components/dashboard/DashboardContent';\nimport DashboardMenu from '../components/dashboard/DashboardMenu';\nimport { useChurches } from '../hooks/useApi';\nimport { usePermissions } from '../hooks/usePermissions';\nimport { useSelectedChurch } from '../hooks/useSelectedChurch';\nimport { formatQualificationWithFallback } from '../utils/qualificationFormatter';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../features/auth/authSlice';\nimport { menuItems } from '../constants/menuItems';\nimport i18nService from '../services/i18nService';\nimport { formatRole } from '../utils/roleFormatter';\nimport MessageModal from '../components/MessageModal';\nimport messageService from '../services/messageService';\nimport UserMenu from '../components/sections/UserMenu';\nimport AccessControl from '../components/AccessControl';\n\n// Constants\nconst drawerWidth = 320;\n\n// Styled Components\nconst MainContent = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  marginTop: 64,\n  backgroundColor: '#f5f5f5',\n  minHeight: '100vh',\n  width: '100%',\n  overflow: 'hidden', // Empêcher le scroll horizontal\n  overflowY: 'hidden', // Empêcher explicitement le scroll vertical\n  boxSizing: 'border-box', // Inclure padding dans la largeur\n}));\n\nconst Dashboard = () => {\n  const { user } = useSelector((state) => state.auth);\n  const permissions = usePermissions();\n  const { churches } = useChurches();\n  const { selectedChurch, changeSelectedChurch } = useSelectedChurch();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  \n  // État pour le menu du dashboard\n  const [activeSection, setActiveSection] = useState('stats');\n  const [expandedItems, setExpandedItems] = useState([i18nService.t('dashboard.expandedItems')]);\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // États pour la messagerie\n  const [messageModalOpen, setMessageModalOpen] = useState(false);\n  const [messageStats, setMessageStats] = useState({ unread_count: 0 });\n  const [messageStatsLoading, setMessageStatsLoading] = useState(false);\n\n  // État pour le menu utilisateur\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  // Gestionnaires pour le menu\n  const handleSectionChange = (sectionId) => {\n    setActiveSection(sectionId);\n    window.location.hash = sectionId;\n    \n    // Trouver le menu parent du sous-menu cliqué\n    const parentMenu = menuItems.find(item => \n      item.children && item.children.some(child => child.id === sectionId)\n    );\n    \n    // Si c'est un sous-menu, ouvrir son menu parent et fermer tous les autres\n    if (parentMenu) {\n      // Utiliser la même logique de traduction que dans DashboardMenu\n      const translations = {\n        'Statistiques': i18nService.t('dashboard.menu.statistics'),\n        'Réseaux': i18nService.t('dashboard.menu.networks'),\n        'Membres': i18nService.t('dashboard.menu.members'),\n        'Mission et Implantation': i18nService.t('dashboard.menu.mission'),\n        'Configuration': i18nService.t('dashboard.menu.configuration'),\n      };\n      const translatedParentText = translations[parentMenu.text] || parentMenu.text;\n      setExpandedItems(prev => {\n        // Garder le menu parent ouvert, fermer les autres\n        return [translatedParentText];\n      });\n    }\n  };\n\n  const handleToggleExpanded = (itemText) => {\n    setExpandedItems(prev => {\n      if (prev.includes(itemText)) {\n        // Si on ferme le menu, on le retire de la liste\n        return prev.filter(item => item !== itemText);\n      } else {\n        // Si on ouvre un menu, fermer tous les autres et ouvrir seulement celui-ci\n        return [itemText];\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate('/login');\n  };\n\n  // Gestionnaires pour le menu utilisateur\n  const handleMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Gestion du changement d'église\n  const handleChurchChange = (churchId) => {\n    changeSelectedChurch(churchId);\n    \n    // Forcer le rafraîchissement des composants Stats\n    setRefreshKey(prev => prev + 1);\n  };\n\n  // Gestionnaires pour la messagerie\n  const handleMessageModalOpen = () => {\n    setMessageModalOpen(true);\n  };\n\n  const handleMessageModalClose = () => {\n    setMessageModalOpen(false);\n  };\n\n  // Charger les statistiques de messagerie\n  const loadMessageStats = async () => {\n    if (!user) return;\n    \n    setMessageStatsLoading(true);\n    try {\n      const response = await messageService.getMessageStats();\n      if (response.success) {\n        setMessageStats(response.data || { unread_count: 0 });\n      }\n    } catch (error) {\n    } finally {\n      setMessageStatsLoading(false);\n    }\n  };\n\n  // Charger les statistiques de messagerie au montage du composant\n  useEffect(() => {\n    loadMessageStats();\n  }, [user]);\n\n\n  // Vérifier l'accès au dashboard basé sur les permissions\n  const hasAccess = permissions.canAccessDashboard;\n  \n  if (!hasAccess) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <Typography variant=\"h4\" color=\"error\">\n          {i18nService.t('dashboard.unauthorized')}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <AccessControl allowedRoles={['SUPER_ADMIN', 'ADMIN', 'MANAGER']}>\n      <Box sx={{ \n        display: 'flex',\n        width: '100%',\n        overflow: 'hidden', // Empêcher le scroll horizontal au niveau du dashboard principal\n        overflowY: 'hidden' // Empêcher explicitement le scroll vertical\n      }}>\n      {/* AppBar fixe en haut */}\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n          ml: { sm: `${drawerWidth}px` },\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            edge=\"start\"\n            onClick={() => setMobileOpen(!mobileOpen)}\n            sx={{ mr: 2, display: { sm: 'none' } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          \n          <Typography sx={{ color: 'white', flexGrow: 1 }} variant=\"h6\" noWrap>\n            {i18nService.t('dashboard.title')}\n          </Typography>\n          \n          {/* Filtre d'église (seulement pour les admins/super-admins) */}\n          {!permissions.isManager && churches.length > 0 && (\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mr: 2 }}>\n              <Typography variant=\"body2\" sx={{ color: 'white' }}>\n                {i18nService.t('dashboard.church')} :\n              </Typography>\n              <FormControl size=\"small\" sx={{ minWidth: 200 }}>\n                <Select\n                  value={selectedChurch?.id || selectedChurch?._id || ''}\n                  onChange={(e) => handleChurchChange(e.target.value)}\n                  displayEmpty\n                  renderValue={(value) => {\n                    if (!value) {\n                      const userChurchId = typeof user?.eglise_locale === 'object'\n                        ? (user.eglise_locale.id || user.eglise_locale._id)\n                        : user?.eglise_locale;\n                      const userChurch = churches.find(church => (church.id || church._id) === userChurchId);\n                      return userChurch ? userChurch.nom : i18nService.t('dashboard.selectChurch');\n                    }\n                    const selectedChurchData = churches.find(church => (church.id || church._id) === value);\n                    return selectedChurchData ? selectedChurchData.nom : i18nService.t('dashboard.selectChurch');\n                  }}\n                  sx={{ \n                    backgroundColor: 'rgba(255, 255, 255, 0.37)',\n                    color: 'text.primary',\n                    backdropFilter: 'blur(10px)',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.11)'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.39)'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.49)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"\" disabled>\n                    <Typography sx={{ color: 'rgba(0, 0, 0, 0.5)', fontStyle: 'italic' }}>\n                      {i18nService.t('dashboard.selectChurch')}\n                    </Typography>\n                  </MenuItem>\n                  {churches.map((church) => (\n                    <MenuItem key={church.id || church._id} value={church.id || church._id}>\n                      {church.nom}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          )}\n          \n          {/* Indicateur de rôle - affiché pour tous les utilisateurs */}\n          <Chip \n            label={formatRole(user?.current_role || user?.role) || i18nService.t('dashboard.defaultRole')} \n            sx={{ \n              backgroundColor: 'rgba(255,255,255,0.2)', \n              color: 'white',\n              border: '1px solid rgba(255,255,255,0.3)',\n              mr: 2\n            }}\n            size=\"small\"\n          />\n          \n          {/* Bouton de messagerie */}\n          <IconButton\n            color=\"inherit\"\n            onClick={handleMessageModalOpen}\n            sx={{ ml: 1 }}\n            title={i18nService.t('navigation.messaging')}\n          >\n            <Badge \n              badgeContent={messageStats.unread_count} \n              color=\"error\"\n              invisible={messageStats.unread_count === 0}\n            >\n              <MessageIcon />\n            </Badge>\n          </IconButton>\n          \n          {/* Menu utilisateur */}\n          <UserMenu\n            anchorEl={anchorEl}\n            onMenuOpen={handleMenuOpen}\n            onMenuClose={handleMenuClose}\n          />\n        </Toolbar>\n      </AppBar>\n\n      {/* Menu latéral */}\n      <DashboardMenu\n        activeSection={activeSection}\n        expandedItems={expandedItems}\n        onSectionChange={handleSectionChange}\n        onToggleExpanded={handleToggleExpanded}\n        onLogout={handleLogout}\n        mobileOpen={mobileOpen}\n        setMobileOpen={setMobileOpen}\n        selectedChurch={selectedChurch} \n        setSelectedChurch={changeSelectedChurch}\n        showChurchFilter={!permissions.isManager}\n        user={user}\n        permissions={permissions}\n      />\n\n      {/* Contenu principal */}\n      <MainContent>\n        <DashboardContent \n          activeSection={activeSection}\n          selectedChurch={selectedChurch} \n          user={user}\n          permissions={permissions}\n          showChurchFilter={false} // Pas de filtre ici car il est dans l'AppBar\n          refreshKey={refreshKey}\n        />\n      </MainContent>\n\n      {/* Modal de messagerie */}\n      <MessageModal\n        open={messageModalOpen}\n        onClose={handleMessageModalClose}\n      />\n      </Box>\n    </AccessControl>\n  );\n};\n\nexport default Dashboard;\n\n","import authAxios from './authService';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\nexport const chaineImpactService = {\n  // Récupérer la chaîne d'impact d'une église sous forme d'arbre hiérarchique\n  getChaineImpact: async (churchId) => {\n    try {\n      const response = await authAxios.get(`/chaine-impact?church_id=${churchId}`);\n      return response.data; // Retourne maintenant { success, church_id, total_nodes, tree }\n    } catch (error) {\n      // console.error('Erreur lors de la récupération de la chaîne d\\'impact:', error);\n      throw error;\n    }\n  },\n\n  // Récupérer la chaîne d'impact d'un utilisateur spécifique\n  getChaineImpactByUser: async (userId) => {\n    try {\n      const response = await authAxios.get(`/chaine-impact/user/${userId}`);\n      return response.data;\n    } catch (error) {\n      // console.error('Erreur lors de la récupération de la chaîne d\\'impact de l\\'utilisateur:', error);\n      throw error;\n    }\n  },\n\n  // Mettre à jour/rebâtir automatiquement la chaîne d'impact\n  updateChaineImpact: async (churchId) => {\n    try {\n      const response = await authAxios.post('/chaine-impact/update', { church_id: churchId });\n      return response.data;\n    } catch (error) {\n      // console.error('Erreur lors de la mise à jour de la chaîne d\\'impact:', error);\n      throw error;\n    }\n  },\n\n  // Supprimer la chaîne d'impact d'une église\n  deleteChaineImpact: async (churchId) => {\n    try {\n      const response = await authAxios.delete(`/chaine-impact/${churchId}`);\n      return response.data;\n    } catch (error) {\n      // console.error('Erreur lors de la suppression de la chaîne d\\'impact:', error);\n      throw error;\n    }\n  }\n};\n\nexport default chaineImpactService;\n"],"names":["formatQualification","qualification","startsWith","replace","formatQualificationWithFallback","fallback","arguments","length","undefined","_ref","error","title","i18nService","t","variant","showTitle","showIcon","sx","onClose","action","getSeverity","errorType","errorDisplay","type","message","severity","userMessage","_jsx","Box","_objectSpread","mb","children","_jsxs","Alert","width","AlertTitle","fontWeight","Typography","component","process","create","assistanceData","authAxios","post","data","getStats","filters","params","URLSearchParams","Object","keys","forEach","key","append","get","concat","toString","getById","id","update","put","delete","previsionnelData","getByNetwork","networkId","page","limit","type_culte","date_from","date_to","church_id","network_id","url","performanceMetrics","pageLoads","apiCalls","cacheHits","cacheMisses","renderTimes","memoryUsage","globalCache","Map","cacheTimestamps","useGlobalCache","fetchFunction","dependencies","setData","useState","loading","setLoading","setError","performanceMonitor","componentName","renderStartTime","useRef","performance","now","apiCallCount","useEffect","renderTime","current","push","time","timestamp","Date","shift","trackApiCall","useCallback","endpoint","duration","success","REACT_APP_PERFORMANCE_TRACKING","fetch","method","headers","body","JSON","stringify","catch","memoryInfo","memory","used","usedJSHeapSize","total","totalJSHeapSize","jsHeapSizeLimit","getPerformanceStats","avgRenderTime","reduce","sum","item","avgMemoryUsage","toFixed","trackCacheHit","trackCacheMiss","usePerformanceMonitor","isCacheValid","getCachedData","cachedData","setCachedData","newData","set","fetchData","async","startTime","result","err","refresh","clearCache","COLORS","selectedChurch","refreshKey","init","stats","statsLoading","statsError","churchId","_res$data","res","apiService","getOverview","networkStats","networkStatsLoading","networkStatsError","refreshNetworkStats","_res$data2","networks","rawData","Array","isArray","map","network","name","nom","value","memberCount","networkEvolution","networkEvolutionLoading","networkEvolutionError","refreshNetworkEvolution","_res$data3","getNetworksEvolution","serviceAttendance","serviceAttendanceLoading","serviceAttendanceError","refreshServiceAttendance","_res$data4","services","getAll","networkYearCompare","networkYearCompareLoading","networkYearCompareError","refreshNetworkYearCompare","_res$data5","currentYear","getFullYear","years","getNetworksComparison","timer1","setTimeout","timer2","timer3","timer4","timer5","clearTimeout","display","justifyContent","my","color","isLoading","hasError","overflow","overflowX","alignItems","IconButton","onClick","disabled","RefreshIcon","CircularProgress","_error$response","_error$response$data","errorMessage","response","includes","mt","textAlign","renderError","_Fragment","Grid","container","spacing","total_all","label","total_reseaux","total_gr","total_resp_reseaux","total_resp_gr","total_leaders","total_leaders_all","total_reguliers","total_integration","total_irreguliers","total_gouvernance","total_ecodim","total_resp_ecodim","total_personnes_isolees","idx","xs","sm","md","lg","Paper","p","minHeight","backgroundColor","flexDirection","gutterBottom","fontSize","flex","ResponsiveContainer","height","PieChart","Pie","dataKey","nameKey","cx","cy","outerRadius","_ref2","_networkStats$index","_networkStats$index2","midAngle","innerRadius","percent","index","RADIAN","Math","PI","radius","x","cos","y","sin","n","percentValue","fill","textAnchor","dominantBaseline","entry","Cell","RechartsTooltip","bgcolor","borderRadius","border","date","mois","toLocaleString","month","annee","jour","getDate","sorted","sort","a","b","plusGrand","second","debutMois","getMonth","reseauxNouveaux","filter","createdAt","fontStyle","r","join","minWidth","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","allowDecimals","Legend","k","Line","stroke","strokeWidth","dot","BarChart","last3","slice","obj","row","year","colors","Bar","charAt","toUpperCase","activeBar","allDays","s","toISOString","Set","dateStr","toLocaleDateString","culteLabel","culte","find","total_adultes","total_enfants","total_chantres","total_protocoles","total_multimedia","total_respo_ecodim","total_animateurs_ecodim","total_enfants_ecodim","interval","tickCount","computeGrowthData","evolution","croissance","previous","growth","round","refreshEvolution","refreshYearCompare","stackedData","stackedDataLoading","stackedDataError","refreshStacked","getQualificationStats","networkName","totalMembers","baseData","qualifications","entries","qual","count","some","timer","getErrorMessage","_error$response2","_error$response2$data","_ref3","every","from","flatMap","cat","stackId","tickFormatter","v","formatter","growthData","growing","declining","stagnant","newOnes","validGrowing","validDeclining","validStagnant","validNewOnes","cacheLoading","cacheError","fetchServices","startMonth","endMonth","start","end","ttl","staleWhileRevalidate","chartData","React","serviteursKeys","makeAudienceData","audienceAvecServiteurs","audienceSansServiteurs","chartDataCulte1","chartDataCulte2","chartDataCulte3","user","setFilters","getPreviousWeek","startOfYear","days","floor","weekNumber","ceil","getDay","lastYearStart","lastYearDays","padStart","setStats","setNetworks","_response$data","networksData","firstNetwork","firstTypeCulte","TYPES_CULTE_OPTIONS","option","prev","loadNetworks","loadStats","apiFilters","week","split","weekNum","parseInt","firstThursdayOfYear","setDate","mondayOfWeek","sundayOfWeek","isNaN","getTime","Error","previsionnelService","apiStats","transformedStats","total_previsionnel","total_effectif_reel","total_effectif","chart_data","details","handleFilterChange","field","totalPrevisionnel","totalEffectifReel","difference","FormControl","fullWidth","InputLabel","Select","onChange","e","target","MenuItem","TextField","InputLabelProps","shrink","helperText","weekValue","options","weekday","day","formatWeekDate","Card","CardContent","Tooltip","style","borderCollapse","padding","borderBottom","detail","network_name","effectif_reel","previsionnel","Chip","size","getCurrentWeek","targetYear","targetWeek","assistanceService","total_presents","totalPresents","dataWeekNum","dataYear","assistance","TreeNode","_node$user$username","_node$user$username$c","node","expandedNodes","onToggle","level","hasChildren","isExpanded","has","getLevelColor","niveau","position","cursor","borderColor","transition","transform","boxShadow","zIndex","borderLeft","borderRight","borderTop","Avatar","src","image","onError","username","getLevelName","child","gap","flexWrap","pt","flexShrink","treeData","setTreeData","setExpandedNodes","zoom","setZoom","pan","setPan","isDragging","setIsDragging","dragStart","setDragStart","lastPan","setLastPan","containerRef","loadChaineImpact","chaineImpactService","getChaineImpact","tree","rootNode","toggleNode","nodeId","newExpanded","add","handleMouseUp","preventDefault","mr","handleZoomOut","max","ZoomOutIcon","mx","handleZoomIn","min","ZoomInIcon","handleResetView","ml","CenterFocusIcon","updateChaineImpact","total_nodes","ref","userSelect","touchAction","onMouseDown","stopPropagation","button","clientX","clientY","onMouseMove","deltaX","deltaY","onMouseUp","onMouseLeave","onWheel","delta","newZoom","transformOrigin","py","fetchNetworks","createNetwork","updateNetwork","deleteNetwork","useNetworks","handleRefresh","notification","showSuccess","showError","hideNotification","useNotification","canCreateNetworks","canUpdateNetworks","canDeleteNetworks","usePermissions","expandedNetworkId","setExpandedNetworkId","expandedGrId","setExpandedGrId","networkDetails","setNetworkDetails","networkGrs","setNetworkGrs","groupDetails","setGroupDetails","networkModal","setNetworkModal","deleteDialogOpen","setDeleteDialogOpen","networkToDelete","setNetworkToDelete","networkForm","setNetworkForm","responsable1","responsable2","editingNetworkId","setEditingNetworkId","networkSearchTerm","setNetworkSearchTerm","members","setMembers","membersError","setMembersError","churches","setChurches","formError","setFormError","loadMembers","_availableResponse$da","availableResponse","users","getAvailable","availableUsers","_currentResponsableRe","currentResponsableResponse","currentResponsable","isAlreadyInList","_id","processedError","handleApiError","loadChurches","handleCloseDeleteDialog","Button","startIcon","AddIcon","placeholder","InputProps","startAdornment","SearchIcon","Loading","titre","SecureErrorMessage","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","toLowerCase","_churches$find","hover","getGroups","handleNetworkClick","ExpandLess","ExpandMore","getLabel","pseudo","email","r1","m","r2","church","c","_network$church","_network$church2","_network$responsable","_network$responsable2","_network$responsable3","_network$responsable4","handleEditNetwork","EditIcon","handleOpenDeleteDialog","DeleteIcon","window","open","GroupIcon","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","gr","_gr$responsable","_gr$responsable2","_gr$responsable3","_gr$responsable4","_groupDetails","grId","groups","groupData","handleGrClick","paddingLeft","member","memberData","memberId","background","marginBottom","onMouseOver","currentTarget","onMouseOut","marginRight","marginLeft","Dialog","maxWidth","PaperProps","DialogTitle","px","pb","onSubmit","formData","_err$response","_err$response$data","DialogContent","required","labelId","DialogActions","DeleteConfirmDialog","content","onConfirm","_err$response2","_err$response2$data","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","getNetworks","stickyHeader","_n$qualifications","_n$qualifications2","q","groupCount","groupResponsablesCount","totals","acc","_n$qualifications3","_n$qualifications4","nb12","nb144","Carousel","carouselModal","setCarouselModal","carouselImages","setCarouselImages","selectedFile","setSelectedFile","imageToDelete","setImageToDelete","useLanguageThemeSync","canCreateCarousel","canDeleteCarousel","loadCarouselImages","carousel","AccessControl","allowedRoles","image_url","alt","event","FormData","upload","noValidate","hidden","accept","console","log","files","file","URL","createObjectURL","maxHeight","objectFit","imageUrl","getImageUrl","imagePath","path","_user$eglise_locale","_roleDialog$member","_resetDialog$member","setGroups","groupsError","setGroupsError","departments","setDepartments","loadingDepartments","setLoadingDepartments","departmentsError","setDepartmentsError","churchesError","setChurchesError","useAuth","permissions","fetchUsers","createUser","updateUser","deleteUser","useUsers","canCreateUsers","canUpdateUsers","canDeleteUsers","canAssignAdminRole","canAssignManagerRole","canAssignSuperAdminRole","canModifyChurchField","roleDialog","setRoleDialog","roles","resetDialog","setResetDialog","newPassword","deleteDialog","setDeleteDialog","memberToDelete","setMemberToDelete","isolatedMembers","setIsolatedMembers","memberModal","setMemberModal","editMode","setEditMode","memberToEdit","setMemberToEdit","memberForm","setMemberForm","role","genre","tranche_age","profession","ville_residence","origine","situation_matrimoniale","niveau_education","eglise_locale_id","isManager","eglise_locale","sert_departement","departement_id","departement_ids","telephone","adresse","selectedImage","setSelectedImage","imagePreview","setImagePreview","resetForm","_user$eglise_locale2","loadDepartments","_response$data2","loadIsolatedMembers","_response$data3","getIsoles","loadGroups","_response$data4","groupsData","searchTerm","setSearchTerm","FILTER_OPTIONS","setFilter","getAvailableRoles","ROLE_OPTIONS","roleHierarchy","levelA","sortRolesByHierarchy","handleCloseResetDialog","filterMembers","responsablesIds","filterLower","opt","_member$username","_member$email","_member$username2","_member$email2","formatRoleWithFallback","currentRoles","roleService","getUserRoles","assigned_roles","handleGrantRights","SecurityIcon","tempPassword","resetPassword","handleResetPassword","LockResetIcon","departementIds","user_departments","ud","_ud$department","_ud$department2","department","department_id","Boolean","_user$eglise_locale3","_member$departement","_member$departement2","_member$eglise_locale","_member$eglise_locale2","_member$departement3","_member$departement4","departement","handleEditMember","handleDeleteMember","multiple","renderValue","selected","_getAvailableRoles$fi","restrictedRoles","hasRestrictedRole","assignMultipleRoles","wordBreak","letterSpacing","navigator","clipboard","writeText","_user$eglise_locale5","missingFields","trim","fields","_response$data5","_response$data5$data","_response$data6","uploadProfileImage","toast","dataToSend","_user$eglise_locale4","userId","GENRE_OPTIONS","TRANCHE_AGE_OPTIONS","tranche","COUNTRIES","country","SITUATION_MATRIMONIALE_OPTIONS","situation","NIVEAU_EDUCATION_OPTIONS","dept","d","QUALIFICATION_OPTIONS","multiline","rows","reader","FileReader","onload","readAsDataURL","htmlFor","handleRemoveImage","memberName","retired","setRetired","fetchRetired","getRetired","_item$group","_item$network","group","leftAt","cityPopulations","population","Churches","churchModal","setChurchModal","editingChurchId","setEditingChurchId","churchForm","setChurchForm","ville","latitude","longitude","description","responsable","churchToDelete","setChurchToDelete","setUsers","loadingCityInfo","setLoadingCityInfo","addressOptions","setAddressOptions","loadingAddress","setLoadingAddress","addressValue","setAddressValue","addressInputValue","setAddressInputValue","canCreateChurches","canUpdateChurches","canDeleteChurches","getGovernance","governanceUsers","status","loadUsers","debouncedFetchCityInfo","func","wait","_len","args","_key","later","debounce","cityName","localCity","city","getCityByName","cityInfo","getCityInfo","apiError","_cityInfo$latitude","_cityInfo$longitude","_cityInfo$population","nombre_membres","_church$responsable","_church$responsable2","handleEditChurch","parseFloat","_err$response3","_err$response4","_err$response6","_err$response7","_err$response5","_err$response5$data","Autocomplete","getOptionLabel","newValue","renderInput","endAdornment","renderOption","props","inputValue","address","house_number","road","postcode","town","village","isOptionEqualToValue","filterOptions","onInputChange","newInputValue","reason","input","axios","format","addressdetails","countrycodes","place_id","searchAddress","display_name","municipality","county","lat","lon","parts","churchName","_err$response8","_err$response9","_err$response1","_err$response10","_err$response0","_err$response0$data","Departments","departmentToDelete","setDepartmentToDelete","departmentModal","setDepartmentModal","editingDepartmentId","setEditingDepartmentId","departmentForm","setDepartmentForm","departmentSearchTerm","setDepartmentSearchTerm","canCreateDepartments","canUpdateDepartments","canDeleteDepartments","String","handleEditDepartment","departmentName","_usersRes$data","usersRes","qualificationStats","useMemo","displayName","values","genreStats","ageStats","order","aIndex","indexOf","bIndex","qualifBarStats","angle","g","departementToRegion","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","churchIcon","iconSize","iconAnchor","popupAnchor","shadowSize","missionIcon","CenterOnFrance","useMap","setView","getZoneColor","zoneName","darkenColor","hex","num","ZoomListener","useMapEvents","zoomend","getZoom","active","mapRef","zones","setZones","regionsGeoJson","setRegionsGeoJson","departementsGeoJson","setDepartementsGeoJson","hovered","setHovered","mapInstance","setMapInstance","ready","setReady","zoneNordOuestCenter","fetchChurches","churchesData","churchesWithCoords","then","json","dispatchEvent","Event","t1","invalidateSize","t2","observer","ResizeObserver","observe","disconnect","handleCenterOnFrance","boxSizing","MapContainer","center","minZoom","maxZoom","zoomControl","scrollWheelZoom","whenCreated","TileLayer","attribution","GeoJSON","feature","zone","z","regions","properties","fillColor","weight","fillOpacity","onEachFeature","layer","on","mouseover","mouseout","bindTooltip","sticky","dashArray","pointerEvents","region","features","_church$population","Marker","icon","Popup","onerror","paragraph","Divider","formatDate","dateString","hour","minute","Testimonies","_selectedTestimony$ne","_selectedTestimony$il","useSelectedChurch","testimonies","setTestimonies","setPage","totalPages","setTotalPages","selectedCategory","setSelectedCategory","showOnlyUnread","setShowOnlyUnread","selectedTestimony","setSelectedTestimony","viewDialogOpen","setViewDialogOpen","testimonyToDelete","setTestimonyToDelete","noteDialogOpen","setNoteDialogOpen","testimonyForNote","setTestimonyForNote","noteText","setNoteText","categories","loadTestimonies","search","category","isRead","handleCloseNoteDialog","formatAuthorName","testimony","_testimony$firstName","_testimony$lastName","isAnonymous","firstName","lastName","formatCategory","categoryObj","InputAdornment","FormControlLabel","control","Checkbox","checked","FilterListIcon","_testimony$network","_testimony$illustrati","opacity","flexGrow","WebkitLineClamp","WebkitBoxOrient","note","StickyNote2Icon","lineHeight","pl","illustrations","AttachFileIcon","markAsRead","handleViewTestimony","VisibilityIcon","handleOpenNoteDialog","NoteIcon","Pagination","handlePageChange","originalName","DownloadIcon","clickable","fileName","addNote","DashboardContent","activeSection","ActiveComponent","Stats","statsReseaux","StatsReseaux","statsCultes","StatsCultes","statsMembres","StatsMembres","statsPrevisionnel","StatsPrevisionnel","statsAssistance","StatsAssistance","chaineImpact","ChaineImpact","Networks","networksRecap","NetworksRecap","Membres","usersRetired","UsersRetired","missionImplantation","MissionImplantation","sectionProps","menuItems","text","InsertChartIcon","BarChartIcon","GroupWorkIcon","EventIcon","PeopleIcon","AssessmentIcon","AccountTreeIcon","PeopleAltIcon","MapIcon","RecordVoiceOverIcon","ListIcon","SettingsIcon","ChurchIcon","BusinessCenterIcon","CollectionsIcon","StyledDrawer","styled","Drawer","theme","palette","primary","main","contrastText","StyledListItem","rest","_objectWithoutProperties","_excluded","ListItem","shape","_ref4","expandedItems","onSectionChange","onToggleExpanded","onLogout","mobileOpen","setMobileOpen","setSelectedChurch","showChurchFilter","canAccessConfig","navigate","useNavigate","filteredMenuItems","translations","drawer","Toolbar","noWrap","location","reload","List","handleMenuClick","ListItemIcon","ListItemText","ExpandMoreIcon","disablePadding","sub","ReplyAllOutlinedIcon","ModalProps","keepMounted","MainContent","marginTop","overflowY","Dashboard","useSelector","state","auth","useChurches","changeSelectedChurch","dispatch","useDispatch","setActiveSection","setExpandedItems","setRefreshKey","messageModalOpen","setMessageModalOpen","messageStats","setMessageStats","unread_count","messageStatsLoading","setMessageStatsLoading","anchorEl","setAnchorEl","messageService","getMessageStats","loadMessageStats","canAccessDashboard","AppBar","edge","MenuIcon","handleChurchChange","displayEmpty","userChurchId","userChurch","selectedChurchData","backdropFilter","formatRole","current_role","handleMessageModalOpen","Badge","badgeContent","invisible","MessageIcon","UserMenu","onMenuOpen","onMenuClose","handleMenuClose","DashboardMenu","sectionId","hash","parentMenu","translatedParentText","itemText","handleLogout","logout","MessageModal","handleMessageModalClose","getChaineImpactByUser","deleteChaineImpact"],"sourceRoot":""}