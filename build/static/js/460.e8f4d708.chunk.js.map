{"version":3,"file":"static/js/460.e8f4d708.chunk.js","mappings":"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","sources":["components/PrevisionnelModal.js","components/AssistanceModal.js","components/HistoriqueCulteModal.js","theme/themeService.js","services/index.js","pages/networks/NetworkDetails.js","utils/qualificationFormatter.js","components/AccessControl.js","components/common/SecureErrorMessage.js","services/preferencesService.js","services/assistanceService.js","services/preferencesApiService.js","components/UserPreferences.js","services/previsionnelService.js","components/DeleteConfirmDialog.js","services/chaineImpactService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  MenuItem,\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Divider,\n  Alert,\n  Chip\n} from '@mui/material';\n\nimport { TYPES_CULTE_OPTIONS } from '../constants/enums';\nimport i18nService from '../services/i18nService';\n\nconst PrevisionnelModal = ({ \n  open, \n  onClose, \n  onSave, \n  networkData, \n  isLoading = false\n}) => {\n  const [formData, setFormData] = useState({\n    date: new Date(),\n    type_culte: '',\n    groupes_previsions: {}\n  });\n\n  const [totalPrevisionnel, setTotalPrevisionnel] = useState(0);\n  const [errors, setErrors] = useState({});\n\n  // Initialiser les prévisions des groupes quand les données du réseau changent\n  useEffect(() => {\n    if (networkData?.grs && Array.isArray(networkData.grs)) {\n      const groupesPrevisions = {};\n      networkData.grs.forEach(gr => {\n        const effectifActuel = gr.members?.length || 0;\n        const nom = gr.nom || `GR ${gr.responsable1?.username?.split(' ')[0] || 'Sans nom'}${gr.responsable2?.username ? ` & ${gr.responsable2?.username?.split(' ')[0]}` : ''}`;\n        \n        groupesPrevisions[gr.id] = {\n          id: gr.id,\n          nom: nom,\n          effectif_actuel: effectifActuel,\n          valeur_previsionnelle: effectifActuel // Valeur par défaut = effectif actuel\n        };\n      });\n      \n      setFormData(prev => ({\n        ...prev,\n        groupes_previsions: groupesPrevisions\n      }));\n    }\n  }, [networkData]);\n\n\n\n  // Calculer le total prévisionnel en temps réel\n  useEffect(() => {\n    const total = Object.values(formData.groupes_previsions).reduce((sum, groupe) => {\n      return sum + (parseInt(groupe.valeur_previsionnelle) || 0);\n    }, 0);\n    setTotalPrevisionnel(total);\n  }, [formData.groupes_previsions]);\n\n  const handleGroupPrevisionChange = (groupId, value) => {\n    const numericValue = parseInt(value) || 0;\n    setFormData(prev => ({\n      ...prev,\n      groupes_previsions: {\n        ...prev.groupes_previsions,\n        [groupId]: {\n          ...prev.groupes_previsions[groupId],\n          valeur_previsionnelle: numericValue\n        }\n      }\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.date) {\n      newErrors.date = i18nService.t('errors.validation.dateRequired');\n    }\n    \n    if (!formData.type_culte) {\n      newErrors.type_culte = i18nService.t('errors.validation.typeCulteRequired');\n    }\n    \n    // Vérifier qu'au moins un groupe a une prévision > 0\n    const hasValidPrevision = Object.values(formData.groupes_previsions).some(\n      groupe => (parseInt(groupe.valeur_previsionnelle) || 0) > 0\n    );\n    \n    if (!hasValidPrevision) {\n      newErrors.previsions = i18nService.t('previsionnel.errors.noPrevision');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    const totalAvecInvites = totalPrevisionnel + (formData.invites || 0);\n\n    const payload = {\n      date: formData.date.toISOString(),\n      type_culte: formData.type_culte,\n      total_prevu: totalAvecInvites,\n      invites: formData.invites || 0,\n      network_id: networkData.reseau.id,\n      church_id: networkData.reseau.church_id || networkData.reseau.eglise_id,\n      groupes_previsions: Object.values(formData.groupes_previsions).map(groupe => ({\n        group_id: groupe.id,\n        effectif_actuel: groupe.effectif_actuel,\n        valeur_previsionnelle: groupe.valeur_previsionnelle\n      }))\n    };\n\n    onSave(payload);\n  };\n\n  // Fonction pour réinitialiser le formulaire après sauvegarde\n  const resetForm = () => {\n    setFormData(prev => ({\n      ...prev,\n      date: new Date(),\n      type_culte: '',\n      invites: 0,\n      // Réinitialiser les valeurs prévisionnelles mais garder les groupes\n      groupes_previsions: Object.keys(prev.groupes_previsions).reduce((acc, groupId) => {\n        acc[groupId] = {\n          ...prev.groupes_previsions[groupId],\n          valeur_previsionnelle: prev.groupes_previsions[groupId].effectif_actuel\n        };\n        return acc;\n      }, {})\n    }));\n    setErrors({});\n  };\n\n  const handleClose = () => {\n    // Ne pas réinitialiser les groupes, juste fermer le modal\n    setErrors({});\n    onClose();\n  };\n\n  // Filtrer les types de culte (exclure \"Tous\" qui est pour les filtres)\n  const cultesOptions = TYPES_CULTE_OPTIONS.filter(option => option.value !== 'Tous');\n\n  return (\n    <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"lg\"\n        fullWidth\n        PaperProps={{\n          sx: { height: '90vh' }\n        }}\n      >\n        <DialogTitle>\n          <Typography variant=\"h5\" component=\"div\">\n            {i18nService.t('previsionnel.modal.title')}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {i18nService.t('previsionnel.modal.subtitle')} - {networkData?.reseau?.nom}\n          </Typography>\n        </DialogTitle>\n\n        <DialogContent dividers sx={{ p: 3 }}>\n          <Box component=\"form\" sx={{ mb: 3 }}>\n            <Grid container spacing={3}>\n              {/* Date du prévisionnel */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  label={i18nService.t('previsionnel.form.date')}\n                  value={formData.date ? formData.date.toISOString().split('T')[0] : ''}\n                  onChange={(e) => setFormData(prev => ({ ...prev, date: new Date(e.target.value) }))}\n                  error={!!errors.date}\n                  helperText={errors.date}\n                  required\n                  InputLabelProps={{ shrink: true }}\n                  sx={{ minWidth: 200 }}\n                />\n              </Grid>\n\n              {/* Type de culte */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label={i18nService.t('previsionnel.form.typeCulte')}\n                  value={formData.type_culte}\n                  onChange={(e) => setFormData(prev => ({ ...prev, type_culte: e.target.value }))}\n                  error={!!errors.type_culte}\n                  helperText={errors.type_culte}\n                  required\n                  sx={{ minWidth: 200 }}\n                >\n                  {cultesOptions.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          </Box>\n\n          <Divider sx={{ my: 3 }} />\n\n          {/* Affichage des erreurs générales */}\n          {errors.previsions && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {errors.previsions}\n            </Alert>\n          )}\n\n          {/* Section Groupes */}\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {i18nService.t('previsionnel.form.groupes')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              {i18nService.t('previsionnel.form.groupesDescription')}\n            </Typography>\n\n\n\n            <Grid container spacing={2}>\n              {Object.values(formData.groupes_previsions).map((groupe) => (\n                <Grid item xs={12} sm={6} md={4} key={groupe.id}>\n                  <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                    <CardContent>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        {groupe.nom}\n                      </Typography>\n                      \n                      <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                           {i18nService.t('previsionnel.form.totalMembres')} : <strong>{groupe.effectif_actuel}</strong>\n                        </Typography>\n                      </Box>\n\n                      <TextField\n                        fullWidth\n                        type=\"number\"\n                        variant=\"outlined\"\n                        label={i18nService.t('previsionnel.form.valeurPrevisionnelle')}\n                        value={groupe.valeur_previsionnelle}\n                        onChange={(e) => handleGroupPrevisionChange(groupe.id, e.target.value)}\n                        inputProps={{ min: 0 }}\n                        size=\"small\"\n                      />\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n\n          <Divider sx={{ my: 3 }} />\n\n          {/* Section Invités */}\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {i18nService.t('previsionnel.form.invites')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              {i18nService.t('previsionnel.form.invitesDescription')}\n            </Typography>\n            \n            <TextField\n              fullWidth\n              type=\"number\"\n              label={i18nService.t('previsionnel.form.nombreInvites')}\n              value={formData.invites || 0}\n              onChange={(e) => setFormData(prev => ({ \n                ...prev, \n                invites: parseInt(e.target.value) || 0 \n              }))}\n              inputProps={{ min: 0 }}\n              sx={{ maxWidth: 300 }}\n            />\n          </Box>\n\n          <Divider sx={{ my: 3 }} />\n        </DialogContent>\n\n        <DialogActions sx={{ p: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          {/* Total prévisionnel à gauche */}\n              \n            <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n              {i18nService.t('previsionnel.form.totalPrevisionnel')} : <strong>{totalPrevisionnel + (formData.invites || 0)}</strong>\n            </Typography>\n          \n\n          {/* Boutons à droite */}\n          <Box>\n            <Button onClick={handleClose} disabled={isLoading} sx={{ mr: 1 }}>\n              {i18nService.t('common.actions.cancel')}\n            </Button>\n                    <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          disabled={isLoading || (totalPrevisionnel + (formData.invites || 0)) === 0}\n        >\n          {isLoading ? i18nService.t('common.actions.loading') : i18nService.t('previsionnel.form.save')}\n        </Button>\n          </Box>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\nexport default PrevisionnelModal;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Alert,\n  CircularProgress,\n  Chip,\n  Card,\n  CardContent,\n  Divider\n} from '@mui/material';\nimport { TYPES_CULTE_OPTIONS } from '../constants/enums';\nimport i18nService from '../services/i18nService';\nimport assistanceService from '../services/assistanceService';\nimport previsionnelService from '../services/previsionnelService';\n\nconst AssistanceModal = ({ \n  open, \n  onClose, \n  networkData, \n  onSave, \n  isLoading = false\n}) => {\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    type_culte: '',\n    groupes_assistance: {},\n    invites: 0\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [previsionnel, setPrevisionnel] = useState(null);\n  const [totalPresents, setTotalPresents] = useState(0);\n\n  // Charger les données du réseau et des groupes\n  useEffect(() => {\n    if (open && networkData?.grs && Array.isArray(networkData.grs)) {\n      const groupesAssistance = {};\n      networkData.grs.forEach(groupe => {\n        const effectifActuel = groupe.members?.length || 0;\n        const nom = groupe.nom || `GR ${groupe.responsable1?.username?.split(' ')[0] || 'Sans nom'}${groupe.responsable2?.username ? ` & ${groupe.responsable2?.username?.split(' ')[0]}` : ''}`;\n        \n        groupesAssistance[groupe.id] = {\n          id: groupe.id,\n          nom: nom,\n          effectif_actuel: effectifActuel,\n          nombre_presents: effectifActuel // Valeur par défaut = effectif actuel\n        };\n      });\n      \n      setFormData(prev => ({\n        ...prev,\n        groupes_assistance: groupesAssistance\n      }));\n    }\n  }, [open, networkData]);\n\n\n\n  // Charger le prévisionnel correspondant s'il existe\n  useEffect(() => {\n    const loadPrevisionnel = async () => {\n      if (formData.date && formData.type_culte && networkData?.reseau?.id) {\n        try {\n          const response = await previsionnelService.getStats({\n            network_id: networkData.reseau.id,\n            date_from: formData.date,\n            date_to: formData.date,\n            type_culte: formData.type_culte\n          });\n          \n          if (response.data && response.data.details && response.data.details.length > 0) {\n            setPrevisionnel(response.data.details[0]);\n          } else {\n            setPrevisionnel(null);\n          }\n        } catch (error) {\n          // console.error('Erreur lors du chargement du prévisionnel:', error);\n          setPrevisionnel(null);\n        }\n      }\n    };\n\n    loadPrevisionnel();\n  }, [formData.date, formData.type_culte, networkData?.reseau?.id]);\n\n  // Calculer le total des présents\n  useEffect(() => {\n    const total = Object.values(formData.groupes_assistance).reduce(\n      (sum, groupe) => sum + (groupe.nombre_presents || 0), 0\n    );\n    setTotalPresents(total);\n  }, [formData.groupes_assistance]);\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleGroupeChange = (groupeId, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      groupes_assistance: {\n        ...prev.groupes_assistance,\n        [groupeId]: {\n          ...prev.groupes_assistance[groupeId],\n          [field]: value\n        }\n      }\n    }));\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Validation\n      if (!formData.date || !formData.type_culte) {\n        throw new Error('Veuillez remplir tous les champs obligatoires');\n      }\n\n      if (totalPresents === 0) {\n        throw new Error('Veuillez saisir au moins un présent');\n      }\n\n      const payload = {\n        date: new Date(formData.date).toISOString(),\n        type_culte: formData.type_culte,\n        total_presents: totalPresents + (formData.invites || 0),\n        invites: formData.invites || 0,\n        network_id: networkData.reseau.id,\n        church_id: networkData.reseau.church_id || networkData.reseau.eglise_id,\n        groupes_assistance: Object.values(formData.groupes_assistance).map(groupe => ({\n          group_id: groupe.id,\n          effectif_actuel: groupe.effectif_actuel,\n          nombre_presents: groupe.nombre_presents\n        }))\n      };\n\n      // Appeler onSave avec les données au lieu de créer directement\n      onSave(payload);\n    } catch (error) {\n      setError(error.response?.data?.message || error.message || 'Erreur lors de l\\'enregistrement');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    // Ne pas réinitialiser les groupes, juste fermer le modal\n    setError(null);\n    setPrevisionnel(null);\n    onClose();\n  };\n\n  // Calculer l'écart avec le prévisionnel\n  const ecart = previsionnel ? totalPresents - previsionnel.previsionnel : null;\n\n  // Filtrer les types de culte (exclure \"Tous\" qui est pour les filtres)\n  const cultesOptions = TYPES_CULTE_OPTIONS.filter(option => option.value !== 'Tous');\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"lg\"\n      fullWidth\n      PaperProps={{\n        sx: { height: '90vh' }\n      }}\n    >\n              <DialogTitle>\n          <Typography variant=\"h5\" component=\"div\">\n            {i18nService.t('assistance.form.title')}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {i18nService.t('assistance.form.subtitle')} - {networkData?.reseau?.nom}\n          </Typography>\n        </DialogTitle>\n\n      <DialogContent dividers sx={{ p: 3 }}>\n        <Box component=\"form\" sx={{ mb: 3 }}>\n          <Grid container spacing={3}>\n            {/* Date du culte */}\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                type=\"date\"\n                label={i18nService.t('assistance.form.date')}\n                value={formData.date}\n                onChange={(e) => handleInputChange('date', e.target.value)}\n                InputLabelProps={{ shrink: true }}\n                sx={{ minWidth: 200 }}\n              />\n            </Grid>\n\n            {/* Type de culte */}\n            <Grid item xs={12} md={6}>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('assistance.form.typeCulte')}\n                value={formData.type_culte}\n                onChange={(e) => handleInputChange('type_culte', e.target.value)}\n                sx={{ minWidth: 200 }}\n              >\n                {cultesOptions.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </Box>\n\n        <Divider sx={{ my: 3 }} />\n\n        {/* Affichage des erreurs */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Section Groupes */}\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {i18nService.t('assistance.form.groupes')}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            {i18nService.t('assistance.form.groupesDescription')}\n          </Typography>\n\n\n\n          <Grid container spacing={2}>\n            {Object.values(formData.groupes_assistance).map((groupe) => (\n              <Grid item xs={12} sm={6} md={4} key={groupe.id}>\n                <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                  <CardContent>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {groupe.nom}\n                    </Typography>\n                    \n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {i18nService.t('assistance.form.totalMembres')} : <strong>{groupe.effectif_actuel}</strong>\n                      </Typography>\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      type=\"number\"\n                      variant=\"outlined\"\n                      label={i18nService.t('assistance.form.nombrePresents')}\n                      value={groupe.nombre_presents || ''}\n                      onChange={(e) => handleGroupeChange(groupe.id, 'nombre_presents', parseInt(e.target.value) || 0)}\n                      inputProps={{ min: 0, max: groupe.effectif_actuel }}\n                      size=\"small\"\n                    />\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n\n        <Divider sx={{ my: 3 }} />\n\n        {/* Section Invités */}\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {i18nService.t('assistance.form.invites')}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            {i18nService.t('assistance.form.invitesDescription')}\n          </Typography>\n          \n          <TextField\n            fullWidth\n            type=\"number\"\n            label={i18nService.t('assistance.form.nombreInvites')}\n            value={formData.invites || 0}\n            onChange={(e) => setFormData(prev => ({ \n              ...prev, \n              invites: parseInt(e.target.value) || 0 \n            }))}\n            inputProps={{ min: 0 }}\n            sx={{ maxWidth: 300 }}\n          />\n        </Box>\n\n        <Divider sx={{ my: 3 }} />\n\n        {/* Comparaison avec prévisionnel */}\n        {previsionnel && (\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {i18nService.t('assistance.form.comparisonTitle')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              {i18nService.t('assistance.form.comparisonDescription')}\n            </Typography>\n            \n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={4}>\n                <Card variant=\"outlined\" sx={{ p: 2, textAlign: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {i18nService.t('assistance.form.previsionnel')}\n                  </Typography>\n                  <Typography variant=\"h6\" color=\"primary\">\n                    {previsionnel.previsionnel}\n                  </Typography>\n                </Card>\n              </Grid>\n              \n              <Grid item xs={12} sm={4}>\n                <Card variant=\"outlined\" sx={{ p: 2, textAlign: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {i18nService.t('assistance.form.presents')}\n                  </Typography>\n                  <Typography variant=\"h6\" color=\"success.main\">\n                    {totalPresents}\n                  </Typography>\n                </Card>\n              </Grid>\n              \n              <Grid item xs={12} sm={4}>\n                <Card variant=\"outlined\" sx={{ p: 2, textAlign: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {i18nService.t('assistance.form.ecart')}\n                  </Typography>\n                  <Chip\n                    label={ecart >= 0 ? `+${ecart}` : ecart}\n                    color={ecart >= 0 ? 'success' : 'error'}\n                    size=\"medium\"\n                  />\n                </Card>\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n      </DialogContent>\n\n      <DialogActions sx={{ p: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        {/* Total présents + invités à gauche */}\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n          {i18nService.t('assistance.form.totalPresents')} : <strong>{totalPresents + (formData.invites || 0)}</strong>\n          {formData.invites > 0 && (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 0.5 }}>\n              ({totalPresents} membres + {formData.invites} invités)\n            </Typography>\n          )}\n        </Typography>\n\n        {/* Boutons à droite */}\n        <Box>\n          <Button onClick={handleClose} disabled={isLoading} sx={{ mr: 1 }}>\n            {i18nService.t('common.actions.cancel')}\n          </Button>\n                  <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          disabled={isLoading || totalPresents === 0}\n        >\n          {isLoading ? i18nService.t('common.actions.loading') : i18nService.t('assistance.form.save')}\n        </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AssistanceModal;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n  Chip,\n  Tabs,\n  Tab,\n  Divider,\n  Alert,\n  CircularProgress,\n  Tooltip,\n  Snackbar\n} from '@mui/material';\nimport {\n  Delete as DeleteIcon,\n  Refresh as RefreshIcon,\n  CalendarToday as CalendarIcon,\n  Group as GroupIcon,\n  TrendingUp as TrendingUpIcon,\n  CheckCircle as CheckCircleIcon,\n  History as HistoryIcon\n} from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport i18nService from '../services/i18nService';\nimport previsionnelService from '../services/previsionnelService';\nimport assistanceService from '../services/assistanceService';\n\nconst HistoriqueCulteModal = ({ \n  open, \n  onClose, \n  networkData\n}) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [previsionnels, setPrevisionnels] = useState([]);\n  const [assistances, setAssistances] = useState([]);\n  const [error, setError] = useState(null);\n  \n  // États pour la confirmation de suppression\n  const [deleteDialog, setDeleteDialog] = useState({\n    open: false,\n    type: null, // 'previsionnel' ou 'assistance'\n    item: null,\n    title: '',\n    content: ''\n  });\n\n  // États pour le Snackbar\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success' // 'success', 'error', 'warning', 'info'\n  });\n\n  // Charger l'historique au montage du composant\n  useEffect(() => {\n    if (open && networkData?.reseau?.id) {\n      loadHistorique();\n    }\n  }, [open, networkData]);\n\n  // Gérer le focus quand le modal s'ouvre\n  useEffect(() => {\n    if (open) {\n      // Attendre que le DOM soit mis à jour\n      const timer = setTimeout(() => {\n        const dialogElement = document.querySelector('[role=\"dialog\"]');\n        if (dialogElement) {\n          dialogElement.focus();\n        }\n      }, 100);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [open]);\n\n  const loadHistorique = async () => {\n    if (!networkData?.reseau?.id) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Charger les prévisionnels\n      const previsionnelsRes = await previsionnelService.getStats({\n        network_id: networkData.reseau.id,\n        limit: 50 // Limiter à 50 entrées récentes\n      });\n      \n      // Charger l'assistance\n      const assistancesRes = await assistanceService.getStats({\n        network_id: networkData.reseau.id,\n        limit: 50\n      });\n      \n      // Les données sont dans .details, pas dans .data\n      const previsionnelsData = previsionnelsRes.data?.details || previsionnelsRes.data?.data || [];\n      const assistancesData = assistancesRes.data?.details || assistancesRes.data?.data || [];\n      \n\n      \n      setPrevisionnels(previsionnelsData);\n      setAssistances(assistancesData);\n      \n    } catch (error) {\n      console.error('Erreur lors du chargement de l\\'historique:', error);\n      setError(i18nService.t('history.loadingError'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!deleteDialog.item) return;\n    \n    try {\n      if (deleteDialog.type === 'previsionnel') {\n        // Utiliser l'ID comme identifiant unique\n        const itemId = deleteDialog.item.id;\n        if (!itemId) {\n          setSnackbar({\n            open: true,\n            message: 'ID du prévisionnel manquant',\n            severity: 'error'\n          });\n          return;\n        }\n        \n        await previsionnelService.delete(itemId);\n        setPrevisionnels(prev => prev.filter(p => p.id !== itemId));\n        \n        // Afficher le message de succès\n        setSnackbar({\n          open: true,\n          message: i18nService.t('history.deletePrevisionnelSuccess'),\n          severity: 'success'\n        });\n      } else if (deleteDialog.type === 'assistance') {\n        // Utiliser l'ID comme identifiant unique\n        const itemId = deleteDialog.item.id;\n        if (!itemId) {\n          setSnackbar({\n            open: true,\n            message: 'ID de l\\'assistance manquant',\n            severity: 'error'\n          });\n          return;\n        }\n        \n        await assistanceService.delete(itemId);\n        setAssistances(prev => prev.filter(a => a.id !== itemId));\n        \n        // Afficher le message de succès\n        setSnackbar({\n          open: true,\n          message: i18nService.t('history.deleteAssistanceSuccess'),\n          severity: 'success'\n        });\n      }\n      \n      setDeleteDialog({ open: false, type: null, item: null, title: '', content: '' });\n      \n    } catch (error) {\n      console.error('❌ Erreur lors de la suppression:', error);\n      \n      // Afficher le message d'erreur\n      setSnackbar({\n        open: true,\n        message: i18nService.t('history.deleteError'),\n        severity: 'error'\n      });\n    }\n  };\n\n  const openDeleteDialog = (type, item) => {\n    const isPrevisionnel = type === 'previsionnel';\n    const date = format(new Date(item.date), 'dd/MM/yyyy', { locale: fr });\n    const typeCulte = item.type_culte || i18nService.t('history.defaultCulteType');\n    \n    setDeleteDialog({\n      open: true,\n      type,\n      item,\n      title: `Supprimer ${isPrevisionnel ? 'le prévisionnel' : 'l\\'assistance'}`,\n      content: `Êtes-vous sûr de vouloir supprimer ${isPrevisionnel ? 'le prévisionnel' : 'l\\'assistance'} du ${date} (${typeCulte}) ?`\n    });\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbar(prev => ({ ...prev, open: false }));\n  };\n\n  const formatDate = (dateString) => {\n    try {\n      return format(new Date(dateString), 'dd/MM/yyyy', { locale: fr });\n    } catch {\n      return dateString;\n    }\n  };\n\n  const getTypeCulteLabel = (type) => {\n    const types = {\n      'CULTE_DIMANCHE': i18nService.t('previsionnel.form.typeCulte.dimanche'),\n      'CULTE_MERCREDI': i18nService.t('previsionnel.form.typeCulte.mercredi'),\n      'CULTE_VENDREDI': i18nService.t('previsionnel.form.typeCulte.vendredi'),\n      'CULTE_SPECIAL': i18nService.t('previsionnel.form.typeCulte.special'),\n      'REUNION_PRIERE': i18nService.t('previsionnel.form.typeCulte.reunionPriere'),\n      'ETUDE_BIBLIQUE': i18nService.t('previsionnel.form.typeCulte.etudeBiblique')\n    };\n    return types[type] || type;\n  };\n\n  const renderPrevisionnelCard = (previsionnel) => (\n    <Card sx={{ mb: 1.5, '&:hover': { boxShadow: 2 } }}>\n      <CardContent sx={{ p: 2 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <CalendarIcon color=\"primary\" sx={{ fontSize: '1.2rem' }} />\n            <Box>\n              <Typography variant=\"subtitle1\" color=\"primary\" sx={{ fontSize: '1rem' }}>\n                {formatDate(previsionnel.date)}\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mt: 0.5 }}>\n                <Chip \n                  label={getTypeCulteLabel(previsionnel.type_culte)} \n                  color=\"primary\" \n                  variant=\"outlined\" \n                  size=\"small\" \n                  sx={{ fontSize: '0.8rem', fontWeight: 'bold' }}\n                />\n                <Chip \n                  label={`${i18nService.t('previsionnel.form.totalMembres')} : ${previsionnel.previsionnel || previsionnel.total_previsionnel || 0}`}\n                  color=\"primary\" \n                  variant=\"outlined\" \n                  size=\"small\" \n                  sx={{ fontSize: '0.8rem', fontWeight: 'bold' }}\n                />\n              </Box>\n            </Box>\n          </Box>\n          \n                    <Box sx={{ display: 'flex', gap: 1 }}>\n            <Tooltip title={i18nService.t('common.actions.delete')}>\n              <IconButton \n                color=\"error\" \n                size=\"small\"\n                onClick={() => openDeleteDialog('previsionnel', previsionnel)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n\n  const renderAssistanceCard = (assistance) => (\n    <Card key={assistance.id} sx={{ mb: 1.5, '&:hover': { boxShadow: 2 } }}>\n      <CardContent sx={{ p: 2 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <CalendarIcon color=\"success\" sx={{ fontSize: '1.2rem' }} />\n            <Box>\n              <Typography variant=\"subtitle1\" color=\"success.main\" sx={{ fontSize: '1rem' }}>\n                {formatDate(assistance.date)}\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mt: 0.5 }}>\n                <Chip \n                  label={getTypeCulteLabel(assistance.type_culte)} \n                  color=\"success\" \n                  variant=\"outlined\" \n                  size=\"small\" \n                  sx={{ fontSize: '0.8rem', fontWeight: 'bold' }}\n                />\n                <Chip \n                  label={`${i18nService.t('previsionnel.form.totalMembres')} : ${assistance.effectif_reel || assistance.total_presents || 0}`}\n                  color=\"success\" \n                  variant=\"outlined\" \n                  size=\"small\" \n                  sx={{ fontSize: '0.8rem', fontWeight: 'bold' }}\n                />\n              </Box>\n            </Box>\n          </Box>\n          \n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <Tooltip title={i18nService.t('common.actions.delete')}>\n              <IconButton \n                color=\"error\" \n                size=\"small\"\n                onClick={() => openDeleteDialog('assistance', assistance)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n\n  const renderTabContent = () => {\n    if (loading) {\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Alert severity=\"error\" sx={{ m: 2 }}>\n          {error}\n        </Alert>\n      );\n    }\n\n    if (activeTab === 0) {\n      // Onglet Prévisionnels\n      if (!Array.isArray(previsionnels) || previsionnels.length === 0) {\n        return (\n          <Box sx={{ textAlign: 'center', p: 4 }}>\n            <TrendingUpIcon sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              {i18nService.t('previsionnel.dashboard.noData')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {i18nService.t('previsionnel.dashboard.noDataDescription')}\n            </Typography>\n          </Box>\n        );\n      }\n\n      return (\n        <Box sx={{ p: 2 }}>\n          {previsionnels.map((previsionnel, index) => (\n            <div key={previsionnel.id || `${previsionnel.date}-${previsionnel.type_culte}-${index}`}>\n              {renderPrevisionnelCard(previsionnel)}\n            </div>\n          ))}\n        </Box>\n      );\n    } else {\n      // Onglet Assistance\n      if (!Array.isArray(assistances) || assistances.length === 0) {\n        return (\n          <Box sx={{ textAlign: 'center', p: 4 }}>\n            <CheckCircleIcon sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              {i18nService.t('assistance.dashboard.noData')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {i18nService.t('assistance.dashboard.noDataDescription')}\n            </Typography>\n          </Box>\n        );\n      }\n\n      return (\n        <Box sx={{ p: 2 }}>\n          {assistances.map((assistance, index) => (\n            <div key={assistance.id || `${assistance.date}-${assistance.type_culte}-${index}`}>\n              {renderAssistanceCard(assistance)}\n            </div>\n          ))}\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Dialog \n        open={open} \n        onClose={onClose} \n        maxWidth=\"lg\" \n        fullWidth\n        disableEscapeKeyDown={false}\n        disableRestoreFocus={false}\n        keepMounted={false}\n        PaperProps={{\n          sx: { minHeight: '70vh' }\n        }}\n      >\n        <DialogTitle>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h5\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <HistoryIcon color=\"primary\" />\n              {i18nService.t('home.historyOfCultes')}\n            </Typography>\n            <Box sx={{ display: 'flex', gap: 1 }}>\n              <Tooltip title={i18nService.t('common.actions.refresh')}>\n                <IconButton onClick={loadHistorique} disabled={loading}>\n                  <RefreshIcon />\n                </IconButton>\n              </Tooltip>\n            </Box>\n          </Box>\n        </DialogTitle>\n        \n        <DialogContent>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n            <Tabs \n              value={activeTab} \n              onChange={(e, newValue) => setActiveTab(newValue)}\n              sx={{ mb: -1 }}\n            >\n              <Tab \n                label={\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <TrendingUpIcon fontSize=\"small\" />\n                    {i18nService.t('home.previsions')} ({Array.isArray(previsionnels) ? previsionnels.length : 0})\n                  </Box>\n                } \n              />\n              <Tab \n                label={\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <CheckCircleIcon fontSize=\"small\" />\n                    {i18nService.t('home.assistance')} ({Array.isArray(assistances) ? assistances.length : 0})\n                  </Box>\n                } \n              />\n            </Tabs>\n          </Box>\n          \n          {renderTabContent()}\n        </DialogContent>\n        \n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n              {i18nService.t('common.close')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Dialog de confirmation de suppression */}\n      <Dialog\n        open={deleteDialog.open}\n        onClose={() => setDeleteDialog({ open: false, type: null, item: null, title: '', content: '' })}\n        disableEscapeKeyDown={false}\n        disableRestoreFocus={false}\n        keepMounted={false}\n      >\n        <DialogTitle>{deleteDialog.title}</DialogTitle>\n        <DialogContent>\n          <Typography>{deleteDialog.content}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => setDeleteDialog({ open: false, type: null, item: null, title: '', content: '' })}\n          >\n            {i18nService.t('common.actions.cancel')}\n          </Button>\n          <Button \n            onClick={handleDelete} \n            color=\"error\" \n            variant=\"contained\"\n          >\n            {i18nService.t('common.actions.delete')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar pour les notifications */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseSnackbar} \n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n\n    </>\n  );\n};\n\nexport default HistoriqueCulteModal;\n","class ThemeService {\n  constructor() {\n    this.themes = {\n      light: {\n        name: 'light',\n        displayName: 'Clair',\n        icon: '☀️',\n        description: 'Thème clair pour une utilisation en journée',\n        variables: {\n          // Couleurs principales\n          '--primary-color': '#4B0082',\n          '--primary-light': '#8A2BE2',\n          '--primary-dark': '#2D004D',\n          '--secondary-color': '#8A2BE2',\n          '--secondary-light': '#B19CD9',\n          '--secondary-dark': '#6A1B9A',\n          \n          // Couleurs de fond\n          '--background-primary': '#FFFFFF',\n          '--background-secondary': '#F8F9FA',\n          '--background-tertiary': '#E9ECEF',\n          '--background-elevated': '#FFFFFF',\n          '--background-overlay': 'rgba(0, 0, 0, 0.5)',\n          \n          // Couleurs de texte\n          '--text-primary': '#212529',\n          '--text-secondary': '#6C757D',\n          '--text-tertiary': '#ADB5BD',\n          '--text-inverse': '#FFFFFF',\n          '--text-muted': '#6C757D',\n          \n          // Couleurs de bordure\n          '--border-primary': '#DEE2E6',\n          '--border-secondary': '#E9ECEF',\n          '--border-accent': '#4B0082',\n          '--border-focus': '#4B0082',\n          \n          // Couleurs d'état\n          '--success-color': '#28A745',\n          '--success-light': '#D4EDDA',\n          '--success-dark': '#1E7E34',\n          '--warning-color': '#FFC107',\n          '--warning-light': '#FFF3CD',\n          '--warning-dark': '#D39E00',\n          '--error-color': '#DC3545',\n          '--error-light': '#F8D7DA',\n          '--error-dark': '#C82333',\n          '--info-color': '#17A2B8',\n          '--info-light': '#D1ECF1',\n          '--info-dark': '#117A8B',\n          \n          // Couleurs d'ombre\n          '--shadow-light': 'rgba(0, 0, 0, 0.1)',\n          '--shadow-medium': 'rgba(0, 0, 0, 0.15)',\n          '--shadow-heavy': 'rgba(0, 0, 0, 0.25)',\n          \n          // Couleurs de composants\n          '--card-background': '#FFFFFF',\n          '--card-border': '#E9ECEF',\n          '--input-background': '#FFFFFF',\n          '--input-border': '#DEE2E6',\n          '--input-focus': '#4B0082',\n          '--button-primary': '#4B0082',\n          '--button-secondary': '#6C757D',\n          '--button-text': '#FFFFFF',\n          \n          // Couleurs de navigation\n          '--navbar-background': '#FFFFFF',\n          '--navbar-border': '#E9ECEF',\n          '--sidebar-background': '#F8F9FA',\n          '--sidebar-border': '#E9ECEF',\n          '--menu-background': '#FFFFFF',\n          '--menu-hover': '#F8F9FA',\n          \n          // Couleurs de tableau\n          '--table-header': '#F8F9FA',\n          '--table-row': '#FFFFFF',\n          '--table-row-hover': '#F8F9FA',\n          '--table-border': '#E9ECEF',\n          \n          // Couleurs de modal\n          '--modal-background': '#FFFFFF',\n          '--modal-overlay': 'rgba(0, 0, 0, 0.5)',\n          '--modal-border': '#E9ECEF',\n          \n          // Couleurs de notification\n          '--toast-background': '#FFFFFF',\n          '--toast-border': '#E9ECEF',\n          '--toast-shadow': 'rgba(0, 0, 0, 0.15)',\n          \n          // Couleurs de graphique\n          '--chart-colors': ['#4B0082', '#8A2BE2', '#B19CD9', '#6A1B9A', '#2D004D'],\n          \n          // Couleurs d'accessibilité\n          '--focus-ring': 'rgba(75, 0, 130, 0.25)',\n          '--selection-background': 'rgba(75, 0, 130, 0.2)',\n          '--scrollbar-track': '#F1F3F4',\n          '--scrollbar-thumb': '#C1C1C1',\n          '--scrollbar-thumb-hover': '#A8A8A8'\n        }\n      },\n      dark: {\n        name: 'dark',\n        displayName: 'Sombre',\n        icon: '🌙',\n        description: 'Thème sombre pour une utilisation nocturne',\n        variables: {\n          // Couleurs principales\n          '--primary-color': '#8A2BE2',\n          '--primary-light': '#B19CD9',\n          '--primary-dark': '#4B0082',\n          '--secondary-color': '#B19CD9',\n          '--secondary-light': '#D4C4E8',\n          '--secondary-dark': '#8A2BE2',\n          \n          // Couleurs de fond\n          '--background-primary': '#121212',\n          '--background-secondary': '#1E1E1E',\n          '--background-tertiary': '#2D2D2D',\n          '--background-elevated': '#2D2D2D',\n          '--background-overlay': 'rgba(0, 0, 0, 0.7)',\n          \n          // Couleurs de texte\n          '--text-primary': '#FFFFFF',\n          '--text-secondary': '#B0B0B0',\n          '--text-tertiary': '#808080',\n          '--text-inverse': '#121212',\n          '--text-muted': '#808080',\n          \n          // Couleurs de bordure\n          '--border-primary': '#404040',\n          '--border-secondary': '#2D2D2D',\n          '--border-accent': '#8A2BE2',\n          '--border-focus': '#8A2BE2',\n          \n          // Couleurs d'état\n          '--success-color': '#4CAF50',\n          '--success-light': '#1B5E20',\n          '--success-dark': '#2E7D32',\n          '--warning-color': '#FF9800',\n          '--warning-light': '#E65100',\n          '--warning-dark': '#F57C00',\n          '--error-color': '#F44336',\n          '--error-light': '#B71C1C',\n          '--error-dark': '#D32F2F',\n          '--info-color': '#2196F3',\n          '--info-light': '#0D47A1',\n          '--info-dark': '#1976D2',\n          \n          // Couleurs d'ombre\n          '--shadow-light': 'rgba(0, 0, 0, 0.3)',\n          '--shadow-medium': 'rgba(0, 0, 0, 0.4)',\n          '--shadow-heavy': 'rgba(0, 0, 0, 0.6)',\n          \n          // Couleurs de composants\n          '--card-background': '#2D2D2D',\n          '--card-border': '#404040',\n          '--input-background': '#1E1E1E',\n          '--input-border': '#404040',\n          '--input-focus': '#8A2BE2',\n          '--button-primary': '#8A2BE2',\n          '--button-secondary': '#404040',\n          '--button-text': '#FFFFFF',\n          \n          // Couleurs de navigation\n          '--navbar-background': '#1E1E1E',\n          '--navbar-border': '#404040',\n          '--sidebar-background': '#2D2D2D',\n          '--sidebar-border': '#404040',\n          '--menu-background': '#2D2D2D',\n          '--menu-hover': '#404040',\n          \n          // Couleurs de tableau\n          '--table-header': '#2D2D2D',\n          '--table-row': '#1E1E1E',\n          '--table-row-hover': '#2D2D2D',\n          '--table-border': '#404040',\n          \n          // Couleurs de modal\n          '--modal-background': '#2D2D2D',\n          '--modal-overlay': 'rgba(0, 0, 0, 0.7)',\n          '--modal-border': '#404040',\n          \n          // Couleurs de notification\n          '--toast-background': '#2D2D2D',\n          '--toast-border': '#404040',\n          '--toast-shadow': 'rgba(0, 0, 0, 0.4)',\n          \n          // Couleurs de graphique\n          '--chart-colors': ['#8A2BE2', '#B19CD9', '#D4C4E8', '#4B0082', '#2D004D'],\n          \n          // Couleurs d'accessibilité\n          '--focus-ring': 'rgba(138, 43, 226, 0.25)',\n          '--selection-background': 'rgba(138, 43, 226, 0.2)',\n          '--scrollbar-track': '#2D2D2D',\n          '--scrollbar-thumb': '#404040',\n          '--scrollbar-thumb-hover': '#505050'\n        }\n      }\n    };\n    \n    this.currentTheme = this.getStoredTheme() || 'light';\n    this.autoTheme = this.getStoredAutoTheme() || true;\n    this.systemTheme = this.detectSystemTheme();\n    \n    // Initialiser le service\n    this.init();\n  }\n\n  /**\n   * Initialise le service de thème\n   */\n  init() {\n    // Appliquer le thème actuel\n    this.applyTheme(this.currentTheme);\n    \n    // Écouter les changements de thème système\n    this.listenToSystemThemeChanges();\n    \n    // Écouter les changements de thème\n    this.listenToThemeChanges();\n  }\n\n  /**\n   * Détecte le thème système\n   */\n  detectSystemTheme() {\n    if (window.matchMedia) {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return 'light';\n  }\n\n  /**\n   * Récupère le thème stocké dans localStorage\n   */\n  getStoredTheme() {\n    try {\n      return localStorage.getItem('user_theme') || 'light';\n    } catch (error) {\n      // Impossible de récupérer le thème depuis localStorage\n      return 'light';\n    }\n  }\n\n  /**\n   * Stocke le thème dans localStorage\n   */\n  setStoredTheme(theme) {\n    try {\n      localStorage.setItem('user_theme', theme);\n    } catch (error) {\n      // Impossible de stocker le thème dans localStorage\n    }\n  }\n\n  /**\n   * Récupère le paramètre auto-thème depuis localStorage\n   */\n  getStoredAutoTheme() {\n    try {\n      const stored = localStorage.getItem('user_auto_theme');\n      return stored ? JSON.parse(stored) : true;\n    } catch (error) {\n      // Impossible de récupérer auto-thème depuis localStorage\n      return true;\n    }\n  }\n\n  /**\n   * Stocke le paramètre auto-thème dans localStorage\n   */\n  setStoredAutoTheme(autoTheme) {\n    try {\n      localStorage.setItem('user_auto_theme', JSON.stringify(autoTheme));\n    } catch (error) {\n      // Impossible de stocker auto-thème dans localStorage\n    }\n  }\n\n  /**\n   * Change le thème actuel\n   */\n  setTheme(theme) {\n    if (!this.themes[theme]) {\n      // Thème non supporté, utilisation du thème par défaut\n      theme = 'light';\n    }\n\n    this.currentTheme = theme;\n    this.setStoredTheme(theme);\n    \n    // Appliquer le thème\n    this.applyTheme(theme);\n    \n    // Déclencher l'événement de changement de thème\n    this.dispatchThemeChangeEvent();\n  }\n\n  /**\n   * Active/désactive le thème automatique\n   */\n  setAutoTheme(enabled) {\n    this.autoTheme = enabled;\n    this.setStoredAutoTheme(enabled);\n    \n    if (enabled) {\n      // Appliquer le thème système\n      this.applyTheme(this.systemTheme);\n      this.currentTheme = this.systemTheme;\n    }\n  }\n\n  /**\n   * Applique un thème en définissant les variables CSS\n   */\n  applyTheme(theme) {\n    const themeData = this.themes[theme];\n    if (!themeData) {\n      // Thème non trouvé\n      return;\n    }\n\n    const root = document.documentElement;\n    \n    // Appliquer toutes les variables CSS\n    Object.entries(themeData.variables).forEach(([variable, value]) => {\n      root.style.setProperty(variable, value);\n    });\n    \n    // Ajouter l'attribut data-theme\n    root.setAttribute('data-theme', theme);\n    \n    // Appliquer des classes CSS spécifiques au thème\n    root.classList.remove('theme-light', 'theme-dark');\n    root.classList.add(`theme-${theme}`);\n  }\n\n  /**\n   * Récupère le thème actuel\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Récupère les informations sur le thème actuel\n   */\n  getCurrentThemeInfo() {\n    return this.themes[this.currentTheme];\n  }\n\n  /**\n   * Récupère tous les thèmes disponibles\n   */\n  getAvailableThemes() {\n    return Object.values(this.themes).map(theme => ({\n      name: theme.name,\n      displayName: theme.displayName,\n      icon: theme.icon,\n      description: theme.description\n    }));\n  }\n\n  /**\n   * Vérifie si un thème est supporté\n   */\n  isThemeSupported(theme) {\n    return this.themes.hasOwnProperty(theme);\n  }\n\n  /**\n   * Récupère la valeur d'une variable CSS du thème actuel\n   */\n  getCSSVariable(variable) {\n    const root = document.documentElement;\n    return getComputedStyle(root).getPropertyValue(variable);\n  }\n\n  /**\n   * Définit une variable CSS personnalisée\n   */\n  setCSSVariable(variable, value) {\n    const root = document.documentElement;\n    root.style.setProperty(variable, value);\n  }\n\n  /**\n   * Récupère toutes les variables CSS du thème actuel\n   */\n  getAllCSSVariables() {\n    const themeData = this.themes[this.currentTheme];\n    return themeData ? themeData.variables : {};\n  }\n\n  /**\n   * Déclenche l'événement de changement de thème\n   */\n  dispatchThemeChangeEvent() {\n    const event = new CustomEvent('themeChanged', {\n      detail: {\n        theme: this.currentTheme,\n        themeInfo: this.getCurrentThemeInfo(),\n        autoTheme: this.autoTheme\n      }\n    });\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Écoute les changements de thème\n   */\n  listenToThemeChanges() {\n    window.addEventListener('themeChanged', (event) => {\n      // Événement de changement de thème détecté\n    });\n  }\n\n  /**\n   * Écoute les changements de thème système\n   */\n  listenToSystemThemeChanges() {\n    if (window.matchMedia) {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      \n      mediaQuery.addEventListener('change', (event) => {\n        this.systemTheme = event.matches ? 'dark' : 'light';\n        \n        // Si le thème automatique est activé, appliquer le nouveau thème système\n        if (this.autoTheme) {\n          this.applyTheme(this.systemTheme);\n          this.currentTheme = this.systemTheme;\n          this.dispatchThemeChangeEvent();\n        }\n        \n      });\n    }\n  }\n\n  /**\n   * Applique le thème système si l'auto-thème est activé\n   */\n  applySystemTheme() {\n    if (this.autoTheme) {\n      this.applyTheme(this.systemTheme);\n      this.currentTheme = this.systemTheme;\n      this.dispatchThemeChangeEvent();\n    }\n  }\n\n  /**\n   * Récupère le contraste entre deux couleurs\n   */\n  getContrastRatio(color1, color2) {\n    // Fonction simplifiée pour calculer le contraste\n    // En production, utilisez une bibliothèque comme tinycolor2\n    return 4.5; // Valeur par défaut\n  }\n\n  /**\n   * Vérifie si le thème actuel respecte les standards d'accessibilité\n   */\n  checkAccessibility() {\n    const themeInfo = this.getCurrentThemeInfo();\n    const variables = themeInfo.variables;\n    \n    const checks = {\n      textContrast: this.getContrastRatio(variables['--text-primary'], variables['--background-primary']),\n      focusRing: variables['--focus-ring'] !== undefined,\n      selectionBackground: variables['--selection-background'] !== undefined\n    };\n    \n    return checks;\n  }\n\n  /**\n   * Génère un thème personnalisé basé sur une couleur primaire\n   */\n  generateCustomTheme(primaryColor) {\n    // Logique pour générer un thème personnalisé\n    // En production, utilisez une bibliothèque comme color2k ou chroma.js\n    \n    return {\n      name: 'custom',\n      displayName: 'Personnalisé',\n      icon: '🎨',\n      description: 'Thème personnalisé généré automatiquement',\n      variables: {\n        '--primary-color': primaryColor,\n        // Autres variables générées...\n      }\n    };\n  }\n\n  /**\n   * Exporte la configuration du thème actuel\n   */\n  exportThemeConfig() {\n    return {\n      currentTheme: this.currentTheme,\n      autoTheme: this.autoTheme,\n      systemTheme: this.systemTheme,\n      themeInfo: this.getCurrentThemeInfo(),\n      cssVariables: this.getAllCSSVariables()\n    };\n  }\n\n  /**\n   * Importe une configuration de thème\n   */\n  importThemeConfig(config) {\n    try {\n      if (config.currentTheme) {\n        this.setTheme(config.currentTheme);\n      }\n      \n      if (config.autoTheme !== undefined) {\n        this.setAutoTheme(config.autoTheme);\n      }\n      \n      return true;\n    } catch (error) {\n      // Erreur lors de l'import de la configuration de thème\n      return false;\n    }\n  }\n\n  /**\n   * Réinitialise le thème aux valeurs par défaut\n   */\n  resetTheme() {\n    this.setTheme('light');\n    this.setAutoTheme(true);\n  }\n\n  /**\n   * Prépare le thème pour l'impression\n   */\n  prepareForPrint() {\n    // Appliquer un thème optimisé pour l'impression\n    const printTheme = {\n      '--background-primary': '#FFFFFF',\n      '--text-primary': '#000000',\n      '--border-primary': '#CCCCCC'\n    };\n    \n    Object.entries(printTheme).forEach(([variable, value]) => {\n      this.setCSSVariable(variable, value);\n    });\n    \n  }\n\n  /**\n   * Restaure le thème après l'impression\n   */\n  restoreAfterPrint() {\n    this.applyTheme(this.currentTheme);\n  }\n}\n\n// Créer une instance singleton\nconst themeService = new ThemeService();\n\nexport default themeService;\n","// Import des services principaux\nimport authService from './authService';\nimport apiService from './apiService';\nimport preferencesService from './preferencesService';\nimport i18nService from './i18nService';\nimport previsionnelService from './previsionnelService';\nimport assistanceService from './assistanceService';\nimport chaineImpactService from './chaineImpactService';\n\n// Import des services de thème\nimport themeService from '../theme/themeService';\n\n// Export des services principaux\nexport { default as authService } from './authService';\nexport { default as apiService } from './apiService';\nexport { default as preferencesService } from './preferencesService';\nexport { default as i18nService } from './i18nService';\nexport { default as previsionnelService } from './previsionnelService';\nexport { default as assistanceService } from './assistanceService';\nexport { default as chaineImpactService } from './chaineImpactService';\n\n// Export des services de thème\nexport { default as themeService } from '../theme/themeService';\n\n// Export des constantes\nexport * from '../constants/enums';\nexport * from '../constants/countries';\n\n// Export des hooks\nexport { useInitialData } from '../hooks/useInitialData';\n\n// Export des composants\nexport { default as UserPreferences } from '../components/UserPreferences';\n\n// Export des configurations\nexport * from '../config/preferences';\n\n// Export des thèmes\nexport * from '../theme';\n\n// Export des traductions\nexport * from '../assets/i18n/fr.json';\nexport * from '../assets/i18n/en.json';\n\n// Export des utilitaires de validation\nexport const validateEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nexport const validatePassword = (password) => {\n  return password && password.length >= 8;\n};\n\nexport const validateUsername = (username) => {\n  return username && username.length >= 3;\n};\n\n// Export des utilitaires de formatage\nexport const formatDate = (date) => {\n  return new Date(date).toLocaleDateString('fr-FR');\n};\n\nexport const formatTime = (date) => {\n  return new Date(date).toLocaleTimeString('fr-FR');\n};\n\nexport const formatDateTime = (date) => {\n  return new Date(date).toLocaleString('fr-FR');\n};\n\n// Export des utilitaires de stockage\nexport const storage = {\n  get: (key) => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch (error) {\n      // console.warn('Erreur lors de la récupération depuis localStorage:', error);\n      return null;\n    }\n  },\n  \n  set: (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n      return true;\n    } catch (error) {\n      // console.warn('Erreur lors de la sauvegarde dans localStorage:', error);\n      return false;\n    }\n  },\n  \n  remove: (key) => {\n    try {\n      localStorage.removeItem(key);\n      return true;\n    } catch (error) {\n      // console.warn('Erreur lors de la suppression depuis localStorage:', error);\n      return false;\n    }\n  },\n  \n  clear: () => {\n    try {\n      localStorage.clear();\n      return true;\n    } catch (error) {\n      // console.warn('Erreur lors du nettoyage de localStorage:', error);\n      return false;\n    }\n  }\n};\n\n// Export des utilitaires de débogage\nexport const debug = {\n  log: (message, data) => {\n    // Log debug supprimé\n  },\n  \n  warn: (message, data) => {\n    if (process.env.NODE_ENV === 'development') {\n      // console.warn(`⚠️ [DEBUG] ${message}`, data);\n    }\n  },\n  \n  error: (message, error) => {\n    if (process.env.NODE_ENV === 'development') {\n      // console.error(`❌ [DEBUG] ${message}`, error);\n    }\n  }\n};\n\n// Export des utilitaires de performance\nexport const performance = {\n  measure: (name, fn) => {\n    const start = performance.now();\n    const result = fn();\n    const end = performance.now();\n    // Performance log supprimé\n    return result;\n  },\n  \n  measureAsync: async (name, fn) => {\n    const start = performance.now();\n    const result = await fn();\n    const end = performance.now();\n    // Performance log supprimé\n    return result;\n  }\n};\n\n// Export des utilitaires de sécurité\nexport const security = {\n  sanitizeInput: (input) => {\n    // Nettoyage basique des entrées utilisateur\n    return input.replace(/[<>]/g, '');\n  },\n  \n  generateToken: () => {\n    // Génération d'un token simple\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\n  },\n  \n  validateToken: (token) => {\n    // Validation basique d'un token\n    return token && token.length > 10;\n  }\n};\n\n// Export des utilitaires de réseau\nexport const network = {\n  isOnline: () => navigator.onLine,\n  \n  isSlowConnection: () => {\n    if ('connection' in navigator) {\n      return navigator.connection.effectiveType === 'slow-2g' || \n             navigator.connection.effectiveType === '2g';\n    }\n    return false;\n  },\n  \n  getConnectionInfo: () => {\n    if ('connection' in navigator) {\n      return {\n        effectiveType: navigator.connection.effectiveType,\n        downlink: navigator.connection.downlink,\n        rtt: navigator.connection.rtt\n      };\n    }\n    return null;\n  }\n};\n\n// Export des utilitaires d'accessibilité\nexport const accessibility = {\n  isHighContrast: () => {\n    return window.matchMedia('(prefers-contrast: high)').matches;\n  },\n  \n  isReducedMotion: () => {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  },\n  \n  isScreenReader: () => {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  }\n};\n\n// Export par défaut\nexport default {\n  // Services\n  authService,\n  apiService,\n  preferencesService,\n  i18nService,\n  themeService,\n  previsionnelService,\n  assistanceService,\n  chaineImpactService,\n  \n  // Utilitaires\n  validateEmail,\n  validatePassword,\n  validateUsername,\n  formatDate,\n  formatTime,\n  formatDateTime,\n  storage,\n  debug,\n  performance,\n  security,\n  network,\n  accessibility\n};\n","import React, { useState, useEffect } from 'react';\nimport i18nService from '../../services/i18nService';\nimport { handleApiError } from '../../utils/errorHandler';\nimport { usePermissions } from '../../hooks/usePermissions';\nimport { useParams } from 'react-router-dom';\nimport AccessControl from '../../components/AccessControl';\nimport {\n  Box,\n  Container,\n  Typography,\n  Button,\n  Grid,\n  Paper,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  MenuItem,\n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n  FormControlLabel,\n  Switch,\n  Tooltip,\n  Snackbar,\n  Alert,\n  FormControl,\n  InputLabel,\n  Select,\n  Chip\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Person as PersonIcon,\n  Refresh as RefreshIcon,\n  Assessment as AssessmentIcon,\n  Group as PeopleIcon,\n  TrendingUp as TrendingUpIcon,\n  History as HistoryIcon\n} from '@mui/icons-material';\nimport Navbar from '../../components/Navbar';\nimport Loading from '../../components/Loading';\nimport SecureErrorMessage from '../../components/common/SecureErrorMessage';\nimport DeleteConfirmDialog from '../../components/DeleteConfirmDialog';\nimport PrevisionnelModal from '../../components/PrevisionnelModal';\nimport AssistanceModal from '../../components/AssistanceModal';\nimport HistoriqueCulteModal from '../../components/HistoriqueCulteModal';\nimport { GENRE_OPTIONS, TRANCHE_AGE_OPTIONS, SITUATION_MATRIMONIALE_OPTIONS, NIVEAU_EDUCATION_OPTIONS, QUALIFICATION_OPTIONS } from '../../constants/enums';\nimport { COUNTRIES } from '../../constants/countries';\nimport { apiService, previsionnelService, assistanceService } from '../../services';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useSelectedChurch } from '../../hooks/useSelectedChurch';\nimport { toast } from 'react-toastify';\nimport { formatQualificationWithFallback } from '../../utils/qualificationFormatter';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'transform 0.2s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-4px)'\n  }\n}));\n\nconst StatCard = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  height: '100%',\n  minWidth: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: theme.spacing(1)\n}));\n\n// Configuration des statistiques du réseau\nconst getNetworkStatsConfig = (stats) => [\n  { \n    key: '12',\n    label: '12', \n    value: stats['12'] || 0\n  },\n  { \n    key: '144',\n    label: '144', \n    value: stats['144'] || 0\n  },\n  { \n    key: '1728',\n    label: '1728', \n    value: stats['1728'] || 0\n  },\n  { \n    key: 'totalGroups',\n    label: i18nService.t('networks.details.stats.totalGroups'), \n    value: stats.totalGroups || 0\n  },\n  { \n    key: 'Responsables de GR',\n    label: i18nService.t('networks.details.stats.groupResponsibles'), \n    value: stats['Responsables de GR'] || 0\n  },\n  { \n    key: 'Leader',\n    label: i18nService.t('networks.details.stats.leaders'), \n    value: stats['Leader'] || 0\n  },\n  { \n    key: 'Leader (Tous)',\n    label: i18nService.t('networks.details.stats.allLeaders'), \n    value: stats['Leader (Tous)'] || 0\n  },\n  { \n    key: 'Membre simple',\n    label: i18nService.t('networks.details.stats.simpleMembers'), \n    value: stats['Membre simple'] || 0\n  }\n].filter(stat => stat.value > 0); // Filtrer seulement les statistiques qui ont une valeur > 0\n\n\nconst NetworkDetails = () => {\n  const { user, isAuthenticated } = useAuth();\n  const { id: networkId } = useParams();\n  const { selectedChurch } = useSelectedChurch();\n  \n  // Initialiser le service i18n\n  useEffect(() => {\n    i18nService.init();\n  }, []);\n  const { \n    canCreateGroups, \n    canUpdateGroups, \n    canDeleteGroups, \n    canUpdateUsers, \n    isAdmin,\n    isManager,\n    isSuperAdmin,\n    isCollecteurReseaux\n  } = usePermissions();\n  \n  const permissions = { isAdmin, isManager, isSuperAdmin, isCollecteurReseaux };\n  \n  // Fonction helper pour générer le message d'aide approprié\n  const getHelpMessage = (permission) => {\n    if (!permission && permissions.isAdmin) {\n      return i18nService.t('dashboard.members.permissions.adminReadOnly');\n    }\n    if (!permission && permissions.isManager) {\n      return i18nService.t('dashboard.members.permissions.managerFullRights');\n    }\n    return \"\";\n  };\n  \n  // Hooks pour charger dynamiquement les églises et départements\n  const [churches, setChurches] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [error, setError] = useState(null);\n\n\n  useEffect(() => {\n    // Utiliser le service API centralisé avec gestion d'erreur améliorée\n    const loadInitialData = async () => {\n      try {\n        const [churchesRes, departmentsRes] = await Promise.all([\n          apiService.churches.getAll(),\n          apiService.departments.getAll()\n        ]);\n        \n        // Gérer la structure de réponse de l'API\n        const churchesData = churchesRes.data?.data || churchesRes.data || [];\n        const departmentsData = departmentsRes.data?.data || departmentsRes.data || [];\n        setChurches(Array.isArray(churchesData) ? churchesData : []);\n        setDepartments(Array.isArray(departmentsData) ? departmentsData : []);\n              } catch (error) {\n          // Erreur lors du chargement des données initiales - Supprimé pour la production\n          setChurches([]);\n          setDepartments([]);\n        }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // ...\n  const [selectedResponsable1, setSelectedResponsable1] = useState('');\n  const [selectedResponsable2, setSelectedResponsable2] = useState('');\n  const [selectedQualification, setSelectedQualification] = useState('');\n  const [selectedSuperieurHierarchique, setSelectedSuperieurHierarchique] = useState('');\n  const [newGroupName, setNewGroupName] = useState('');\n\n  // États pour les modales\n  const [addGrModal, setAddGrModal] = useState(false);\n  const [editGrModal, setEditGrModal] = useState(false);\n  const [addMemberModal, setAddMemberModal] = useState(false);\n  const [newMemberMode, setNewMemberMode] = useState(false);\n  const [selectedGr, setSelectedGr] = useState(null);\n  const [selectedMember, setSelectedMember] = useState(null);\n  const [previsionnelModal, setPrevisionnelModal] = useState(false);\n  const [assistanceModal, setAssistanceModal] = useState(false);\n  const [historiqueModal, setHistoriqueModal] = useState(false);\n  const [previsionnelLoading, setPrevisionnelLoading] = useState(false);\n  const [assistanceLoading, setAssistanceLoading] = useState(false);\n\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' });\n  const [memberForm, setMemberForm] = useState({\n    username: '',\n    pseudo: '',\n    email: '',\n    password: '',\n    role: 'MEMBRE',\n    genre: '',\n    tranche_age: '',\n    profession: '',\n    ville_residence: '',\n    origine: '',\n    situation_matrimoniale: '',\n    niveau_education: '',\n    departement: '',\n    departement_ids: [],\n    qualification: '',\n    telephone: '',\n    adresse: '',\n    image: ''\n  });\n\n  const [editMemberModal, setEditMemberModal] = useState(false);\n  const [editMemberForm, setEditMemberForm] = useState({\n    username: '',\n    pseudo: '',\n    genre: '',\n    tranche_age: '',\n    profession: '',\n    ville_residence: '',\n    origine: '',\n    situation_matrimoniale: '',\n    niveau_education: '',\n    departement: '',\n    departement_ids: [],\n    qualification: '',\n    email: '',\n    telephone: '',\n    adresse: '',\n    image: ''\n  });\n  const [sertDepartement, setSertDepartement] = useState(false);\n  \n  // États pour l'upload d'images\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  \n  // États pour l'édition d'images\n  const [editSelectedImage, setEditSelectedImage] = useState(null);\n  const [editImagePreview, setEditImagePreview] = useState(null);\n\n  // Surveiller les changements du formulaire d'édition\n  useEffect(() => {\n    // Debug du formulaire - Supprimé pour la production\n  }, [editMemberForm]);\n\n  // Fonctions pour l'upload d'images\n  const handleImageSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Vérifier le type de fichier\n      if (!file.type.startsWith('image/')) {\n        toast.error(i18nService.t('errors.validation.invalidImageType'));\n        return;\n      }\n      \n      // Vérifier la taille (5MB max)\n      if (file.size > 5 * 1024 * 1024) {\n        toast.error(i18nService.t('errors.validation.imageTooLarge'));\n        return;\n      }\n      \n      setSelectedImage(file);\n      \n      // Créer un aperçu\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImagePreview(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n\n  const handleRemoveImage = () => {\n    setSelectedImage(null);\n    setImagePreview(null);\n    setMemberForm(prev => ({ ...prev, image: '' }));\n  };\n\n  // Fonctions pour l'édition d'images\n  const handleEditImageSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Vérifier le type de fichier\n      if (!file.type.startsWith('image/')) {\n        toast.error(i18nService.t('errors.validation.invalidImageType'));\n        return;\n      }\n      \n      // Vérifier la taille (5MB max)\n      if (file.size > 5 * 1024 * 1024) {\n        toast.error(i18nService.t('errors.validation.imageTooLarge'));\n        return;\n      }\n      \n      setEditSelectedImage(file);\n      \n      // Créer un aperçu\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setEditImagePreview(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n\n  const handleEditRemoveImage = () => {\n    setEditSelectedImage(null);\n    setEditImagePreview(null);\n    setEditMemberForm(prev => ({ ...prev, image: '' }));\n  };\n\n  // État pour les données réseau\n  const [networkData, setNetworkData] = useState({\n    reseau: {},\n    stats: [],\n    grs: [],\n    members: {},\n    available_users: []\n  });\n  const [loading, setLoading] = useState(true);\n  \n  // État pour les responsables disponibles\n  const [availableResponsables, setAvailableResponsables] = useState([]);\n\n  // Déclaration de fetchData accessible à tous les handlers\n  const fetchData = async () => {\n    try {\n              // Vérifier que networkId est valide\n        if (!networkId) {\n          setError(i18nService.t('networks.details.missingNetworkId'));\n          return;\n        }\n\n          // Debug des données - Supprimé pour la production\n\n      // Déterminer le filtre d'église à utiliser\n      let churchFilter = {};\n      \n      // Priorité 1: Église sélectionnée dans le filtre global\n      if (selectedChurch?.id || selectedChurch?._id) {\n        const selectedChurchId = selectedChurch.id || selectedChurch._id;\n                  // Debug de l'église sélectionnée - Supprimé pour la production\n        churchFilter = { churchId: selectedChurchId };\n      }\n      // Priorité 2: Église de l'utilisateur connecté (fallback)\n      else if (user?.eglise_locale) {\n        // Extraire l'ID de l'église (peut être un objet ou une chaîne)\n        let churchId;\n        if (typeof user.eglise_locale === 'object') {\n          churchId = user.eglise_locale.id || user.eglise_locale._id;\n        } else if (typeof user.eglise_locale === 'string') {\n          churchId = user.eglise_locale;\n        }\n        \n        // S'assurer que l'ID est valide\n        if (churchId && churchId !== 'undefined' && churchId !== 'null') {\n          // Debug de l'église utilisateur - Supprimé pour la production\n          churchFilter = { churchId };\n        }\n      }\n      \n      // Si pas de filtre d'église mais que l'utilisateur est super admin, \n      // on peut charger les utilisateurs de toutes les églises\n      if (Object.keys(churchFilter).length === 0 && permissions.isSuperAdmin) {\n        // Debug du chargement global - Supprimé pour la production\n        churchFilter = {}; // Pas de filtre = tous les utilisateurs\n      }\n      \n      // Charger les données une par une pour éviter les problèmes avec Promise.all\n      let reseauData = {};\n      let statsData = {};\n      let grsData = [];\n      let membersData = [];\n      let availableUsersData = [];\n\n      try {\n        const reseauRes = await apiService.networks.getById(networkId);\n        reseauData = reseauRes.data?.data || reseauRes.data || {};\n        // Debug du réseau chargé - Supprimé pour la production\n              } catch (error) {\n          // Erreur lors du chargement du réseau - Supprimé pour la production\n        }\n\n      try {\n        const statsRes = await apiService.networks.getStatsById(networkId);\n        statsData = statsRes.data?.data || statsRes.data || {};\n        // Debug des stats - Supprimé pour la production\n      } catch (error) {\n        // Erreur lors du chargement des stats - Supprimé pour la production\n      }\n\n      try {\n        const grsRes = await apiService.networks.getGroups(networkId);\n        grsData = grsRes.data?.data || grsRes.data || [];\n        // Debug des groupes - Supprimé pour la production\n      } catch (error) {\n        // Erreur lors du chargement des groupes - Supprimé pour la production\n      }\n\n      try {\n        const membersRes = await apiService.networks.getMembers(networkId);\n        membersData = membersRes.data?.data || membersRes.data || [];\n        // Debug des membres - Supprimé pour la production\n      } catch (error) {\n        // Erreur lors du chargement des membres - Supprimé pour la production\n      }\n\n      // Charger les utilisateurs disponibles seulement si on a un filtre d'église valide\n      if (Object.keys(churchFilter).length > 0) {\n        try {\n          // Debug du chargement des utilisateurs - Supprimé pour la production\n          const availableUsersRes = await apiService.users.getAvailable(churchFilter);\n          availableUsersData = availableUsersRes.data?.data || availableUsersRes.data || [];\n          // Debug des utilisateurs disponibles - Supprimé pour la production\n        } catch (error) {\n          // Erreur lors du chargement des utilisateurs disponibles - Supprimé pour la production\n        }\n      } else {\n        // Pas de filtre d'église, utilisateurs disponibles non chargés\n      }\n\n      setNetworkData({\n        reseau: reseauData,\n        stats: statsData,\n        grs: Array.isArray(grsData) ? grsData : [],\n        members: Array.isArray(membersData) ? membersData : [],\n        available_users: Array.isArray(availableUsersData) ? availableUsersData : []\n      });\n    } catch (err) {\n      const processedError = handleApiError(err, 'erreur fetchdata:');\n      setError(processedError.message);\n      // Erreur fetchData - Supprimé pour la production\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [networkId]);\n\n  // Initialiser l'église locale par défaut pour les non-super-admin\n  useEffect(() => {\n    if ((user?.current_role || user?.role) !== 'SUPER_ADMIN') {\n      let defaultChurchId = '';\n      \n      // Priorité 1: Église sélectionnée dans le filtre global\n      if (selectedChurch?.id || selectedChurch?._id) {\n        defaultChurchId = selectedChurch.id || selectedChurch._id;\n        // Debug de l'église sélectionnée - Supprimé pour la production\n      }\n      // Priorité 2: Église de l'utilisateur connecté (fallback)\n      else if (user?.eglise_locale) {\n        defaultChurchId = typeof user.eglise_locale === 'object' \n          ? (user.eglise_locale.id || user.eglise_locale._id)\n          : user.eglise_locale;\n        // Debug de l'église utilisateur - Supprimé pour la production\n      }\n      \n      if (defaultChurchId) {\n        setMemberForm(prev => ({\n          ...prev,\n          eglise_locale: defaultChurchId\n        }));\n      }\n    }\n  }, [user, selectedChurch]);\n\n  // Mettre à jour automatiquement le nom du groupe quand les responsables changent\n  useEffect(() => {\n    if (selectedResponsable1 || selectedResponsable2) {\n      const generatedName = generateGroupName(selectedResponsable1, selectedResponsable2);\n      setNewGroupName(generatedName);\n    } else {\n      setNewGroupName('');\n    }\n  }, [selectedResponsable1, selectedResponsable2, networkData.available_users]);\n\n  // Fonction pour générer automatiquement le nom du groupe\n  const generateGroupName = (responsable1, responsable2) => {\n    if (!responsable1) return '';\n    \n    // Trouver les utilisateurs sélectionnés\n    const user1 = networkData.available_users.find(u => (u.id || u._id) === responsable1);\n    const user2 = networkData.available_users.find(u => (u.id || u._id) === responsable2);\n    \n    let responsableName = '';\n    if (user1) {\n      responsableName = user1.pseudo || user1.username;\n    } else if (user2) {\n      responsableName = user2.pseudo || user2.username;\n    }\n    \n    if (!responsableName) return '';\n    \n    // Nettoyer le nom (enlever les espaces, caractères spéciaux)\n    const cleanName = responsableName\n      .replace(/[^a-zA-ZÀ-ÿ0-9\\s]/g, '') // Garder lettres, chiffres et espaces\n      .replace(/\\s+/g, '_') // Remplacer espaces par underscores\n      .trim();\n    \n    return `GR_${cleanName}`;\n  };\n\n  // Gestionnaires d'événements pour prévisionnels\n  const handleSavePrevisionnel = async (previsionnelData) => {\n    setPrevisionnelLoading(true);\n    try {\n      await previsionnelService.create(previsionnelData);\n      \n      setSnackbar({ \n        open: true, \n        message: i18nService.t('previsionnel.success.created'), \n        severity: 'success' \n      });\n      \n      setPrevisionnelModal(false);\n      \n      // Optionnel : rafraîchir les données du réseau\n      await fetchData();\n      \n    } catch (error) {\n      const errorMessage = error.response?.data?.message || i18nService.t('errors.api.operation');\n      setSnackbar({ \n        open: true, \n        message: errorMessage, \n        severity: 'error' \n      });\n    } finally {\n      setPrevisionnelLoading(false);\n    }\n  };\n\n  const handlePrevisionnelSuccess = () => {\n    setSnackbar({\n      open: true,\n      message: i18nService.t('previsionnel.success.created'),\n      severity: 'success'\n    });\n    // Recharger les données si nécessaire\n  };\n\n  const handleSaveAssistance = async (assistanceData) => {\n    setAssistanceLoading(true);\n    try {\n      await assistanceService.create(assistanceData);\n      \n      setSnackbar({ \n        open: true, \n        message: i18nService.t('assistance.success.created'), \n        severity: 'success' \n      });\n      \n      setAssistanceModal(false);\n      \n      // Optionnel : rafraîchir les données du réseau\n      await fetchData();\n      \n    } catch (error) {\n      const errorMessage = error.response?.data?.message || i18nService.t('errors.api.operation');\n      setSnackbar({ \n        open: true, \n        message: errorMessage, \n        severity: 'error' \n      });\n    } finally {\n      setAssistanceLoading(false);\n    }\n  };\n\n  const handleAssistanceSuccess = () => {\n    setSnackbar({\n      open: true,\n      message: i18nService.t('assistance.success.created'),\n      severity: 'success'\n    });\n    // Recharger les données si nécessaire\n  };\n\n  // Gestionnaires pour l'historique et l'édition\n\n\n  const handlePrevisionnelModalClose = () => {\n    setPrevisionnelModal(false);\n  };\n\n  const handleAssistanceModalClose = () => {\n    setAssistanceModal(false);\n  };\n\n  // Gestionnaires d'événements\n      const handleEditGr = async (data) => {\n      try {\n        // Debug des données - Supprimé pour la production\n        \n        const groupId = data.id || data._id;\n        if (!groupId) {\n          setSnackbar({ open: true, message: i18nService.t('networks.details.invalidGroupId'), severity: 'error' });\n          return;\n        }\n        \n        // Debug de la modification - Supprimé pour la production\n      \n      await apiService.groups.update(groupId, data);\n      setEditGrModal(false);\n      setSelectedGr(null);\n      setSnackbar({ open: true, message: i18nService.t('success.groupUpdated'), severity: 'success' });\n      // Refresh données réseau\n              await fetchData();\n      } catch (error) {\n        // Erreur lors de la modification - Supprimé pour la production\n        setSnackbar({ open: true, message: i18nService.t('errors.api.updateGroup'), severity: 'error' });\n      }\n  };\n\n  // Gestion du dialogue de suppression de GR\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [grToDelete, setGrToDelete] = useState(null);\n\n  const handleDeleteGr = (grId) => {\n    setGrToDelete(grId);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleConfirmDeleteGr = async () => {\n    try {\n      await apiService.groups.delete(grToDelete);\n      await fetchData();\n      setSnackbar({ open: true, message: i18nService.t('success.groupDeleted'), severity: 'success' });\n    } catch (error) {\n      setSnackbar({ open: true, message: i18nService.t('errors.api.deleteGroup'), severity: 'error' });\n    } finally {\n      setDeleteDialogOpen(false);\n      setGrToDelete(null);\n    }\n  };\n\n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setGrToDelete(null);\n  };\n\n      const handleAddGr = async (data) => {\n      try {\n        // Debug des données - Supprimé pour la production\n      \n      // Le nom du groupe sera généré automatiquement par le backend\n      const payload = {\n        ...data,\n        network_id: networkId,\n        responsable1_id: selectedResponsable1,\n        qualification: selectedQualification,\n        superieur_hierarchique_id: selectedSuperieurHierarchique || null\n      };\n      if (selectedResponsable2) {\n        payload.responsable2_id = selectedResponsable2;\n      }\n      \n              // Debug du payload - Supprimé pour la production\n      \n      await apiService.groups.create(payload);\n      setAddGrModal(false);\n      setSnackbar({ open: true, message: i18nService.t('success.groupCreated'), severity: 'success' });\n      // Refresh données réseau\n      await fetchData();\n      setSelectedResponsable1(null);\n      setSelectedResponsable2(null);\n      setSelectedQualification('');\n      setSelectedSuperieurHierarchique('');\n              setNewGroupName('');\n      } catch (error) {\n        // Gestion intelligente des erreurs\n        if (error.response?.status === 401) {\n          const errorMessage = error.response?.data?.message || '';\n          \n          if (errorMessage.includes('droits') || \n              errorMessage.includes('autorisé') || \n              errorMessage.includes('église')) {\n            // Erreur de permissions\n            setSnackbar({ \n              open: true, \n              message: i18nService.t('errors.permissions.insufficient'), \n              severity: 'warning' \n            });\n          } else if (errorMessage.includes('token') || \n                     errorMessage.includes('expiré') || \n                     errorMessage.includes('Non autorisé')) {\n            // Erreur d'authentification réelle\n            setSnackbar({ \n              open: true, \n              message: i18nService.t('errors.session.expired'), \n              severity: 'warning' \n            });\n            // La redirection sera gérée automatiquement par l'intercepteur\n          } else {\n            // Autre erreur 401\n            setSnackbar({ \n              open: true, \n              message: errorMessage || i18nService.t('errors.authorization'), \n              severity: 'warning' \n            });\n          }\n        } else if (error.response?.status === 403) {\n          // Erreur de permissions\n          setSnackbar({ \n            open: true, \n            message: error.response?.data?.message || i18nService.t('errors.accessDenied'), \n            severity: 'warning' \n          });\n        } else {\n          // Autres erreurs\n          setSnackbar({ \n            open: true, \n            message: error.response?.data?.message || i18nService.t('errors.api.createGroup'), \n            severity: 'error' \n          });\n        }\n      }\n  };\n\n      const handleAddMember = async (data) => {\n      try {\n        // Debug des données - Supprimé pour la production\n        \n        // Vérifier que selectedGr est défini\n        if (!selectedGr) {\n          setSnackbar({ open: true, message: i18nService.t('networks.details.noGroupSelected'), severity: 'error' });\n          return;\n        }\n        \n        const groupId = selectedGr.id || selectedGr._id;\n        if (!groupId) {\n          setSnackbar({ open: true, message: i18nService.t('networks.details.invalidGroupId'), severity: 'error' });\n          return;\n        }\n        \n        // Debug du groupId - Supprimé pour la production\n        \n      if (newMemberMode) {\n        // Debug du mode création - Supprimé pour la production\n        let imageUrl = data.image || '';\n        \n        // Upload de l'image si une image est sélectionnée\n        if (selectedImage) {\n          try {\n            const formData = new FormData();\n            formData.append('image', selectedImage);\n            \n            const response = await apiService.users.uploadProfileImage(formData);\n            \n            imageUrl = response.data?.data?.image || response.data?.image;\n            \n            if (!imageUrl) {\n              throw new Error('URL de l\\'image non reçue');\n            }\n          } catch (error) {\n            toast.error(i18nService.t('errors.imageUploadFailed'));\n            return;\n          }\n        }\n        \n        const newMemberData = {\n          ...data,\n          password: data.password || i18nService.t('auth.register.defaultPassword'),\n          role: 'MEMBRE', // Use PostgreSQL enum\n          image: imageUrl,\n        };\n        \n        // For non-super-admin, automatically set local church\n        if ((user?.current_role || user?.role) !== 'SUPER_ADMIN') {\n          let defaultChurchId = '';\n          \n          // Priorité 1: Église sélectionnée dans le filtre global\n          if (selectedChurch?.id || selectedChurch?._id) {\n            defaultChurchId = selectedChurch.id || selectedChurch._id;\n            // Debug de l'église sélectionnée - Supprimé pour la production\n          }\n          // Priorité 2: Église de l'utilisateur connecté (fallback)\n          else if (user?.eglise_locale) {\n            defaultChurchId = typeof user.eglise_locale === 'object' \n              ? (user.eglise_locale.id || user.eglise_locale._id)\n              : user.eglise_locale;\n            // Debug de l'église utilisateur - Supprimé pour la production\n          }\n          \n          if (defaultChurchId) {\n            newMemberData.eglise_locale_id = defaultChurchId;\n          }\n        }\n        \n        // Mapper les départements si sélectionnés\n        if (data.departement_ids && data.departement_ids.length > 0) {\n          newMemberData.departement_ids = data.departement_ids;\n        }\n        \n        // {i18nService.t('common.actions.delete')} les champs qui ne sont pas dans le modèle Prisma\n        delete newMemberData.eglise_locale;\n        delete newMemberData.departement;\n        \n        // Remplacer les chaînes vides par null pour les champs optionnels\n        Object.keys(newMemberData).forEach(key => {\n          if (newMemberData[key] === '') {\n            newMemberData[key] = null;\n          }\n        });\n        \n        // Debug des données utilisateur - Supprimé pour la production\n        \n        const userRes = await apiService.users.create(newMemberData);\n        const newUserId = userRes.data?.data?.id || userRes.data?.data?._id || userRes.data?.id || userRes.data?._id;\n        // Debug de l'ID utilisateur - Supprimé pour la production\n        \n        // 2. Ajouter ce nouvel utilisateur au groupe\n        await apiService.groups.addMember(groupId, newUserId);\n        // Debug de l'ajout au groupe - Supprimé pour la production\n        \n              } else {\n          // Mode sélection : ajouter un membre existant au groupe\n          // Debug du mode sélection - Supprimé pour la production\n          \n          if (!data.user_id) {\n            // Debug de l'erreur - Supprimé pour la production\n            setSnackbar({ open: true, message: i18nService.t('networks.details.missingMemberId'), severity: 'error' });\n            return;\n          }\n          \n          // Debug de l'ajout - Supprimé pour la production\n          await apiService.groups.addMember(groupId, data.user_id);\n          // Debug de la confirmation - Supprimé pour la production\n        }\n      \n      // Succès : fermer le modal et réinitialiser\n      setAddMemberModal(false);\n      setNewMemberMode(false);\n      setSelectedMember(null);\n              setMemberForm({\n          username: '',\n          pseudo: '',\n          email: '',\n          password: '',\n          role: 'MEMBRE',\n          genre: '',\n          tranche_age: '',\n          profession: '',\n          ville_residence: '',\n          origine: '',\n          situation_matrimoniale: '',\n          niveau_education: '',\n          departement: '',\n          departement_ids: [],\n          qualification: '',\n          telephone: '',\n          adresse: '',\n          image: ''\n        });\n      setSnackbar({ open: true, message: i18nService.t('success.memberAdded'), severity: 'success' });\n      \n              // Rafraîchir les données\n        // Debug du rafraîchissement - Supprimé pour la production\n        await fetchData();\n        // Debug de la confirmation - Supprimé pour la production\n        \n      } catch (error) {\n        // Erreur lors de l'ajout - Supprimé pour la production\n        \n        // Gestion des erreurs de manière plus intuitive\n        let errorMessage = i18nService.t('errors.api.addMember');\n        \n        if (error.response?.status === 400) {\n          // Erreur de validation côté serveur\n          const serverMessage = error.response?.data?.message;\n          if (serverMessage) {\n            errorMessage = serverMessage;\n          } else if (error.response?.data?.error) {\n            errorMessage = error.response.data.error;\n          } else {\n            errorMessage = i18nService.t('errors.validation.invalidData');\n          }\n        } else if (error.response?.status === 409) {\n          // Conflit (utilisateur déjà existant)\n          errorMessage = i18nService.t('errors.user.alreadyExists');\n        } else if (error.response?.status === 401) {\n          // Erreur d'authentification ou de permissions\n          const serverMessage = error.response?.data?.message || '';\n          \n          if (serverMessage.includes('droits') || \n              serverMessage.includes('autorisé') || \n              serverMessage.includes('église')) {\n            // Erreur de permissions\n            errorMessage = i18nService.t('errors.permissions.addMember');\n          } else if (serverMessage.includes('token') || \n                     serverMessage.includes('expiré') || \n                     serverMessage.includes('Non autorisé')) {\n            // Erreur d'authentification réelle\n            errorMessage = i18nService.t('errors.session.expired');\n            // La redirection sera gérée automatiquement par l'intercepteur\n          } else {\n            // Autre erreur 401\n            errorMessage = serverMessage || i18nService.t('errors.authorization');\n          }\n        } else if (error.response?.status === 403) {\n          // Permissions insuffisantes\n          errorMessage = i18nService.t('errors.permissions.addMember');\n        } else if (error.response?.status === 500) {\n          // Erreur serveur - afficher le vrai message d'erreur\n          const serverError = error.response?.data?.error || error.response?.data?.message;\n          if (serverError) {\n            errorMessage = `Erreur serveur: ${serverError}`;\n            // Debug de l'erreur serveur - Supprimé pour la production\n          } else {\n            errorMessage = i18nService.t('errors.server.internal');\n            // Debug de l'erreur 500 - Supprimé pour la production\n          }\n        } else if (error.message && !error.message.includes('Request failed with status code')) {\n          // Message d'erreur spécifique du code\n          errorMessage = error.message;\n        }\n        \n        setSnackbar({ open: true, message: errorMessage, severity: 'error' });\n    }\n  };\n\n  const handleUpdateMember = async (data) => {\n    try {\n      // Debug des données - Supprimé pour la production\n      // Gestion robuste de l'identifiant utilisateur\n      const userId = selectedMember;\n      if (!userId) {\n        setSnackbar({ open: true, message: i18nService.t('networks.details.userIdNotFound'), severity: 'error' });\n        return;\n      }\n      // Upload de l'image si une image est sélectionnée\n      let imageUrl = data.image || '';\n      if (editSelectedImage) {\n        try {\n          const formData = new FormData();\n          formData.append('image', editSelectedImage);\n          \n          const response = await apiService.users.uploadProfileImage(formData);\n          \n          imageUrl = response.data?.data?.image || response.data?.image;\n          \n          if (!imageUrl) {\n            throw new Error('URL de l\\'image non reçue');\n          }\n        } catch (error) {\n          toast.error(i18nService.t('errors.imageUploadFailed'));\n          return;\n        }\n      }\n      \n      // On ne garde que les champs non vides (sauf l'id)\n      const filteredData = Object.keys(data).reduce((obj, key) => {\n        if ((key === 'user_id' || key === '_id' || key === 'id') || (data[key] !== '' && data[key] !== undefined && data[key] !== null)) {\n          obj[key] = data[key];\n        }\n        return obj;\n      }, {});\n      \n      // Ajouter l'URL de l'image si elle a été uploadée\n      if (imageUrl) {\n        filteredData.image = imageUrl;\n      }\n      \n      await apiService.users.update(userId, filteredData);\n      setEditMemberModal(false);\n      setEditMemberForm({\n        username: '',\n        pseudo: '',\n        email: '',\n        password: '',\n        genre: '',\n        tranche_age: '',\n        profession: '',\n        ville_residence: '',\n        origine: '',\n        situation_matrimoniale: '',\n        niveau_education: '',\n        departement: '',\n        departement_ids: [],\n        qualification: '',\n        telephone: '',\n        adresse: '',\n        image: ''\n      });\n      setSnackbar({ open: true, message: i18nService.t('success.memberUpdated'), severity: 'success' });\n      // Refresh données réseau\n              await fetchData();\n      } catch (error) {\n        // Erreur lors de la mise à jour - Supprimé pour la production\n        \n        // Gestion des erreurs de manière plus intuitive\n      let errorMessage = i18nService.t('errors.api.updateMember');\n      \n      if (error.response?.status === 400) {\n        const serverMessage = error.response?.data?.message;\n        if (serverMessage) {\n          errorMessage = serverMessage;\n        } else if (error.response?.data?.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = i18nService.t('errors.validation.invalidData');\n        }\n      } else if (error.response?.status === 404) {\n        errorMessage = i18nService.t('errors.member.notFound');\n      } else if (error.response?.status === 403) {\n        errorMessage = i18nService.t('errors.permissions.updateMember');\n      } else if (error.response?.status === 500) {\n        // Erreur serveur - afficher le vrai message d'erreur\n        const serverError = error.response?.data?.error || error.response?.data?.message;\n        if (serverError) {\n          errorMessage = `Erreur serveur: ${serverError}`;\n        } else {\n          errorMessage = i18nService.t('errors.server.internal');\n        }\n      } else if (error.message && !error.message.includes('Request failed with status code')) {\n        errorMessage = error.message;\n      }\n      \n      setSnackbar({ open: true, message: errorMessage, severity: 'error' });\n    }\n  };\n\n\n\n  const [deleteMemberDialogOpen, setDeleteMemberDialogOpen] = useState(false);\n  const [memberToDelete, setMemberToDelete] = useState({ grId: null, userId: null });\n\n  const handleRemoveMember = (grId, userId) => {\n    setMemberToDelete({ grId, userId });\n    setDeleteMemberDialogOpen(true);\n  };\n\n  const handleConfirmDeleteMember = async () => {\n    const { grId, userId } = memberToDelete;\n    try {\n      await apiService.groups.removeMember(grId, userId);\n      setSnackbar({ open: true, message: i18nService.t('success.memberDeleted'), severity: 'success' });\n              await fetchData();\n      } catch (error) {\n        // Erreur lors de la suppression - Supprimé pour la production\n        \n        // Gestion des erreurs de manière plus intuitive\n      let errorMessage = i18nService.t('errors.api.deleteMember');\n      \n      if (error.response?.status === 400) {\n        const serverMessage = error.response?.data?.message;\n        if (serverMessage) {\n          errorMessage = serverMessage;\n        } else if (error.response?.data?.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = i18nService.t('errors.member.cannotDelete');\n        }\n      } else if (error.response?.status === 404) {\n        errorMessage = i18nService.t('errors.memberOrGroup.notFound');\n      } else if (error.response?.status === 403) {\n        errorMessage = i18nService.t('errors.permissions.deleteMember');\n      } else if (error.response?.status === 500) {\n        // Erreur serveur - afficher le vrai message d'erreur\n        const serverError = error.response?.data?.error || error.response?.data?.message;\n        if (serverError) {\n          errorMessage = `Erreur serveur: ${serverError}`;\n        } else {\n          errorMessage = i18nService.t('errors.server.internal');\n        }\n      } else if (error.message && !error.message.includes('Request failed with status code')) {\n        errorMessage = error.message;\n      }\n      \n      setSnackbar({ open: true, message: errorMessage, severity: 'error' });\n    } finally {\n      setDeleteMemberDialogOpen(false);\n      setMemberToDelete({ grId: null, userId: null });\n    }\n  };\n\n  const handleCloseDeleteMemberDialog = () => {\n    setDeleteMemberDialogOpen(false);\n    setMemberToDelete({ grId: null, userId: null });\n  };\n\n  if (loading) return <Loading titre={i18nService.t('networks.details.loading')} />;\n  if (error) return <SecureErrorMessage error={error} title={i18nService.t('errors.loading')} />;\n\n  // Vérification de l'authentification\n  if (!isAuthenticated) {\n    return (\n      <Box sx={{ minHeight: '100vh', bgcolor: 'background.default', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Typography variant=\"h6\" color=\"error\">\n          {i18nService.t('auth.loginRequired')}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <AccessControl allowedRoles={['SUPER_ADMIN', 'ADMIN', 'MANAGER', 'COLLECTEUR_RESEAUX']}>\n      <Box sx={{ minHeight: '100vh', bgcolor: 'background.default' }}>\n        <Navbar />\n\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\n                      <Typography variant=\"h4\" sx={{ mb: 4, color: 'primary.main', fontWeight: 'bold' }}>\n              {i18nService.t('networks.details.title')} - {networkData.reseau.nom}\n            </Typography>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Tooltip title={i18nService.t('common.actions.refresh')}>\n              <IconButton color=\"primary\" onClick={fetchData} sx={{ border: '1px solid #ddd', bgcolor: '#fff', '&:hover': { bgcolor: '#f5f5f5' } }}>\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </Box>\n        {/* Section Responsables */}\n        <Paper data-aos=\"fade-up\" sx={{ p: 3, mb: 4 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h5\">\n              {i18nService.t('networks.details.networkResponsibles')}\n            </Typography>\n            {(permissions.isAdmin || permissions.isSuperAdmin || permissions.isCollecteurReseaux || permissions.isManager) && (\n              <Box sx={{ display: 'flex', gap: 2 }}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<AssessmentIcon />}\n                  onClick={() => setPrevisionnelModal(true)}\n                  sx={{ \n                    backgroundColor: '#2E7D32',\n                    '&:hover': { backgroundColor: '#1B5E20' }\n                  }}\n                >\n                  {i18nService.t('previsionnel.button.create')}\n                </Button>\n                \n                <Button\n                  variant=\"contained\"\n                  startIcon={<PeopleIcon />}\n                  onClick={() => setAssistanceModal(true)}\n                  sx={{ \n                    backgroundColor: '#1976d2',\n                    '&:hover': { backgroundColor: '#1565c0' }\n                  }}\n                >\n                  {i18nService.t('assistance.form.save')}\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<HistoryIcon />}\n                  onClick={() => setHistoriqueModal(true)}\n                  sx={{ \n                    borderColor: '#FF9800',\n                    color: '#FF9800',\n                    '&:hover': { \n                      borderColor: '#F57C00',\n                      backgroundColor: '#FFF3E0'\n                    }\n                  }}\n                >\n                    {i18nService.t('common.history')}\n                </Button>\n              </Box>\n            )}\n          </Box>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <PersonIcon />\n                <Box>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.details.responsable1')}</Typography>\n                  <Typography>{networkData.reseau.responsable1?.username}</Typography>\n                </Box>\n              </Box>\n            </Grid>\n            {networkData.reseau.responsable2?.username && (\n              <Grid item xs={12} md={6}>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  <PersonIcon />\n                  <Box>\n                    <Typography variant=\"subtitle2\">{i18nService.t('networks.details.responsable2')}</Typography>\n                    <Typography>{networkData.reseau.responsable2?.username}</Typography>\n                  </Box>\n                </Box>\n              </Grid>\n            )}\n          </Grid>\n        </Paper>\n\n        {/* Section Statistiques */}\n        <Paper data-aos=\"fade-up\" sx={{ p: 3, mb: 4 }}>\n          <Typography variant=\"h5\" gutterBottom>{i18nService.t('networks.details.statistics')}</Typography>\n          <Grid container spacing={2}>\n            {getNetworkStatsConfig(networkData.stats || {}).map((stat, index) => (\n              <Grid item xs={6} sm={4} md={2} key={index}>\n                <StatCard>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>{stat.label}</Typography>\n                  <Typography variant=\"h4\" color=\"primary\">{stat.value}</Typography>\n                </StatCard>\n              </Grid>\n            ))}\n            <Grid item xs={6} sm={4} md={2}>\n              <StatCard>\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>{i18nService.t('networks.details.groupesReveil')}</Typography>\n                <Typography variant=\"h4\" color=\"primary\">{networkData.grs.length}</Typography>\n              </StatCard>\n            </Grid>\n            <Grid item xs={6} sm={4} md={2}>\n              <StatCard>\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>{i18nService.t('networks.details.effectifTotal')}</Typography>\n                <Typography variant=\"h4\" color=\"primary\">{(() => {\n                  const membresSet = new Set();\n                  \n                  networkData.grs?.forEach((gr) => {\n                    gr.members?.forEach((m) => {\n                      const memberId = m?.id || m?._id || m?.user?.id || m?.user?._id;\n                      if (memberId) {\n                        membresSet.add(memberId);\n                      }\n                    });\n                  });\n                  \n                  // Ajouter les responsables de réseau\n                  const resp1Id = networkData.reseau?.responsable1?.id || networkData.reseau?.responsable1?._id;\n                  const resp2Id = networkData.reseau?.responsable2?.id || networkData.reseau?.responsable2?._id;\n                  \n                  if (resp1Id) {\n                    membresSet.add(resp1Id);\n                  }\n                  \n                  if (resp2Id) {\n                    membresSet.add(resp2Id);\n                  }\n                  \n                  return membresSet.size;\n                })()}</Typography>\n              </StatCard>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {/* Section GR */}\n        <Box data-aos=\"fade-up\" sx={{ mb: 4 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n            <Typography variant=\"h5\">{i18nService.t('networks.details.groupesReveil')}</Typography>\n            {(permissions.isAdmin || permissions.isSuperAdmin || permissions.isCollecteurReseaux) && (\n              <Button\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                onClick={() => setAddGrModal(true)}\n                disabled={!canCreateGroups}\n                title={getHelpMessage(canCreateGroups)}\n              >\n                {i18nService.t('networks.details.addGR')}\n              </Button>\n            )}\n          </Box>\n\n          <Grid container sx={{ mx: 'auto' }} alignItems=\"stretch\">\n            {(Array.isArray(networkData.grs) ? networkData.grs : []).map((gr) => (\n              <Grid data-aos=\"fade-up\"sx={{\n                width: '100%',\n                padding: '10px 10px 10px 10px',\n                '@media (min-width:500px) and (max-width:849px)': { width: '50%' },\n                '@media (min-width:850px) and (max-width:1199px)': { width: '33.33%' },\n                '@media (min-width:1200px) and (max-width:1599px)': { width: '25%' },\n                '@media (min-width:1600px)': { width: '20%' },\n                \n                \n              }} key={gr.id}>\n                <StyledCard>\n                  <CardContent>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                      <Typography variant=\"h6\">\n                        GR {gr.responsable1?.username?.split(' ')[0]}\n                        {gr.responsable2?.username && ` & ${gr.responsable2?.username?.split(' ')[0]}`}\n                      </Typography>\n                      {(permissions.isAdmin || permissions.isSuperAdmin || permissions.isCollecteurReseaux) && (\n                        <Box>\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() => {\n                              setSelectedGr(gr);\n                              setEditGrModal(true);\n                            }}\n                            disabled={!canUpdateGroups}\n                            title={getHelpMessage(canUpdateGroups)}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton\n                            color=\"error\"\n                            onClick={() => handleDeleteGr(gr.id)}\n                            disabled={!canDeleteGroups}\n                            title={getHelpMessage(canDeleteGroups)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Box>\n                      )}\n                    </Box>\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"subtitle2\">{i18nService.t('networks.details.responsable1')}</Typography>\n                      <Typography>{gr.responsable1?.username}</Typography>\n                      {gr.responsable2?.username && (\n                        <>\n                          <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>{i18nService.t('networks.details.responsable2')}</Typography>\n                          <Typography>{gr.responsable2?.username}</Typography>\n                        </>\n                      )}\n                      <Typography sx={{ mt: 1 }}>\n                        <strong>{i18nService.t('networks.details.nombreMembres')}</strong> {gr.members?.length}\n                      </Typography>\n                    </Box>\n                    {gr.members?.map((member) => {\n                      // Trouver les données complètes du membre dans networkData.members\n                      const fullMemberData = networkData.members?.find(m => \n                        (m.user?.id || m.user?._id) === (member.user?.id || member.user?._id)\n                      );\n                      const memberData = fullMemberData?.user || member.user || {};\n                      \n                      return (\n                        <Box\n                          key={member.user?.id || member.user?._id || member._id || `member-${Math.random()}`}\n                          sx={{\n                            p: 1,\n                            mb: 1,\n                            borderRadius: 1,\n                            bgcolor: 'background.default',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center'\n                          }}\n                        >\n                          <Typography>\n                            {memberData.username || i18nService.t('common_text.unknownName')} (\n                            <Typography \n                              component=\"span\" \n                              variant=\"caption\" \n                              sx={{ \n                                fontWeight: 'bold',\n                                fontSize: '0.9rem'\n                              }}\n                            >\n                              {formatQualificationWithFallback(memberData.qualification, i18nService.t('common.unknown'))}\n                            </Typography>\n                            )\n                          </Typography>\n                          {(permissions.isAdmin || permissions.isCollecteurReseaux || permissions.isSuperAdmin) && (\n                            <Box>\n                              <IconButton\n                                size=\"small\"\n                                                                onClick={() => {\n                                    // Debug de modification membre - Supprimé pour la production\n                                    \n                                    // Debug des données membre - Supprimé pour la production\n                                  \n                                  setSelectedMember(memberData.id || memberData._id);\n                                  setEditMemberForm({\n                                    username: memberData.username || '',\n                                    pseudo: memberData.pseudo || '',\n                                    genre: memberData.genre || '',\n                                    tranche_age: memberData.tranche_age || '',\n                                    profession: memberData.profession || '',\n                                    ville_residence: memberData.ville_residence || '',\n                                    origine: memberData.origine || '',\n                                    situation_matrimoniale: memberData.situation_matrimoniale || '',\n                                    niveau_education: memberData.niveau_education || '',\n                                    departement: memberData.departement || '',\n                                    departement_ids: memberData.user_departments?.map(ud => ud.department_id) || [],\n                                    qualification: memberData.qualification || '',\n                                    email: memberData.email || '',\n                                    telephone: memberData.telephone || '',\n                                    adresse: memberData.adresse || '',\n                                    image: memberData.image || ''\n                                  });\n                                \n                                                                  // Debug du formulaire - Supprimé pour la production\n                                  \n                                  // Vérifier l'état du formulaire après un délai\n                                  setTimeout(() => {\n                                    // Debug de l'état du formulaire - Supprimé pour la production\n                                  }, 100);\n                                \n                                  setEditMemberModal(true);\n                                }}\n                                disabled={!canUpdateUsers}\n                                title={getHelpMessage(canUpdateUsers)}\n                              >\n                                <EditIcon />\n                              </IconButton>\n                              <IconButton\n                                size=\"small\"\n                                color=\"error\"\n                                onClick={() => handleRemoveMember(gr.id, memberData.id || memberData._id)}\n                                disabled={!canUpdateGroups}\n                                title={getHelpMessage(canUpdateGroups)}\n                              >\n                                <DeleteIcon />\n                              </IconButton>\n                            </Box>\n                          )}\n                        </Box>\n                      );\n                    })}\n                  </CardContent>\n                  <CardActions sx={{ mt: 'auto', p: 2 }}>\n                    {(permissions.isAdmin || permissions.isCollecteurReseaux || permissions.isSuperAdmin) && (\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        onClick={() => {\n                          setSelectedGr(gr);\n                          setAddMemberModal(true);\n                        }}\n                        disabled={!canUpdateGroups}\n                        title={getHelpMessage(canUpdateGroups)}\n                      >\n                        {i18nService.t('networks.details.addMember')}\n                      </Button>\n                    )}\n                  </CardActions>\n                </StyledCard>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n\n        {/* Modales */}\n        <Dialog open={addGrModal} onClose={() => setAddGrModal(false)}>\n          <DialogTitle>{i18nService.t('networks.details.addGroupDialog')}</DialogTitle>\n          <DialogContent>\n            <Box component=\"form\" sx={{ pt: 2 }}>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.responsable1')}\n                sx={{ mb: 2 }}\n                required\n                value={selectedResponsable1 || ''}\n                onChange={e => setSelectedResponsable1(e.target.value)}\n              >\n                {networkData.available_users.map((user) => (\n                  <MenuItem key={user.id || user._id} value={user.id || user._id}>\n                    {user.username}\n                  </MenuItem>\n                ))}\n              </TextField>\n              \n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.responsable2Disabled')}\n                sx={{ mb: 2 }}\n                value={selectedResponsable2 || ''}\n                onChange={e => setSelectedResponsable2(e.target.value)}\n                disabled={true}\n                InputProps={{\n                  style: { \n                    backgroundColor: '#f5f5f5',\n                    color: '#666'\n                  }\n                }}\n                helperText={i18nService.t('common.actions.fieldTemporarilyDisabled')}\n              >\n                <MenuItem value=\"\">{i18nService.t('common.actions.none')}</MenuItem>\n                {networkData.available_users\n                  .filter((user) => user._id !== selectedResponsable1)\n                  .map((user) => (\n                    <MenuItem key={user.id || user._id} value={user.id || user._id}>\n                      {user.username}\n                    </MenuItem>\n                  ))}\n              </TextField>\n\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.responsibleQualification')}\n                sx={{ mb: 2 }}\n                required\n                value={selectedQualification || ''}\n                onChange={e => setSelectedQualification(e.target.value)}\n                helperText={i18nService.t('networks.details.qualificationAutoAssigned')}\n              >\n                <MenuItem value=\"QUALIFICATION_12\">12</MenuItem>\n                <MenuItem value=\"QUALIFICATION_144\">144</MenuItem>\n                <MenuItem value=\"QUALIFICATION_1728\">1728</MenuItem>\n                <MenuItem value=\"QUALIFICATION_20738\">20738</MenuItem>\n                <MenuItem value=\"QUALIFICATION_248832\">248832</MenuItem>\n              </TextField>\n\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.superior')}\n                sx={{ mb: 2 }}\n                value={selectedSuperieurHierarchique || ''}\n                onChange={e => setSelectedSuperieurHierarchique(e.target.value)}\n                helperText={i18nService.t('networks.details.selectSuperior')}\n              >\n                <MenuItem value=\"\">{i18nService.t('networks.details.noSuperior')}</MenuItem>\n                {/* Responsables de réseau */}\n                {networkData.reseau?.responsable1 && (\n                  <MenuItem value={networkData.reseau.responsable1.id || networkData.reseau.responsable1._id}>\n                    {networkData.reseau.responsable1.username} - {i18nService.t('networks.details.networkResponsible')}\n                  </MenuItem>\n                )}\n                {networkData.reseau?.responsable2 && (\n                  <MenuItem value={networkData.reseau.responsable2.id || networkData.reseau.responsable2._id}>\n                    {networkData.reseau.responsable2.username} - {i18nService.t('networks.details.networkResponsible')}\n                  </MenuItem>\n                )}\n                {/* Responsables de groupes existants */}\n                {networkData.grs?.map((groupe) => (\n                  <MenuItem key={groupe.id || groupe._id} value={groupe.responsable1?.id || groupe.responsable1?._id}>\n                    {groupe.responsable1?.username} - {groupe.qualification || i18nService.t('networks.details.group')}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.nomGroupe')}\n                sx={{ mb: 2 }}\n                value={newGroupName || ''}\n                InputProps={{\n                  readOnly: true,\n                }}\n                placeholder={i18nService.t('networks.details.nameAutoGenerated')}\n                helperText={i18nService.t('networks.details.nameGeneratedFromResponsible')}\n              />\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setAddGrModal(false)}>{i18nService.t('networks.details.cancel')}</Button>\n            <Button \n              variant=\"contained\" \n              onClick={() => handleAddGr({\n                responsable1: selectedResponsable1,\n                responsable2: selectedResponsable2,\n                qualification: selectedQualification,\n                superieur_hierarchique: selectedSuperieurHierarchique\n              })}\n              disabled={!canCreateGroups || !selectedResponsable1 || !selectedQualification}\n              title={getHelpMessage(canCreateGroups)}\n            >\n              {i18nService.t('common.actions.add')}\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={addMemberModal}\n          onClose={() => {\n            setAddMemberModal(false);\n            setNewMemberMode(false);\n            setSertDepartement(false);\n            setMemberForm({\n              username: '',\n              pseudo: '',\n              email: '',\n              password: '',\n              role: 'MEMBRE',\n              genre: '',\n              tranche_age: '',\n              profession: '',\n              ville_residence: '',\n              origine: '',\n              situation_matrimoniale: '',\n              niveau_education: '',\n              departement: '',\n              departement_ids: [],\n              qualification: '',\n              telephone: '',\n              adresse: '',\n              image: ''\n            });\n          }}\n          maxWidth=\"sm\"\n          fullWidth\n        >\n          <DialogTitle>{i18nService.t('networks.details.addMember')}</DialogTitle>\n          <DialogContent>\n            <Box sx={{ pt: 2, mb: 2 }}>\n              <Button\n                variant={!newMemberMode ? \"contained\" : \"outlined\"}\n                onClick={() => setNewMemberMode(false)}\n                sx={{ mr: 1 }}\n                disabled={!canUpdateGroups}\n                title={getHelpMessage(canCreateGroups)}\n              >\n                {i18nService.t('networks.details.selectExistingMember')}\n              </Button>\n              <Button\n                variant={newMemberMode ? \"contained\" : \"outlined\"}\n                onClick={() => setNewMemberMode(true)}\n                disabled={!canUpdateGroups}\n                title={getHelpMessage(canCreateGroups)}\n              >\n                {i18nService.t('networks.details.createNewMember')}\n              </Button>\n            </Box>\n\n            <Box component=\"form\" sx={{ pt: 2 }}>\n              {!newMemberMode ? (\n                <TextField\n                  select\n                  fullWidth\n                  label={i18nService.t('networks.details.selectMember')}\n                  value={selectedMember || ''}\n                                      onChange={(e) => {\n                      // Debug du champ sélection - Supprimé pour la production\n                      setSelectedMember(e.target.value);\n                      // Debug de la mise à jour - Supprimé pour la production\n                    }}\n                  required\n                  disabled={!canUpdateGroups}\n                  title={getHelpMessage(canCreateGroups)}\n                >\n                  {networkData.available_users.filter(user => ![i18nService.t('qualifications.governance'), i18nService.t('qualifications.networkResponsible'), i18nService.t('qualifications.ecodim'), i18nService.t('qualifications.ecodimResponsible')].includes(user.qualification)).map((user) => (\n                    <MenuItem key={user.id || user._id} value={user.id || user._id}>\n                      {user.username} (\n                      <Typography \n                        component=\"span\" \n                        variant=\"caption\" \n                        sx={{ \n                          fontWeight: 'bold',\n                          fontSize: '0.75rem'\n                        }}\n                      >\n                        {formatQualificationWithFallback(user.qualification)}\n                      </Typography>\n                      )\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : (\n                <>\n                  <TextField\n                    fullWidth\n                    label={i18nService.t('auth.register.username')}\n                    value={memberForm.username}\n                    onChange={(e) => setMemberForm({ ...memberForm, username: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  />\n                  <TextField\n                    fullWidth\n                    label={i18nService.t('auth.register.pseudo')}\n                    value={memberForm.pseudo}\n                    onChange={(e) => setMemberForm({ ...memberForm, pseudo: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  />\n                  <TextField\n                    fullWidth\n                    label={i18nService.t('auth.register.email')}\n                    type=\"email\"\n                    value={memberForm.email}\n                    onChange={(e) => setMemberForm({ ...memberForm, email: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  />\n                  <TextField\n                    fullWidth\n                    label={i18nService.t('auth.register.telephone')}\n                    value={memberForm.telephone}\n                    onChange={(e) => setMemberForm({ ...memberForm, telephone: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  />\n                  <TextField\n                    fullWidth\n                    label={i18nService.t('auth.register.adresse')}\n                    value={memberForm.adresse}\n                    onChange={(e) => setMemberForm({ ...memberForm, adresse: e.target.value })}\n                    sx={{ mb: 2 }}\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  />\n                  {/* Section Upload d'image */}\n                  <Box sx={{ mb: 2 }}>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\n                      {i18nService.t('auth.register.profileImage')}\n                    </Typography>\n                    \n                    {/* Aperçu de l'image */}\n                    {(memberForm.image || imagePreview) && (\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                        <img\n                          src={imagePreview || memberForm.image}\n                          alt=\"Aperçu\"\n                          style={{\n                            width: 60,\n                            height: 60,\n                            borderRadius: '50%',\n                            objectFit: 'cover',\n                            marginRight: 16\n                          }}\n                        />\n                        <Button\n                          size=\"small\"\n                          color=\"error\"\n                          onClick={handleRemoveImage}\n                          disabled={!canUpdateGroups}\n                        >\n                          {i18nService.t('common.actions.remove')}\n                        </Button>\n                      </Box>\n                    )}\n                    \n                    {/* Bouton d'upload */}\n                    <Button\n                      variant=\"outlined\"\n                      component=\"label\"\n                      disabled={!canUpdateGroups}\n                      sx={{ mb: 1 }}\n                    >\n                      {i18nService.t('auth.register.selectImage')}\n                      <input\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n                        onChange={handleImageSelect}\n                      />\n                    </Button>\n                   \n                  </Box>\n\n                  <TextField\n                    select\n                    fullWidth\n                    label={i18nService.t('auth.register.genre')}\n                    value={memberForm.genre}\n                    onChange={(e) => setMemberForm({ ...memberForm, genre: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  >\n                    {GENRE_OPTIONS.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    select\n                    fullWidth\n                    label={i18nService.t('auth.register.ageRange')}\n                    value={memberForm.tranche_age}\n                    onChange={(e) => setMemberForm({ ...memberForm, tranche_age: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  >\n                    {TRANCHE_AGE_OPTIONS.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    fullWidth\n                    label={i18nService.t('auth.register.profession')}\n                    value={memberForm.profession}\n                    onChange={(e) => setMemberForm({ ...memberForm, profession: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  />\n                  <TextField\n                    fullWidth\n                    label={i18nService.t('auth.register.villeResidence')}\n                    value={memberForm.ville_residence}\n                    onChange={(e) => setMemberForm({ ...memberForm, ville_residence: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  />\n                  <TextField\n                    select\n                    fullWidth\n                    label={i18nService.t('auth.register.originCountry')}\n                    value={memberForm.origine}\n                    onChange={(e) => setMemberForm({ ...memberForm, origine: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  >\n                    {COUNTRIES.map((country) => (\n                      <MenuItem key={country.value} value={country.value}>{country.label}</MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    select\n                    fullWidth\n                    label={i18nService.t('auth.register.situationMatrimoniale')}\n                    value={memberForm.situation_matrimoniale}\n                    onChange={(e) => setMemberForm({ ...memberForm, situation_matrimoniale: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  >\n                    {SITUATION_MATRIMONIALE_OPTIONS.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    select\n                    fullWidth\n                    label={i18nService.t('auth.register.educationLevel')}\n                    value={memberForm.niveau_education}\n                    onChange={(e) => setMemberForm({ ...memberForm, niveau_education: e.target.value })}\n                    sx={{ mb: 2 }}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  >\n                    {NIVEAU_EDUCATION_OPTIONS.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                    ))}\n                  </TextField>\n\n                  <TextField\n                    select\n                    fullWidth\n                    label={i18nService.t('auth.register.qualification')}\n                    value={memberForm.qualification}\n                    onChange={(e) => setMemberForm({ ...memberForm, qualification: e.target.value })}\n                    required\n                    disabled={!canUpdateGroups}\n                    title={getHelpMessage(canCreateGroups)}\n                  >\n                    {QUALIFICATION_OPTIONS.filter(qual => ![i18nService.t('qualifications.governance'), i18nService.t('qualifications.networkResponsible'), i18nService.t('qualifications.ecodim'), i18nService.t('qualifications.ecodimResponsible')].includes(qual.value)).map((qual) => (\n                      <MenuItem key={qual.value} value={qual.value}>{qual.label}</MenuItem>\n                    ))}\n                  </TextField>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={sertDepartement}\n                        onChange={(e) => setSertDepartement(e.target.checked)}\n                        disabled={!canUpdateGroups}\n                        title={getHelpMessage(canCreateGroups)}\n                      />\n                    }\n                    label={i18nService.t('networks.details.sertDepartement')}\n                    sx={{ mb: 2 }}\n                  />\n                  {sertDepartement && (\n                    <FormControl fullWidth sx={{ mb: 2 }} disabled={!canUpdateGroups}>\n                      <InputLabel>{i18nService.t('auth.register.departments')}</InputLabel>\n                      <Select\n                        multiple\n                        value={memberForm.departement_ids || []}\n                        onChange={(e) => setMemberForm({ ...memberForm, departement_ids: e.target.value })}\n                        renderValue={(selected) => (\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                            {selected.map((value) => {\n                              const dept = departments.find(d => (d.id || d._id) === value);\n                              return (\n                                <Chip \n                                  key={value} \n                                  label={dept ? dept.nom : value} \n                                  size=\"small\"\n                                />\n                              );\n                            })}\n                          </Box>\n                        )}\n                      >\n                        {departments.map((dept) => (\n                          <MenuItem key={dept.id || dept._id} value={dept.id || dept._id}>\n                            {dept.nom}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )}\n\n                </>\n              )}\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                // Définir l'église locale par défaut pour les non-super-admin\n                let defaultEgliseLocale = '';\n                if ((user?.current_role || user?.role) !== 'SUPER_ADMIN') {\n                  // Priorité 1: Église sélectionnée dans le filtre global\n                  if (selectedChurch?.id || selectedChurch?._id) {\n                    defaultEgliseLocale = selectedChurch.id || selectedChurch._id;\n                  }\n                  // Priorité 2: Église de l'utilisateur connecté (fallback)\n                  else if (user?.eglise_locale) {\n                    defaultEgliseLocale = typeof user.eglise_locale === 'object' \n                      ? (user.eglise_locale.id || user.eglise_locale._id)\n                      : user.eglise_locale;\n                  }\n                }\n                \n                setAddMemberModal(false);\n                setNewMemberMode(false);\n                setMemberForm({\n                  username: '',\n                  pseudo: '',\n                  email: '',\n                  password: '',\n                  role: 'MEMBRE',\n                  genre: '',\n                  tranche_age: '',\n                  profession: '',\n                  ville_residence: '',\n                  origine: '',\n                  situation_matrimoniale: '',\n                  niveau_education: '',\n                  eglise_locale: defaultEgliseLocale,\n                  departement: '',\n                  departement_ids: [],\n                  qualification: '',\n                  telephone: '',\n                  adresse: '',\n                  image: ''\n                });\n              }}\n            >\n              {i18nService.t('networks.details.cancel')}\n            </Button>\n            <Button\n              variant=\"contained\"\n                              onClick={(e) => {\n                  // Debug du bouton - Supprimé pour la production\n                  \n                  if (newMemberMode) {\n                    // Mode création : passer le formulaire complet\n                    // Debug du mode création - Supprimé pour la production\n                    handleAddMember(memberForm);\n                  } else {\n                    // Mode sélection : passer l'ID du membre sélectionné\n                    // Debug du mode sélection - Supprimé pour la production\n                    if (!selectedMember) {\n                      // Debug de l'erreur - Supprimé pour la production\n                      setSnackbar({ open: true, message: i18nService.t('networks.details.selectMember'), severity: 'error' });\n                      return;\n                    }\n                    // Debug de l'envoi - Supprimé pour la production\n                    handleAddMember({ user_id: selectedMember });\n                  }\n                }}\n              disabled={\n                !canUpdateGroups ||\n                (newMemberMode ? !memberForm.username || !memberForm.email || !memberForm.qualification : !selectedMember)\n              }\n              title={getHelpMessage(canCreateGroups)}\n            >\n              {i18nService.t('networks.details.addMember')}\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={editGrModal} onClose={() => setEditGrModal(false)}\n          onEnter={async () => {\n            if (selectedGr) {\n              try {\n                const groupId = selectedGr.id || selectedGr._id;\n                                  if (!groupId) {\n                    // Debug de l'erreur - Supprimé pour la production\n                    setSnackbar({ open: true, message: i18nService.t('networks.details.invalidGroupId'), severity: 'error' });\n                    return;\n                  }\n                \n                const res = await apiService.groups.getById(groupId);\n                                  const group = res.data?.data || res.data || {};\n                  // Debug du groupe récupéré - Supprimé pour la production\n                \n                setSelectedResponsable1(\n                  group.responsable1\n                    ? (typeof group.responsable1 === 'object' ? group.responsable1.id || group.responsable1._id : group.responsable1)\n                    : ''\n                );\n                setSelectedResponsable2(\n                  group.responsable2\n                    ? (typeof group.responsable2 === 'object' ? group.responsable2.id || group.responsable2._id : group.responsable2)\n                    : ''\n                );\n                              } catch (e) {\n                  // Erreur lors de la récupération - Supprimé pour la production\n                  setSelectedResponsable1('');\n                  setSelectedResponsable2('');\n                  setSnackbar({ open: true, message: i18nService.t('errors.api.getGroup'), severity: 'error' });\n                }\n            }\n          }}\n        >\n          <DialogTitle>{i18nService.t('networks.details.editGR')}</DialogTitle>\n          <DialogContent>\n            <Box component=\"form\" sx={{ pt: 2 }}>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.responsable1')}\n                value={selectedResponsable1}\n                onChange={e => setSelectedResponsable1(e.target.value)}\n                sx={{ mb: 2, minWidth: 250 }}\n                required\n              >\n                {networkData.available_users.map((user) => (\n                  <MenuItem key={user.id || user._id} value={user.id || user._id}>\n                    {user.username} (\n                    <Typography \n                      component=\"span\" \n                      variant=\"caption\" \n                      sx={{ \n                        fontWeight: 'bold',\n                        fontSize: '0.75rem'\n                      }}\n                    >\n                      {formatQualificationWithFallback(user.qualification)}\n                    </Typography>\n                    )\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.responsable2')}\n                value={selectedResponsable2}\n                onChange={e => setSelectedResponsable2(e.target.value)}\n                sx={{ mb: 2, minWidth: 250 }}\n                disabled={true}\n                InputProps={{\n                  style: { \n                    backgroundColor: '#f5f5f5',\n                    color: '#666'\n                  }\n                }}\n                helperText={i18nService.t('common.actions.fieldTemporarilyDisabled')}\n              >\n                <MenuItem value=\"\">{i18nService.t('common.actions.none')}</MenuItem>\n                {networkData.available_users.map((user) => (\n                  <MenuItem key={user.id || user._id} value={user.id || user._id}>\n                    {user.username} (\n                    <Typography \n                      component=\"span\" \n                      variant=\"caption\" \n                      sx={{ \n                        fontWeight: 'bold',\n                        fontSize: '0.75rem'\n                      }}\n                    >\n                      {formatQualificationWithFallback(user.qualification)}\n                    </Typography>\n                    )\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => { setEditGrModal(false); setSelectedResponsable1(''); setSelectedResponsable2(''); }}>{i18nService.t('networks.details.cancel')}</Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                const groupId = selectedGr?.id || selectedGr?._id;\n                if (!groupId) {\n                  setSnackbar({ open: true, message: i18nService.t('networks.details.invalidGroupId'), severity: 'error' });\n                  return;\n                }\n                \n                const updateData = {\n                  id: groupId,\n                  responsable1_id: selectedResponsable1,\n                  responsable2_id: selectedResponsable2 || null\n                };\n                \n                                  // Debug des données de mise à jour - Supprimé pour la production\n                  handleEditGr(updateData);\n                }}\n              color=\"primary\"\n              disabled={!canUpdateGroups || !selectedResponsable1}\n              title={getHelpMessage(canUpdateGroups)}\n            >\n              {i18nService.t('common.actions.edit')}\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Modal d'édition de membre */}\n        <Dialog open={editMemberModal} onClose={() => setEditMemberModal(false)} maxWidth=\"sm\" fullWidth>\n          <DialogTitle>{i18nService.t('networks.details.editMember')}</DialogTitle>\n          <DialogContent>\n            <Box component=\"form\" sx={{ pt: 2 }}>\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.username')}\n                value={editMemberForm.username}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, username: e.target.value })}\n                sx={{ mb: 2 }}\n                required\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              />\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.pseudo')}\n                value={editMemberForm.pseudo}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, pseudo: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              />\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.email')}\n                value={editMemberForm.email}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, email: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              />\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.telephone')}\n                value={editMemberForm.telephone}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, telephone: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              />\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.address')}\n                value={editMemberForm.adresse}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, adresse: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              />\n              {/* Section Upload d'image pour édition */}\n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\n                  {i18nService.t('auth.register.profileImage')}\n                </Typography>\n                \n                {/* Aperçu de l'image */}\n                {(editMemberForm.image || editImagePreview) && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <img\n                      src={editImagePreview || editMemberForm.image}\n                      alt=\"Aperçu\"\n                      style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: '50%',\n                        objectFit: 'cover',\n                        marginRight: 16\n                      }}\n                    />\n                    <Button\n                      size=\"small\"\n                      color=\"error\"\n                      onClick={handleEditRemoveImage}\n                      disabled={!canUpdateUsers}\n                    >\n                      {i18nService.t('common.actions.remove')}\n                    </Button>\n                  </Box>\n                )}\n                \n                {/* Bouton d'upload */}\n                <Button\n                  variant=\"outlined\"\n                  component=\"label\"\n                  disabled={!canUpdateUsers}\n                  sx={{ mb: 1 }}\n                >\n                  {i18nService.t('auth.register.selectImage')}\n                  <input\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n                    onChange={handleEditImageSelect}\n                  />\n                </Button>\n                \n                \n                <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1, color: 'text.secondary' }}>\n                  L'image sera envoyée lors de la modification du membre\n                </Typography>\n              </Box>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.genre')}\n                value={editMemberForm.genre}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, genre: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              >\n                {GENRE_OPTIONS.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.ageRange')}\n                value={editMemberForm.tranche_age}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, tranche_age: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              >\n                {TRANCHE_AGE_OPTIONS.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.profession')}\n                value={editMemberForm.profession}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, profession: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              />\n              <TextField\n                fullWidth\n                label={i18nService.t('networks.details.residenceCity')}\n                value={editMemberForm.ville_residence}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, ville_residence: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              />\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.origin')}\n                value={editMemberForm.origine}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, origine: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              >\n                {COUNTRIES.map((country) => (\n                  <MenuItem key={country.value} value={country.value}>{country.label}</MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.maritalStatus')}\n                value={editMemberForm.situation_matrimoniale}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, situation_matrimoniale: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              >\n                {SITUATION_MATRIMONIALE_OPTIONS.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.educationLevel')}\n                value={editMemberForm.niveau_education}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, niveau_education: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              >\n                {NIVEAU_EDUCATION_OPTIONS.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                ))}\n              </TextField>\n              <FormControl fullWidth sx={{ mb: 2 }} disabled={!canUpdateUsers}>\n                <InputLabel>{i18nService.t('auth.register.departments')}</InputLabel>\n                <Select\n                  multiple\n                  value={editMemberForm.departement_ids || []}\n                  onChange={(e) => setEditMemberForm({ ...editMemberForm, departement_ids: e.target.value })}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map((value) => {\n                        const dept = departments.find(d => (d.id || d._id) === value);\n                        return (\n                          <Chip \n                            key={value} \n                            label={dept ? dept.nom : value} \n                            size=\"small\"\n                          />\n                        );\n                      })}\n                    </Box>\n                  )}\n                >\n                  {departments.map((dept) => (\n                    <MenuItem key={dept.id || dept._id} value={dept.id || dept._id}>\n                      {dept.nom}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <TextField\n                select\n                fullWidth\n                label={i18nService.t('networks.details.qualification')}\n                value={editMemberForm.qualification}\n                onChange={(e) => setEditMemberForm({ ...editMemberForm, qualification: e.target.value })}\n                sx={{ mb: 2 }}\n                disabled={!canUpdateUsers}\n                title={getHelpMessage(canUpdateUsers)}\n              >\n                {QUALIFICATION_OPTIONS.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                ))}\n              </TextField>\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setEditMemberModal(false)}>{i18nService.t('networks.details.cancel')}</Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => handleUpdateMember(editMemberForm)}\n              disabled={!canUpdateUsers}\n              title={getHelpMessage(canUpdateUsers)}\n            >\n              {i18nService.t('common.actions.edit')}\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n      </Container>\n\n      {/* Dialog de confirmation suppression GR */}\n      <DeleteConfirmDialog\n        open={deleteDialogOpen}\n        title={i18nService.t('networks.details.deleteGr')}\n        content={i18nService.t('networks.details.deleteGrContent')}\n        onClose={handleCloseDeleteDialog}\n        onConfirm={handleConfirmDeleteGr}\n      />\n      <DeleteConfirmDialog\n        open={deleteMemberDialogOpen}\n        title={i18nService.t('networks.details.deleteMember')}\n        content={i18nService.t('networks.details.deleteMemberContent')}\n        onClose={handleCloseDeleteMemberDialog}\n        onConfirm={handleConfirmDeleteMember}\n      />\n\n      {/* Snackbar feedback actions membres */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n\n      {/* Modal de prévisionnel */}\n      <PrevisionnelModal\n        open={previsionnelModal}\n        onClose={handlePrevisionnelModalClose}\n        onSave={handleSavePrevisionnel}\n        networkData={networkData}\n        isLoading={previsionnelLoading}\n      />\n\n      {/* Modal d'assistance */}\n      <AssistanceModal\n        open={assistanceModal}\n        onClose={handleAssistanceModalClose}\n        onSave={handleSaveAssistance}\n        networkData={networkData}\n        isLoading={assistanceLoading}\n      />\n\n      {/* Modal d'historique */}\n      <HistoriqueCulteModal\n        open={historiqueModal}\n        onClose={() => setHistoriqueModal(false)}\n        networkData={networkData}\n      />\n\n      </Box>\n    </AccessControl>\n  );\n};\n\n// ... autres JSX du composant ...\n\n\nexport default NetworkDetails;\n","/**\n * Formate une qualification pour l'affichage\n * @param {string} qualification - La qualification à formater\n * @returns {string} - La qualification formatée\n */\nexport const formatQualification = (qualification) => {\n  if (!qualification) return '';\n  \n  // Supprimer le préfixe \"QUALIFICATION_\" s'il existe\n  if (qualification.startsWith('QUALIFICATION_')) {\n    return qualification.replace('QUALIFICATION_', '');\n  }\n  \n  return qualification;\n};\n\n/**\n * Formate une qualification pour l'affichage avec fallback\n * @param {string} qualification - La qualification à formater\n * @param {string} fallback - Valeur par défaut si pas de qualification\n * @returns {string} - La qualification formatée ou le fallback\n */\nexport const formatQualificationWithFallback = (qualification, fallback = 'Non définie') => {\n  if (!qualification) return fallback;\n  \n  const formatted = formatQualification(qualification);\n  return formatted || fallback;\n};\n","import React from 'react';\nimport { Box, Typography, Paper } from '@mui/material';\nimport { usePermissions } from '../hooks/usePermissions';\nimport i18nService from '../services/i18nService';\n\nconst AccessControl = ({ \n  allowedRoles = [], \n  children, \n  fallback = null,\n  showMessage = true \n}) => {\n  const permissions = usePermissions();\n  \n  // Vérifier si l'utilisateur a un des rôles autorisés\n  const hasAccess = allowedRoles.some(role => {\n    switch (role) {\n      case 'SUPER_ADMIN':\n        return permissions.isSuperAdmin;\n      case 'ADMIN':\n        return permissions.isAdmin;\n      case 'MANAGER':\n        return permissions.isManager;\n      case 'SUPERVISEUR':\n        return permissions.isSuperviseur;\n      case 'COLLECTEUR_CULTE':\n        return permissions.isCollecteurCulte;\n      case 'COLLECTEUR_RESEAUX':\n        return permissions.isCollecteurReseaux;\n      default:\n        return false;\n    }\n  });\n\n  if (hasAccess) {\n    return children;\n  }\n\n  if (fallback) {\n    return fallback;\n  }\n\n  if (!showMessage) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ \n      display: 'flex', \n      justifyContent: 'center', \n      alignItems: 'center', \n      minHeight: '50vh',\n      p: 3\n    }}>\n      <Paper elevation={3} sx={{ p: 4, textAlign: 'center', maxWidth: 500 }}>\n        <Typography variant=\"h5\" color=\"error\" gutterBottom>\n          {i18nService.t('errors.accessDenied')}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n          {i18nService.t('errors.insufficientPermissions')}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {i18nService.t('errors.contactAdmin')}\n        </Typography>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default AccessControl;\n","import React from 'react';\nimport { Alert, AlertTitle, Box, Typography } from '@mui/material';\nimport i18nService from '../../services/i18nService';\n\n/**\n * Composant d'affichage d'erreur sécurisé\n * Assure qu'aucune information technique n'est exposée à l'utilisateur\n */\nconst SecureErrorMessage = ({ \n  error, \n  title = i18nService.t('common.actions.error'), \n  variant = 'error',\n  showTitle = true,\n  showIcon = true,\n  sx = {},\n  onClose,\n  action\n}) => {\n  // Si pas d'erreur, ne rien afficher\n  if (!error) return null;\n\n  // Déterminer le type d'erreur et le message approprié\n  const getErrorDisplay = () => {\n    // Si c'est un objet d'erreur traité par notre gestionnaire\n    if (error.type && error.message) {\n      return {\n        type: error.type,\n        message: error.message,\n        severity: getSeverity(error.type)\n      };\n    }\n\n    // Si c'est une erreur API avec message utilisateur\n    if (error.userMessage) {\n      return {\n        type: 'UNKNOWN',\n        message: error.userMessage,\n        severity: 'error'\n      };\n    }\n\n    // Si c'est une erreur avec message simple\n    if (error.message && typeof error.message === 'string') {\n      return {\n        type: 'UNKNOWN',\n        message: error.message,\n        severity: 'error'\n      };\n    }\n\n    // Erreur par défaut sécurisée\n    return {\n      type: 'UNKNOWN',\n      message: i18nService.t('common.unexpectedError'),\n      severity: 'error'\n    };\n  };\n\n  const getSeverity = (errorType) => {\n    switch (errorType) {\n      case 'VALIDATION':\n        return 'warning';\n      case 'AUTHENTICATION':\n      case 'AUTHORIZATION':\n        return 'info';\n      case 'NETWORK':\n        return 'warning';\n      case 'SERVER':\n        return 'error';\n      default:\n        return 'error';\n    }\n  };\n\n  const errorDisplay = getErrorDisplay();\n\n  return (\n    <Box sx={{ mb: 2, ...sx }}>\n      <Alert\n        severity={errorDisplay.severity}\n        variant={variant}\n        onClose={onClose}\n        action={action}\n        sx={{\n          '& .MuiAlert-message': {\n            width: '100%'\n          }\n        }}\n      >\n        {showTitle && (\n          <AlertTitle sx={{ fontWeight: 'bold' }}>\n            {title}\n          </AlertTitle>\n        )}\n        \n        <Typography variant=\"body2\" component=\"div\">\n          {errorDisplay.message}\n        </Typography>\n\n        {/* Informations de débogage pour les développeurs uniquement */}\n        {process.env.NODE_ENV === 'development' && error.status && (\n          <Typography \n            variant=\"caption\" \n            sx={{ \n              display: 'block', \n              mt: 1, \n              opacity: 0.7,\n              fontFamily: 'monospace'\n            }}\n          >\n            Code: {error.status} | Type: {errorDisplay.type}\n          </Typography>\n        )}\n      </Alert>\n    </Box>\n  );\n};\n\nexport default SecureErrorMessage;\n","// Service de gestion des préférences utilisateur\nclass PreferencesService {\n  constructor() {\n    this.storageKey = 'user_preferences';\n    this.defaultPreferences = {\n      language: 'fr',\n      theme: 'light',\n      autoTheme: true\n    };\n    this.loadPreferences();\n  }\n\n  // Charger les préférences depuis le localStorage\n  loadPreferences() {\n    try {\n      const stored = localStorage.getItem(this.storageKey);\n      if (stored) {\n        this.preferences = { ...this.defaultPreferences, ...JSON.parse(stored) };\n      } else {\n        this.preferences = { ...this.defaultPreferences };\n      }\n    } catch (error) {\n      // console.warn('Erreur lors du chargement des préférences:', error);\n      this.preferences = { ...this.defaultPreferences };\n    }\n  }\n\n  // Sauvegarder les préférences dans le localStorage\n  savePreferences() {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(this.preferences));\n    } catch (error) {\n      // console.error('Erreur lors de la sauvegarde des préférences:', error);\n    }\n  }\n\n  // Obtenir une préférence\n  getPreference(key) {\n    return this.preferences[key];\n  }\n\n  // Définir une préférence\n  setPreference(key, value) {\n    this.preferences[key] = value;\n    this.savePreferences();\n    this.applyPreferences();\n  }\n\n  // Obtenir toutes les préférences\n  getAllPreferences() {\n    return { ...this.preferences };\n  }\n\n  // Appliquer les préférences\n  applyPreferences() {\n    // Appliquer le thème\n    this.applyTheme();\n    \n    // Appliquer la langue\n    this.applyLanguage();\n  }\n\n  // Appliquer le thème\n  applyTheme() {\n    const { theme, autoTheme } = this.preferences;\n    \n    if (autoTheme) {\n      // Détecter automatiquement le thème système\n      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n      document.documentElement.setAttribute('data-theme', systemTheme);\n    } else {\n      document.documentElement.setAttribute('data-theme', theme);\n    }\n  }\n\n  // Appliquer la langue\n  applyLanguage() {\n    const { language } = this.preferences;\n    document.documentElement.setAttribute('lang', language);\n    \n    // Émettre un événement pour notifier les composants\n    window.dispatchEvent(new CustomEvent('languageChanged', { detail: { language } }));\n  }\n\n  // Écouter les changements de thème système\n  listenToSystemTheme() {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n    mediaQuery.addEventListener('change', (e) => {\n      if (this.preferences.autoTheme) {\n        this.applyTheme();\n      }\n    });\n  }\n\n  // Initialiser le service\n  init() {\n    this.applyPreferences();\n    this.listenToSystemTheme();\n  }\n}\n\n// Instance singleton\nconst preferencesService = new PreferencesService();\n\nexport default preferencesService;\n","import authAxios from './authService';\n\nclass AssistanceService {\n  // Créer une nouvelle assistance\n  async create(assistanceData) {\n    try {\n      const response = await authAxios.post('/assistance', assistanceData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Obtenir les statistiques d'assistance\n  async getStats(filters = {}) {\n    try {\n      const params = new URLSearchParams();\n      Object.keys(filters).forEach(key => {\n        if (filters[key]) {\n          params.append(key, filters[key]);\n        }\n      });\n\n      const response = await authAxios.get(`/assistance/stats?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Obtenir une assistance par ID\n  async getById(id) {\n    try {\n      const response = await authAxios.get(`/assistance/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Mettre à jour une assistance\n  async update(id, assistanceData) {\n    try {\n      const response = await authAxios.put(`/assistance/${id}`, assistanceData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Supprimer une assistance\n  async delete(id) {\n    try {\n      const response = await authAxios.delete(`/assistance/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default new AssistanceService();\n","import authAxios from './authService';\n\n/**\n * Service pour la gestion des préférences utilisateur via l'API\n */\nclass PreferencesApiService {\n  /**\n   * Récupère les préférences de l'utilisateur connecté\n   */\n  async getPreferences() {\n    try {\n      const response = await authAxios.get('/preferences');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des préférences:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Met à jour toutes les préférences\n   */\n  async updatePreferences(preferences) {\n    try {\n      const response = await authAxios.put('/preferences', preferences);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour des préférences:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Met à jour uniquement les préférences email\n   */\n  async updateEmailPreferences(email_notifications) {\n    try {\n      const response = await authAxios.put('/preferences/email', { email_notifications });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour des préférences email:', error);\n      throw error;\n    }\n  }\n}\n\nexport default new PreferencesApiService();\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Button,\n  Paper,\n  Grid,\n  Chip,\n  Alert,\n  Divider\n} from '@mui/material';\nimport { Language, Palette, Settings, Email } from '@mui/icons-material';\nimport { toast } from 'react-toastify';\nimport preferencesService from '../services/preferencesService';\nimport preferencesApiService from '../services/preferencesApiService';\nimport i18nService from '../services/i18nService';\n\n\nconst UserPreferences = () => {\n  const [preferences, setPreferences] = useState({\n    language: 'fr',\n    theme: 'light',\n    autoTheme: true,\n    email_notifications: true\n  });\n  const [initialPreferences, setInitialPreferences] = useState({\n    language: 'fr',\n    theme: 'light',\n    autoTheme: true,\n    email_notifications: true\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasChanges, setHasChanges] = useState(false);\n  const [forceUpdate, setForceUpdate] = useState(0);\n\n  // Charger les préférences au montage du composant\n  useEffect(() => {\n    const loadPreferences = async () => {\n      try {\n        const currentLanguage = i18nService.getCurrentLanguage();\n        const autoTheme = preferencesService.getPreference('autoTheme') || true;\n        \n        // Charger les préférences depuis l'API\n        const apiPreferences = await preferencesApiService.getPreferences();\n        \n        const loadedPreferences = {\n          language: apiPreferences?.data?.language || currentLanguage,\n          theme: apiPreferences?.data?.theme || 'light',\n          autoTheme,\n          email_notifications: apiPreferences?.data?.email_notifications ?? true\n        };\n        \n        setPreferences(loadedPreferences);\n        setInitialPreferences(loadedPreferences);\n      } catch (error) {\n        console.error('Erreur lors du chargement des préférences:', error);\n        // Utiliser les valeurs par défaut en cas d'erreur\n        const currentLanguage = i18nService.getCurrentLanguage();\n        const autoTheme = preferencesService.getPreference('autoTheme') || true;\n        \n        const defaultPreferences = {\n          language: currentLanguage,\n          theme: 'light',\n          autoTheme,\n          email_notifications: true\n        };\n        \n        setPreferences(defaultPreferences);\n        setInitialPreferences(defaultPreferences);\n      }\n    };\n\n    loadPreferences();\n  }, [preferences.theme]);\n\n  // Détecter les changements\n  useEffect(() => {\n    // Comparer avec les valeurs initiales chargées\n    const hasLanguageChanged = initialPreferences.language !== preferences.language;\n    const hasThemeChanged = initialPreferences.theme !== preferences.theme;\n    const hasAutoThemeChanged = initialPreferences.autoTheme !== preferences.autoTheme;\n    const hasEmailNotificationsChanged = initialPreferences.email_notifications !== preferences.email_notifications;\n    \n    const changed = hasLanguageChanged || hasThemeChanged || hasAutoThemeChanged || hasEmailNotificationsChanged;\n    setHasChanges(changed);\n  }, [preferences, initialPreferences]);\n\n  // Forcer la synchronisation des composants après sauvegarde\n  useEffect(() => {\n    if (forceUpdate > 0) {\n      // Synchroniser les composants avec les nouveaux paramètres\n      const currentLanguage = i18nService.getCurrentLanguage();\n      \n      setPreferences(prev => ({\n        ...prev,\n        language: currentLanguage,\n        theme: prev.theme\n      }));\n    }\n  }, [forceUpdate]);\n\n  // Gérer les changements de préférences\n  const handlePreferenceChange = (key, value) => {\n    setPreferences(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    \n    // Marquer qu'il y a des changements\n    setHasChanges(true);\n  };\n\n  // Sauvegarder les préférences\n  const handleSavePreferences = async () => {\n    setIsLoading(true);\n    \n    try {\n      // Appliquer tous les changements lors de la sauvegarde\n      i18nService.setLanguage(preferences.language);\n      // setTheme(preferences.theme); // DÉSACTIVÉ TEMPORAIREMENT\n      \n      // Sauvegarder via les services locaux\n      preferencesService.setPreference('autoTheme', preferences.autoTheme);\n      \n      // Sauvegarder les préférences via l'API\n      try {\n        const apiResponse = await preferencesApiService.updatePreferences({\n          email_notifications: preferences.email_notifications,\n          language: preferences.language,\n          theme: preferences.theme\n        });\n        \n        // Vérifier que la réponse API est valide\n        if (apiResponse && apiResponse.success) {\n          console.log('✅ Préférences sauvegardées avec succès via l\\'API');\n        } else {\n          console.warn('⚠️ Réponse API inattendue:', apiResponse);\n        }\n      } catch (apiError) {\n        console.error('❌ Erreur API lors de la sauvegarde des préférences:', apiError);\n        toast.error('Erreur lors de la sauvegarde sur le serveur, mais les changements locaux sont appliqués');\n        // Continuer même si l'API échoue, car les changements locaux sont déjà appliqués\n      }\n      \n      // Forcer la mise à jour des composants\n      setForceUpdate(prev => prev + 1);\n      \n      // Déclencher un événement global pour forcer la mise à jour de tous les composants\n      window.dispatchEvent(new CustomEvent('languageOrThemeChanged', {\n        detail: {\n          language: preferences.language,\n          theme: preferences.theme,\n          timestamp: Date.now()\n        }\n      }));\n      \n      toast.success(i18nService.t('success.preferencesSaved'));\n      setHasChanges(false);\n      // Mettre à jour les préférences initiales après sauvegarde\n      setInitialPreferences(preferences);\n    } catch (error) {\n      toast.error(i18nService.t('errors.general'));\n      console.error('Erreur de sauvegarde:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Réinitialiser les préférences\n  const handleResetPreferences = () => {\n    const defaultPreferences = {\n      language: 'fr',\n      theme: 'light',\n      autoTheme: true\n    };\n    \n    setPreferences(defaultPreferences);\n    \n    // Appliquer les préférences par défaut\n    i18nService.setLanguage('fr');\n    // setTheme('light'); // DÉSACTIVÉ TEMPORAIREMENT\n    \n    setHasChanges(false);\n    // Mettre à jour les préférences initiales après réinitialisation\n    setInitialPreferences(preferences);\n  };\n\n  return (\n    <Paper sx={{ p: 3, mb: 3 }}>\n      <Box display=\"flex\" alignItems=\"center\" mb={3}>\n        <Settings sx={{ mr: 2, color: 'primary.main' }} />\n        <Typography variant=\"h6\" component=\"h3\">\n          {i18nService.t('profile.preferences.title')}\n        </Typography>\n      </Box>\n\n      <Grid container spacing={3}>\n        {/* Section Langue */}\n        <Grid item xs={12} md={6}>\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <Language sx={{ mr: 1, color: 'primary.main' }} />\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                {i18nService.t('profile.preferences.language.title')}\n              </Typography>\n            </Box>\n            \n            <FormControl fullWidth>\n              <InputLabel>\n                {i18nService.t('profile.preferences.language.title')}\n              </InputLabel>\n              <Select\n                value={preferences.language}\n                onChange={(e) => handlePreferenceChange('language', e.target.value)}\n                label={i18nService.t('profile.preferences.language.title')}\n              >\n                {i18nService.getAvailableLanguages().map((lang) => (\n                  <MenuItem key={lang.code} value={lang.code}>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <span style={{ marginRight: '8px' }}>{lang.flag}</span>\n                      <span>{lang.nativeName || lang.code.toUpperCase()}</span>\n                    </Box>\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            \n\n          </Box>\n        </Grid>\n\n        {/* Section Notifications Email */}\n        <Grid item xs={12} md={6}>\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <Email sx={{ mr: 1, color: 'primary.main' }} />\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                {i18nService.t('profile.preferences.email.title')}\n              </Typography>\n            </Box>\n            \n            <FormControlLabel\n              control={\n                <Switch\n                  checked={preferences.email_notifications}\n                  onChange={(e) => handlePreferenceChange('email_notifications', e.target.checked)}\n                  color=\"primary\"\n                />\n              }\n              label={\n                <Box>\n                  <Typography variant=\"body2\">\n                    {i18nService.t('profile.preferences.email.notifications')}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {i18nService.t('profile.preferences.email.description')}\n                  </Typography>\n                </Box>\n              }\n            />\n          </Box>\n        </Grid>\n\n        {/* Section Thème - DÉSACTIVÉE TEMPORAIREMENT */}\n        <Grid item xs={12} md={6}>\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <Palette sx={{ mr: 1, color: 'primary.main' }} />\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                {i18nService.t('profile.preferences.theme.title')}\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontStyle: 'italic' }}>\n              {i18nService.t('profile.preferences.theme.disabled')}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Divider sx={{ my: 3 }} />\n\n      {/* Actions */}\n      <Box display=\"flex\" gap={2} justifyContent=\"flex-end\">\n        <Button\n          variant=\"outlined\"\n          onClick={handleResetPreferences}\n          disabled={isLoading}\n        >\n          {i18nService.t('common.actions.reset')}\n        </Button>\n        \n        <Button\n          variant=\"contained\"\n          onClick={handleSavePreferences}\n          disabled={isLoading || !hasChanges}\n          startIcon={isLoading ? null : null}\n        >\n          {isLoading ? i18nService.t('common.actions.saving') : i18nService.t('profile.actions.savePreferences')}\n        </Button>\n      </Box>\n\n      {/* Indicateur de changements */}\n      {hasChanges && (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          {i18nService.t('profile.preferences.unsavedChanges')}\n        </Alert>\n      )}\n\n\n    </Paper>\n  );\n};\n\nexport default UserPreferences;\n","import authAxios from './authService';\n\nclass PrevisionnelService {\n  // Créer un nouveau prévisionnel\n  async create(previsionnelData) {\n    try {\n      const response = await authAxios.post('/previsionnels', previsionnelData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Récupérer les prévisionnels d'un réseau\n  async getByNetwork(networkId, filters = {}) {\n    try {\n      const params = new URLSearchParams();\n      \n      if (filters.page) params.append('page', filters.page);\n      if (filters.limit) params.append('limit', filters.limit);\n      if (filters.type_culte) params.append('type_culte', filters.type_culte);\n      if (filters.date_from) params.append('date_from', filters.date_from);\n      if (filters.date_to) params.append('date_to', filters.date_to);\n\n      const response = await authAxios.get(`/previsionnels/network/${networkId}?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Récupérer un prévisionnel par ID\n  async getById(id) {\n    try {\n      const response = await authAxios.get(`/previsionnels/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Mettre à jour un prévisionnel\n  async update(id, previsionnelData) {\n    try {\n      const response = await authAxios.put(`/previsionnels/${id}`, previsionnelData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Supprimer un prévisionnel\n  async delete(id) {\n    try {\n      const response = await authAxios.delete(`/previsionnels/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Récupérer les statistiques de prévisionnels\n  async getStats(filters = {}) {\n    try {\n      const params = new URLSearchParams();\n      \n      if (filters.church_id) params.append('church_id', filters.church_id);\n      if (filters.network_id) params.append('network_id', filters.network_id);\n      if (filters.type_culte) params.append('type_culte', filters.type_culte);\n      if (filters.date_from) params.append('date_from', filters.date_from);\n      if (filters.date_to) params.append('date_to', filters.date_to);\n\n      const url = `/previsionnels/stats?${params.toString()}`;\n      \n      const response = await authAxios.get(url);\n      return response.data;\n    } catch (error) {\n      //console.error('❌ PrevisionnelService - Erreur dans getStats:', error);\n      /* console.error('❌ PrevisionnelService - Détails de l\\'erreur:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status,\n        config: error.config\n      }); */\n      throw error;\n    }\n  }\n}\n\nconst previsionnelService = new PrevisionnelService();\nexport default previsionnelService;\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from '@mui/material';\nimport i18nService from '../services/i18nService';\n\nconst DeleteConfirmDialog = ({\n  open,\n  onClose,\n  onConfirm,\n  title,\n  content\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {title}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {content}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>{i18nService.t('common.actions.cancel')}</Button>\n        <Button\n          onClick={onConfirm}\n          color=\"error\"\n          variant=\"contained\"\n          autoFocus\n        >\n          {i18nService.t('common.actions.delete')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteConfirmDialog;\n","import authAxios from './authService';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\nexport const chaineImpactService = {\n  // Récupérer la chaîne d'impact d'une église sous forme d'arbre hiérarchique\n  getChaineImpact: async (churchId) => {\n    try {\n      const response = await authAxios.get(`/chaine-impact?church_id=${churchId}`);\n      return response.data; // Retourne maintenant { success, church_id, total_nodes, tree }\n    } catch (error) {\n      // console.error('Erreur lors de la récupération de la chaîne d\\'impact:', error);\n      throw error;\n    }\n  },\n\n  // Récupérer la chaîne d'impact d'un utilisateur spécifique\n  getChaineImpactByUser: async (userId) => {\n    try {\n      const response = await authAxios.get(`/chaine-impact/user/${userId}`);\n      return response.data;\n    } catch (error) {\n      // console.error('Erreur lors de la récupération de la chaîne d\\'impact de l\\'utilisateur:', error);\n      throw error;\n    }\n  },\n\n  // Mettre à jour/rebâtir automatiquement la chaîne d'impact\n  updateChaineImpact: async (churchId) => {\n    try {\n      const response = await authAxios.post('/chaine-impact/update', { church_id: churchId });\n      return response.data;\n    } catch (error) {\n      // console.error('Erreur lors de la mise à jour de la chaîne d\\'impact:', error);\n      throw error;\n    }\n  },\n\n  // Supprimer la chaîne d'impact d'une église\n  deleteChaineImpact: async (churchId) => {\n    try {\n      const response = await authAxios.delete(`/chaine-impact/${churchId}`);\n      return response.data;\n    } catch (error) {\n      // console.error('Erreur lors de la suppression de la chaîne d\\'impact:', error);\n      throw error;\n    }\n  }\n};\n\nexport default chaineImpactService;\n"],"names":["_ref","_networkData$reseau","open","onClose","onSave","networkData","isLoading","formData","setFormData","useState","date","Date","type_culte","groupes_previsions","totalPrevisionnel","setTotalPrevisionnel","errors","setErrors","useEffect","grs","Array","isArray","groupesPrevisions","forEach","gr","_gr$members","_gr$responsable","_gr$responsable$usern","_gr$responsable2","_gr$responsable3","_gr$responsable3$user","effectifActuel","members","length","nom","concat","responsable1","username","split","responsable2","id","effectif_actuel","valeur_previsionnelle","prev","_objectSpread","total","Object","values","reduce","sum","groupe","parseInt","handleClose","cultesOptions","TYPES_CULTE_OPTIONS","filter","option","value","_jsxs","Dialog","maxWidth","fullWidth","PaperProps","sx","height","children","DialogTitle","_jsx","Typography","variant","component","i18nService","t","color","reseau","DialogContent","dividers","p","Box","mb","Grid","container","spacing","item","xs","md","TextField","type","label","toISOString","onChange","e","target","error","helperText","required","InputLabelProps","shrink","minWidth","select","map","MenuItem","Divider","my","previsions","Alert","severity","gutterBottom","sm","Card","CardContent","handleGroupPrevisionChange","groupId","numericValue","inputProps","min","size","invites","DialogActions","display","justifyContent","alignItems","fontWeight","Button","onClick","disabled","mr","handleSubmit","validateForm","newErrors","some","keys","totalAvecInvites","payload","total_prevu","network_id","church_id","eglise_id","group_id","_networkData$reseau2","_networkData$reseau3","groupes_assistance","loading","setLoading","setError","previsionnel","setPrevisionnel","totalPresents","setTotalPresents","groupesAssistance","_groupe$members","_groupe$responsable","_groupe$responsable$u","_groupe$responsable2","_groupe$responsable3","_groupe$responsable3$","nombre_presents","async","response","previsionnelService","getStats","date_from","date_to","data","details","loadPrevisionnel","handleInputChange","field","ecart","handleGroupeChange","groupeId","max","textAlign","Chip","mt","Error","total_presents","_error$response","_error$response$data","message","activeTab","setActiveTab","previsionnels","setPrevisionnels","assistances","setAssistances","deleteDialog","setDeleteDialog","title","content","snackbar","setSnackbar","loadHistorique","timer","setTimeout","dialogElement","document","querySelector","focus","clearTimeout","_previsionnelsRes$dat","_previsionnelsRes$dat2","_assistancesRes$data","_assistancesRes$data2","previsionnelsRes","limit","assistancesRes","assistanceService","previsionnelsData","assistancesData","console","openDeleteDialog","isPrevisionnel","format","locale","fr","typeCulte","handleCloseSnackbar","formatDate","dateString","_unused","getTypeCulteLabel","renderPrevisionnelCard","boxShadow","gap","CalendarIcon","fontSize","total_previsionnel","Tooltip","IconButton","DeleteIcon","renderAssistanceCard","assistance","effectif_reel","_Fragment","disableEscapeKeyDown","disableRestoreFocus","keepMounted","minHeight","HistoryIcon","RefreshIcon","borderBottom","borderColor","Tabs","newValue","Tab","TrendingUpIcon","CheckCircleIcon","CircularProgress","m","index","itemId","delete","a","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","width","constructor","this","themes","light","name","displayName","icon","description","variables","dark","currentTheme","getStoredTheme","autoTheme","getStoredAutoTheme","systemTheme","detectSystemTheme","init","applyTheme","listenToSystemThemeChanges","listenToThemeChanges","window","matchMedia","matches","localStorage","getItem","setStoredTheme","theme","setItem","stored","JSON","parse","setStoredAutoTheme","stringify","setTheme","dispatchThemeChangeEvent","setAutoTheme","enabled","themeData","root","documentElement","entries","variable","style","setProperty","setAttribute","classList","remove","add","getCurrentTheme","getCurrentThemeInfo","getAvailableThemes","isThemeSupported","hasOwnProperty","getCSSVariable","getComputedStyle","getPropertyValue","setCSSVariable","getAllCSSVariables","event","CustomEvent","detail","themeInfo","dispatchEvent","addEventListener","applySystemTheme","getContrastRatio","color1","color2","checkAccessibility","textContrast","focusRing","undefined","selectionBackground","generateCustomTheme","primaryColor","exportThemeConfig","cssVariables","importThemeConfig","config","resetTheme","prepareForPrint","_ref2","restoreAfterPrint","StyledCard","styled","flexDirection","transition","transform","StatCard","Paper","padding","NetworkDetails","_networkData$reseau$r","_networkData$reseau$r2","_networkData$reseau$r3","_networkData$reseau5","_networkData$reseau6","_networkData$grs2","user","isAuthenticated","useAuth","networkId","useParams","selectedChurch","useSelectedChurch","canCreateGroups","canUpdateGroups","canDeleteGroups","canUpdateUsers","isAdmin","isManager","isSuperAdmin","isCollecteurReseaux","usePermissions","permissions","getHelpMessage","permission","churches","setChurches","departments","setDepartments","_churchesRes$data","_departmentsRes$data","churchesRes","departmentsRes","Promise","all","apiService","getAll","churchesData","departmentsData","loadInitialData","selectedResponsable1","setSelectedResponsable1","selectedResponsable2","setSelectedResponsable2","selectedQualification","setSelectedQualification","selectedSuperieurHierarchique","setSelectedSuperieurHierarchique","newGroupName","setNewGroupName","addGrModal","setAddGrModal","editGrModal","setEditGrModal","addMemberModal","setAddMemberModal","newMemberMode","setNewMemberMode","selectedGr","setSelectedGr","selectedMember","setSelectedMember","previsionnelModal","setPrevisionnelModal","assistanceModal","setAssistanceModal","historiqueModal","setHistoriqueModal","previsionnelLoading","setPrevisionnelLoading","assistanceLoading","setAssistanceLoading","memberForm","setMemberForm","pseudo","email","password","role","genre","tranche_age","profession","ville_residence","origine","situation_matrimoniale","niveau_education","departement","departement_ids","qualification","telephone","adresse","image","editMemberModal","setEditMemberModal","editMemberForm","setEditMemberForm","sertDepartement","setSertDepartement","selectedImage","setSelectedImage","imagePreview","setImagePreview","editSelectedImage","setEditSelectedImage","editImagePreview","setEditImagePreview","setNetworkData","stats","available_users","availableResponsables","setAvailableResponsables","fetchData","churchFilter","_id","churchId","eglise_locale","reseauData","statsData","grsData","membersData","availableUsersData","_reseauRes$data","reseauRes","networks","getById","_statsRes$data","statsRes","getStatsById","_grsRes$data","grsRes","getGroups","_membersRes$data","membersRes","getMembers","_availableUsersRes$da","availableUsersRes","users","getAvailable","err","processedError","handleApiError","current_role","defaultChurchId","generatedName","generateGroupName","user1","find","u","user2","responsableName","cleanName","replace","trim","deleteDialogOpen","setDeleteDialogOpen","grToDelete","setGrToDelete","handleAddMember","_userRes$data","_userRes$data$data","_userRes$data2","_userRes$data2$data","_userRes$data3","_userRes$data4","imageUrl","_response$data","_response$data$data","_response$data2","FormData","append","uploadProfileImage","toast","newMemberData","eglise_locale_id","key","userRes","create","newUserId","groups","addMember","user_id","_error$response8","_error$response1","_error$response10","_error$response12","_error$response13","errorMessage","status","_error$response9","_error$response9$data","_error$response0","_error$response0$data","serverMessage","_error$response11","_error$response11$dat","includes","_error$response14","_error$response14$dat","_error$response15","_error$response15$dat","serverError","deleteMemberDialogOpen","setDeleteMemberDialogOpen","memberToDelete","setMemberToDelete","grId","userId","Loading","titre","SecureErrorMessage","AccessControl","allowedRoles","bgcolor","Navbar","Container","border","startIcon","AssessmentIcon","backgroundColor","PeopleIcon","PersonIcon","totalGroups","stat","_networkData$grs","_networkData$reseau$r4","_networkData$reseau2$","_networkData$reseau3$","_networkData$reseau4","_networkData$reseau4$","membresSet","Set","_m$user","_m$user2","memberId","resp1Id","resp2Id","AddIcon","mx","_gr$responsable4","_gr$responsable5","_gr$responsable6","_gr$members2","_gr$members3","EditIcon","handleDeleteGr","member","_networkData$members","_member$user3","_member$user4","fullMemberData","_m$user3","_m$user4","_member$user","_member$user2","memberData","borderRadius","formatQualificationWithFallback","_memberData$user_depa","user_departments","ud","department_id","handleRemoveMember","Math","random","CardActions","pt","InputProps","readOnly","placeholder","responsable1_id","superieur_hierarchique_id","responsable2_id","_error$response3","_error$response5","_error$response4","_error$response4$data","_error$response6","_error$response6$data","_error$response7","_error$response7$data","handleAddGr","superieur_hierarchique","src","alt","objectFit","marginRight","handleRemoveImage","hidden","accept","file","files","startsWith","reader","FileReader","onload","result","readAsDataURL","GENRE_OPTIONS","TRANCHE_AGE_OPTIONS","COUNTRIES","country","SITUATION_MATRIMONIALE_OPTIONS","NIVEAU_EDUCATION_OPTIONS","QUALIFICATION_OPTIONS","qual","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","multiple","renderValue","selected","flexWrap","dept","d","defaultEgliseLocale","onEnter","_res$data","res","group","update","handleEditGr","handleEditRemoveImage","_response$data3","_response$data3$data","_response$data4","filteredData","obj","_error$response16","_error$response19","_error$response20","_error$response21","_error$response17","_error$response17$dat","_error$response18","_error$response18$dat","_error$response22","_error$response22$dat","_error$response23","_error$response23$dat","handleUpdateMember","DeleteConfirmDialog","handleCloseDeleteDialog","onConfirm","handleCloseDeleteMemberDialog","removeMember","_error$response24","_error$response27","_error$response28","_error$response29","_error$response25","_error$response25$dat","_error$response26","_error$response26$dat","_error$response30","_error$response30$dat","_error$response31","_error$response31$dat","PrevisionnelModal","handlePrevisionnelModalClose","previsionnelData","AssistanceModal","handleAssistanceModalClose","assistanceData","_error$response2","_error$response2$data","HistoriqueCulteModal","formatQualification","fallback","arguments","showMessage","isSuperviseur","isCollecteurCulte","elevation","paragraph","showTitle","showIcon","action","getSeverity","errorType","errorDisplay","userMessage","AlertTitle","process","storageKey","defaultPreferences","language","loadPreferences","preferences","savePreferences","getPreference","setPreference","applyPreferences","getAllPreferences","applyLanguage","listenToSystemTheme","authAxios","post","filters","params","URLSearchParams","get","toString","put","getPreferences","updatePreferences","updateEmailPreferences","email_notifications","UserPreferences","setPreferences","initialPreferences","setInitialPreferences","setIsLoading","hasChanges","setHasChanges","forceUpdate","setForceUpdate","_apiPreferences$data","_apiPreferences$data2","_apiPreferences$data$","_apiPreferences$data3","currentLanguage","getCurrentLanguage","preferencesService","apiPreferences","preferencesApiService","loadedPreferences","hasLanguageChanged","hasThemeChanged","hasAutoThemeChanged","hasEmailNotificationsChanged","handlePreferenceChange","Settings","Language","getAvailableLanguages","lang","code","flag","nativeName","toUpperCase","Email","Palette","fontStyle","handleResetPreferences","setLanguage","apiResponse","success","log","warn","apiError","timestamp","now","getByNetwork","page","url","DialogContentText","autoFocus","getChaineImpact","getChaineImpactByUser","updateChaineImpact","deleteChaineImpact"],"sourceRoot":""}