{"version":3,"file":"static/js/360.5e207d4e.chunk.js","mappings":"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","sources":["pages/networks/Networks.js","components/AccessControl.js","components/common/SecureErrorMessage.js","../node_modules/@mui/material/esm/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/esm/AlertTitle/AlertTitle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport i18nService from '../../services/i18nService';\nimport { handleApiError } from '../../utils/errorHandler';\nimport { \n  Container, \n  Typography, \n  Paper, \n  Box, \n  Grid,\n  Button,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Navbar from '../../components/Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport Loading from '../../components/Loading';\nimport SecureErrorMessage from '../../components/common/SecureErrorMessage';\nimport { apiService } from '../../services/apiService';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { usePermissions } from '../../hooks/usePermissions';\nimport { useSelectedChurch } from '../../hooks/useSelectedChurch';\nimport { formatQualificationWithFallback } from '../../utils/qualificationFormatter';\nimport AccessControl from '../../components/AccessControl';\n\nconst NetworkCard = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(3),\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n  transition: 'transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: theme.shadows[4]\n  }\n}));\n\nconst InfoRow = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: theme.spacing(1),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  '&:last-child': {\n    borderBottom: 'none'\n  }\n}));\n\nconst Networks = () => {\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.auth);\n  const permissions = usePermissions();\n  const { selectedChurch, changeSelectedChurch, churches } = useSelectedChurch();\n  const [networks, setNetworks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userNetworkId, setUserNetworkId] = useState(null);\n\n  // Récupérer l'ID du réseau de l'utilisateur connecté (collecteur)\n  useEffect(() => {\n    const fetchUserNetwork = async () => {\n      if (user && (user.current_role || user.role) === 'collecteur_reseaux') {\n        try {\n          const userId = user.id || user._id;\n          if (!userId) return; // Sécurité\n          const res = await apiService.users.getNetwork(userId);\n          setUserNetworkId(res.data.networkId);\n        } catch (err) {\n          setUserNetworkId(null);\n        }\n      }\n    };\n    fetchUserNetwork();\n  }, [user]);\n\n  useEffect(() => {\n    const fetchNetworks = async () => {\n      try {\n        let response;\n        if (permissions.isAdmin || permissions.isSuperAdmin || permissions.isManager) {\n          // Pour les admins et managers, utiliser l'église sélectionnée\n          if (selectedChurch) {\n            const churchId = selectedChurch.id || selectedChurch._id;\n            response = await apiService.networks.getAll({ churchId });\n          } else {\n            // Si pas d'église sélectionnée, ne pas afficher de données\n            setNetworks([]);\n            setLoading(false);\n            return;\n          }\n        } else if (user?.eglise_locale) {\n          // Pour les autres utilisateurs, toujours filtrer par leur église\n          const userChurchId = typeof user.eglise_locale === 'object' ? user.eglise_locale.id || user.eglise_locale._id : user.eglise_locale;\n          response = await apiService.networks.getAll({ churchId: userChurchId });\n        } else {\n          response = await apiService.networks.getAll();\n        }\n        const networksData = response.data?.data || response.data || [];\n\n        // Pour chaque réseau, récupérer ses stats via le bon endpoint\n        const statsPromises = networksData.map(async (network) => {\n          try {\n            const statsRes = await apiService.networks.getStatsById(network.id || network._id);\n            return { ...network, stats: statsRes.data };\n          } catch (err) {\n            const processedError = handleApiError(err, `erreur lors de la récupération des stats pour ${network.nom}:`);\n            // Si erreur, on garde le réseau sans stats\n            return { ...network, stats: null };\n          }\n        });\n\n        const networksWithStats = await Promise.all(statsPromises);\n\n        // Transformer les données pour correspondre au format attendu\n        const transformedNetworks = networksWithStats.map(network => {\n          const d = network.stats?.data ?? {};\n          \n          const transformed = {\n            id: network.id || network._id,\n            nom: network.nom,\n            responsables: network.responsable2?.username\n              ? `${network.responsable1?.username?.split(' ')[0]} & ${network.responsable2?.username?.split(' ')[0]}`\n              : network.responsable1?.username?.split(' ')[0],\n            nb_gr: d.totalGroups ?? 0,\n            nb_12: d[12] ?? 0,\n            nb_144: d[144] ?? 0,\n            nb_1728: d[1728] ?? 0,\n            nb_respo_gr: d[\"Responsables de GR\"] ?? 0,\n            nb_leader: d[\"Leader\"] ?? 0,\n            nb_leader_tous: d[\"Leader (Tous)\"] ?? 0,\n            nb_membre: d[\"Membre simple\"] ?? 0\n          };\n          \n          return transformed;\n        });\n\n        // Trier les réseaux par ordre décroissant de l'effectif total\n        const sortedNetworks = transformedNetworks.sort((a, b) => {\n          const totalA = calculateTotal(a);\n          const totalB = calculateTotal(b);\n          return totalB - totalA; // Ordre décroissant\n        });\n\n        setNetworks(sortedNetworks);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchNetworks();\n  }, [user, selectedChurch]);\n\n  const calculateTotal = (network) => {\n    return (\n      (network.nb_12 || 0) +\n      (network.nb_144 || 0) +\n      (network.nb_1728 || 0) +\n      (network.nb_leader || 0) +\n      (network.nb_membre || 0) +\n      (network.responsables ? network.responsables.split('&').length : 0)\n    );\n  };\n\n  if (loading) return <Loading titre={i18nService.t('networks.loading')} />;\n  if (error) return <SecureErrorMessage error={error} title={i18nService.t('errors.loading')} />;\n\n  return (\n    <AccessControl allowedRoles={['SUPER_ADMIN', 'ADMIN', 'MANAGER', 'COLLECTEUR_RESEAUX']}>\n      <Box sx={{ minHeight: '100vh', bgcolor: 'background.default' }}>\n        <Navbar />\n\n      <Container maxWidth=\"lg\" sx={{ mt: 0, mb: 4 }}>\n        {/* Titre et filtre d'église sur la même ligne - Responsive */}\n        <Box sx={{ \n          mb: 4, \n          display: 'flex', \n          flexDirection: { xs: 'column', sm: 'row' },\n          justifyContent: 'space-between', \n          alignItems: { xs: 'stretch', sm: 'center' },\n          gap: { xs: 2, sm: 0 }\n        }}>\n                      <Typography variant=\"h4\" sx={{ color: 'primary.main', fontWeight: 'bold' }}>\n              {i18nService.t('networks.list.title')}\n            </Typography>\n          \n          {/* Filtre d'église pour les admins et super-admins */}\n          {(permissions.isAdmin || permissions.isSuperAdmin) && (\n            <FormControl sx={{ \n              minWidth: { xs: '100%', sm: 250 },\n              maxWidth: { xs: '100%', sm: 300 }\n            }}>\n              <InputLabel id=\"church-select-label\">{i18nService.t('networks.list.filterByChurch')}</InputLabel>\n              <Select\n                labelId=\"church-select-label\"\n                value={selectedChurch?.id || selectedChurch?._id || ''}\n                label={i18nService.t('networks.list.filterByChurch')}\n                onChange={(e) => {\n                  const churchId = e.target.value;\n                  changeSelectedChurch(churchId);\n                }}\n                sx={{ backgroundColor: '#fdfdfd' }}\n              >\n                {churches.map((church) => (\n                  <MenuItem key={church.id || church._id} value={church.id || church._id}>{church.nom}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          )}\n        </Box>\n        {networks.length === 0 ? (\n          <Box \n            sx={{ \n              textAlign: 'center', \n              py: 8, \n              px: 2,\n              backgroundColor: 'background.paper',\n              borderRadius: 2,\n              border: '2px dashed',\n              borderColor: 'divider',\n              mx: 2\n            }}\n          >\n            <Typography variant=\"h5\" color=\"text.secondary\" gutterBottom>\n              Aucun réseau trouvé\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n              {selectedChurch \n                ? i18nService.t('networks.noNetworksForChurch', { churchName: selectedChurch.nom })\n                : i18nService.t('networks.noNetworksAvailable')\n              }\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Les réseaux apparaîtront ici une fois créés\n            </Typography>\n          </Box>\n        ) : (\n          <Grid container>\n            {networks.map((network) => (\n            <Grid data-aos=\"fade-up\" sx={{\n              width: '100%',\n              padding: '10px 10px 10px 10px',\n              '@media (min-width:700px) and (max-width:1099px)': { width: '50%', },\n              '@media (min-width:1100px) and (max-width:1599px)': { width: '33.33%', },\n              '@media (min-width:1600px)': { width: '25%' },\n              flexBasis: 'unset',\n              maxWidth: 'unset',\n              flexGrow: 0,\n              flexShrink: 0,\n              height: '100%'\n            }} key={network.id}>\n              <NetworkCard elevation={2} >\n                <Typography variant=\"h5\" gutterBottom>\n                  {network.nom}\n                </Typography>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.responsables')}</Typography>\n                  <Typography>{network.responsables || '-'}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.gr')}</Typography>\n                  <Typography>{network.nb_gr}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.group12')}</Typography>\n                  <Typography>{network.nb_12}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.group144')}</Typography>\n                  <Typography>{network.nb_144}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.group1728')}</Typography>\n                  <Typography>{network.nb_1728}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.responsableGR')}</Typography>\n                  <Typography>{network.nb_respo_gr}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.leader')}</Typography>\n                  <Typography>{network.nb_leader}</Typography>\n                </InfoRow>\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.leaderAll')}</Typography>\n                  <Typography>{network.nb_leader_tous}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                  <Typography variant=\"subtitle2\">{i18nService.t('networks.list.member')}</Typography>\n                  <Typography>{network.nb_membre}</Typography>\n                </InfoRow>\n\n                <InfoRow>\n                <Typography variant=\"h6\" sx={{ fontWeight: 'bold', fontSize: '1.1rem', color: 'primary.main' }}>\n                    {i18nService.t('networks.list.total')}\n                  </Typography>\n                  <Typography sx={{ fontWeight:'bold', fontSize: '1.1rem', color: 'primary.main' }}>{calculateTotal(network)}</Typography>\n                </InfoRow>\n\n                <Box sx={{ mt: 'auto', pt: 2 }}>\n                  \n                  {/* Debug : afficher les IDs pour vérification - Supprimé pour la production */}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    onClick={() => navigate(`/networks/${network.id}`)}\n                    disabled={\n                      (user?.current_role || user?.role) === 'collecteur_reseaux' &&\n                      (userNetworkId === null || String(userNetworkId) !== String(network.id))\n                    }\n                  >\n                    {i18nService.t('common.actions.view')}\n                  </Button>\n                </Box>\n              </NetworkCard>\n            </Grid>\n          ))}\n        </Grid>\n        )}\n      </Container>\n      </Box>\n    </AccessControl>\n  );\n};\n\nexport default Networks;\n","import React from 'react';\nimport { Box, Typography, Paper } from '@mui/material';\nimport { usePermissions } from '../hooks/usePermissions';\nimport i18nService from '../services/i18nService';\n\nconst AccessControl = ({ \n  allowedRoles = [], \n  children, \n  fallback = null,\n  showMessage = true \n}) => {\n  const permissions = usePermissions();\n  \n  // Vérifier si l'utilisateur a un des rôles autorisés\n  const hasAccess = allowedRoles.some(role => {\n    switch (role) {\n      case 'SUPER_ADMIN':\n        return permissions.isSuperAdmin;\n      case 'ADMIN':\n        return permissions.isAdmin;\n      case 'MANAGER':\n        return permissions.isManager;\n      case 'SUPERVISEUR':\n        return permissions.isSuperviseur;\n      case 'COLLECTEUR_CULTE':\n        return permissions.isCollecteurCulte;\n      case 'COLLECTEUR_RESEAUX':\n        return permissions.isCollecteurReseaux;\n      default:\n        return false;\n    }\n  });\n\n  if (hasAccess) {\n    return children;\n  }\n\n  if (fallback) {\n    return fallback;\n  }\n\n  if (!showMessage) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ \n      display: 'flex', \n      justifyContent: 'center', \n      alignItems: 'center', \n      minHeight: '50vh',\n      p: 3\n    }}>\n      <Paper elevation={3} sx={{ p: 4, textAlign: 'center', maxWidth: 500 }}>\n        <Typography variant=\"h5\" color=\"error\" gutterBottom>\n          {i18nService.t('errors.accessDenied')}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n          {i18nService.t('errors.insufficientPermissions')}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {i18nService.t('errors.contactAdmin')}\n        </Typography>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default AccessControl;\n","import React from 'react';\nimport { Alert, AlertTitle, Box, Typography } from '@mui/material';\nimport i18nService from '../../services/i18nService';\n\n/**\n * Composant d'affichage d'erreur sécurisé\n * Assure qu'aucune information technique n'est exposée à l'utilisateur\n */\nconst SecureErrorMessage = ({ \n  error, \n  title = i18nService.t('common.actions.error'), \n  variant = 'error',\n  showTitle = true,\n  showIcon = true,\n  sx = {},\n  onClose,\n  action\n}) => {\n  // Si pas d'erreur, ne rien afficher\n  if (!error) return null;\n\n  // Déterminer le type d'erreur et le message approprié\n  const getErrorDisplay = () => {\n    // Si c'est un objet d'erreur traité par notre gestionnaire\n    if (error.type && error.message) {\n      return {\n        type: error.type,\n        message: error.message,\n        severity: getSeverity(error.type)\n      };\n    }\n\n    // Si c'est une erreur API avec message utilisateur\n    if (error.userMessage) {\n      return {\n        type: 'UNKNOWN',\n        message: error.userMessage,\n        severity: 'error'\n      };\n    }\n\n    // Si c'est une erreur avec message simple\n    if (error.message && typeof error.message === 'string') {\n      return {\n        type: 'UNKNOWN',\n        message: error.message,\n        severity: 'error'\n      };\n    }\n\n    // Erreur par défaut sécurisée\n    return {\n      type: 'UNKNOWN',\n      message: i18nService.t('common.unexpectedError'),\n      severity: 'error'\n    };\n  };\n\n  const getSeverity = (errorType) => {\n    switch (errorType) {\n      case 'VALIDATION':\n        return 'warning';\n      case 'AUTHENTICATION':\n      case 'AUTHORIZATION':\n        return 'info';\n      case 'NETWORK':\n        return 'warning';\n      case 'SERVER':\n        return 'error';\n      default:\n        return 'error';\n    }\n  };\n\n  const errorDisplay = getErrorDisplay();\n\n  return (\n    <Box sx={{ mb: 2, ...sx }}>\n      <Alert\n        severity={errorDisplay.severity}\n        variant={variant}\n        onClose={onClose}\n        action={action}\n        sx={{\n          '& .MuiAlert-message': {\n            width: '100%'\n          }\n        }}\n      >\n        {showTitle && (\n          <AlertTitle sx={{ fontWeight: 'bold' }}>\n            {title}\n          </AlertTitle>\n        )}\n        \n        <Typography variant=\"body2\" component=\"div\">\n          {errorDisplay.message}\n        </Typography>\n\n        {/* Informations de débogage pour les développeurs uniquement */}\n        {process.env.NODE_ENV === 'development' && error.status && (\n          <Typography \n            variant=\"caption\" \n            sx={{ \n              display: 'block', \n              mt: 1, \n              opacity: 0.7,\n              fontFamily: 'monospace'\n            }}\n          >\n            Code: {error.status} | Type: {errorDisplay.type}\n          </Typography>\n        )}\n      </Alert>\n    </Box>\n  );\n};\n\nexport default SecureErrorMessage;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getAlertTitleUtilityClass } from \"./alertTitleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root'\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n}));\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, {\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;"],"names":["NetworkCard","styled","Paper","_ref","theme","padding","spacing","height","display","flexDirection","gap","transition","transform","boxShadow","shadows","InfoRow","Box","_ref2","justifyContent","alignItems","borderBottom","concat","palette","divider","Networks","navigate","useNavigate","user","useSelector","state","auth","permissions","usePermissions","selectedChurch","changeSelectedChurch","churches","useSelectedChurch","networks","setNetworks","useState","loading","setLoading","error","setError","userNetworkId","setUserNetworkId","useEffect","async","current_role","role","userId","id","_id","res","apiService","users","getNetwork","data","networkId","err","fetchUserNetwork","_response$data","response","isAdmin","isSuperAdmin","isManager","churchId","getAll","eglise_locale","userChurchId","statsPromises","map","statsRes","getStatsById","network","_objectSpread","stats","handleApiError","nom","networksWithStats","Promise","all","sortedNetworks","_network$stats$data","_network$stats","_network$responsable","_network$responsable2","_network$responsable3","_network$responsable4","_network$responsable5","_network$responsable6","_network$responsable7","_d$totalGroups","_d$","_d$2","_d$3","_d$ResponsablesDeGR","_d$Leader","_d$LeaderTous","_d$MembreSimple","d","responsables","responsable2","username","responsable1","split","nb_gr","totalGroups","nb_12","nb_144","nb_1728","nb_respo_gr","nb_leader","nb_leader_tous","nb_membre","sort","a","b","totalA","calculateTotal","message","fetchNetworks","length","_jsx","Loading","titre","i18nService","t","SecureErrorMessage","title","AccessControl","allowedRoles","children","_jsxs","sx","minHeight","bgcolor","Navbar","Container","maxWidth","mt","mb","xs","sm","Typography","variant","color","fontWeight","FormControl","minWidth","InputLabel","Select","labelId","value","label","onChange","e","target","backgroundColor","church","MenuItem","textAlign","py","px","borderRadius","border","borderColor","mx","gutterBottom","churchName","Grid","container","width","flexBasis","flexGrow","flexShrink","elevation","fontSize","pt","Button","fullWidth","onClick","disabled","String","fallback","showMessage","some","isSuperviseur","isCollecteurCulte","isCollecteurReseaux","p","paragraph","showTitle","showIcon","onClose","action","getSeverity","errorType","errorDisplay","type","severity","userMessage","Alert","AlertTitle","component","process","getAlertTitleUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertTitleRoot","name","memoTheme","typography","fontWeightMedium","marginTop","React","inProps","ref","props","useDefaultProps","className","other","_objectWithoutProperties","ownerState","classes","composeClasses","root","useUtilityClasses","clsx"],"sourceRoot":""}